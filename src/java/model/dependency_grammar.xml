<root>
<comment>Design production rules from general to specific, unless there is error in POS-label</comment>
<comment>Keep production rules as simple as possible</comment>
<comment>Push veml production to lower node, if possible</comment>
<comment>Node ending with "_S" must remain a single_node</comment>
<comment>Node ending with "_D", means that it has generated veml</comment>
<comment>The arguments for the last production, e.g. those with "Pos", must be exactly the same</comment>
<comment></comment>
<comment> msee:hummanattr: occupation, race, religion</comment>
<node>
	<production>S -- Root</production>	
</node>
<node>
	<production>Root -- RootBe</production>
</node>
<node>
	<production>Root -- RootCopula</production>	
</node>
<node>
	<production>Root -- RootEvent</production>	
</node>

<node>
	<production>Root -- RootLocation</production>	
</node>

<node>
	<production>Root -- RootQuery</production>	
</node>



<node>
	<production>RootQuery -- RootIf</production>	
</node>

<node>
	<production>RootQuery -- RootWhat</production>	
</node>

<node>
	<production>RootQuery -- RootWhen</production>	
</node>
<node>
	<production>RootQuery -- RootWhere</production>	
</node>
<node>
	<production>RootQuery -- RootWho</production>	
</node>
<node>
	<production>RootQuery -- RootWhy</production>	
</node>

<node>
	<production>RootQuery -- RootHow</production>	
</node>

<node>
	<production>RootQuery -- RootRobustQuery_5</production>	
</node>

<node>
	<production>RootRobustQuery_5 -- RootRobustQuery_4</production>	
</node>

<node>
	<production>RootRobustQuery_4 -- RootRobustQuery_3</production>	
</node>

<node>
	<production>RootRobustQuery_3 -- RootRobustQuery_2</production>	
</node>

<node>
	<production>RootRobustQuery_2 -- RootRobustQuery</production>	
</node>

<node>
	<production>RootBe -- Expletive(msee:aux,msee:expletive) RootP(ROOT-0,msee:aux) Subject(msee:aux,msee:object)</production>
	<attribute>
		msee:object.*= ARG3.msee:object.*;
	</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:object.id);
	</veml>
</node>	

<node>
	<production>RootBe -- Expletive(msee:aux,msee:expletive) RootP(ROOT-0,msee:aux) Subject(msee:aux,msee:object) Location(msee:object,msee:location)</production>
	<attribute>
		msee:object.*= ARG3.msee:object.*;
		msee:location.*= ARG4.msee:location.*;
	</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:object.id);
		N2 = CreateObjectNodeId(ROOT, msee:location.id);
		AddAttributeString(N1, "location", msee:location.id);
	</veml>
</node>	

<node>
	<production>RootBe -- Expletive(msee:aux,msee:expletive) RootP(ROOT-0,msee:aux) Subject(msee:aux,msee:object) Location(msee:object,msee:location) ParticipialModifier(msee:object,msee:event)</production>
	<attribute>
		msee:object.*= ARG3.msee:object.*;
		msee:location.*= ARG4.msee:location.*;
	</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:object.id);
		N2 = CreateObjectNodeId(ROOT, msee:location.id);
		AddAttributeString(N1, "location", msee:location.id);
	</veml>
</node>	

<node>
	<production>RootBe -- Expletive(msee:aux,msee:expletive) RootP(ROOT-0,msee:aux) Subject(msee:aux,msee:object) ParticipialModifier(msee:object,msee:event)</production>
	<comment>e.g. three persons are walking.</comment>
	<attribute>
		msee:object.*= ARG3.msee:object.*;
		msee:event.*= ARG4.msee:event.*;
	</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:object.id);
		N2 = CreateEventNodeId(ROOT, msee:event.id);		
	</veml>
</node>	



<node>
	<production>RootBe -- Expletive(msee:aux,msee:expletive) RootP(ROOT-0,msee:aux) Subject(msee:aux,msee:object) ParticipialModifier(msee:object,msee:event) Location(msee:event,msee:location)</production>
	<comment>e.g. three persons are walking in the courtyard.</comment>
	<attribute>
		msee:object.*= ARG3.msee:object.*;
		msee:event.*= ARG4.msee:event.*;
	</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:object.id);
		N2 = CreateEventNodeId(ROOT, msee:event.id);		
	</veml>
</node>	



<node>
	<production>RootCopula -- Subject(msee:aux,msee:object) RootP(ROOT-0,msee:aux) Prep_in(msee:aux,msee:fluent)</production>
	<comment>He is in a rush/hurry</comment>
	<attribute>
		msee:object.* = ARG1.msee:object.*;		
		msee:fluent.*= ARG3.msee:fluent.*;
	</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:object.id);
		AddAttributeString(N1, "type", msee:object.type);		
		AddAttributeString(N1, "hasFluent", msee:fluent.id);	
	</veml>
</node>

<node>
	<production>RootCopula -- Subject(msee:aux,msee:object) RootP(ROOT-0,msee:aux) Prep_with(msee:aux,msee:object)</production>
	<comment>He is with a friend</comment>
	<attribute>
		msee:object.* = ARG1.msee:object.*;		
		msee:object2.*= ARG3.msee:object.*;
	</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:object.id);
		N2 = CreateObjectNodeId(ROOT, msee:object2.id);
		AddAttributeString(N1, "type", msee:object.type);		
		AddAttributeString(N2, "type", msee:object2.type);		
		AddAttributeString(N1, "with", msee:object2.id);	
	</veml>
</node>

<node>
	<production>RootCopula -- Det(msee:human,msee:det) Subject(msee:hummanattr,msee:human) Copula(msee:hummanattr,msee:aux) RootP(ROOT-0,msee:hummanattr)</production>
	<comment>Her friend is a woman</comment>
	<attribute>
		msee:object.* = ARG2.msee:human.*;
	</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:object.id);
		AddAttributeString(N1, "type", msee:object.type);				
	</veml>
</node>


<node>
	<production>RootCopula -- Subject(msee:hummanattr,msee:human) Copula(msee:hummanattr,msee:aux) RootP(ROOT-0,msee:hummanattr)</production>
	<comment>the man is an Asian/soldier/christian</comment>
	<attribute>
		msee:object.* = ARG1.msee:human.*;
	</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:object.id);
		AddAttributeString(N1, "type", msee:object.type);				
	</veml>
</node>


<node>
	<production>RootCopula -- Subject(msee:hummanattr,msee:hummanattr_2) Copula(msee:hummanattr,msee:aux) RootP(ROOT-0,msee:hummanattr)</production>
	<comment>the teacher is an Asian/christian. hummanattr_2 is "teacher"</comment>
	<attribute>
		msee:object.* = ARG1.msee:hummanattr_2.*;
		msee:object.type = "Human";		
	</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:object.id);
		AddAttributeString(N1, "type", msee:object.type);				
	</veml>
</node>

<node>
	<production>RootCopula -- Subject(msee:yearold,msee:human) Copula(msee:yearold,msee:aux) Npadvmod(msee:yearold,msee:number) RootP(ROOT-0,msee:yearold)</production>
	<comment>the boy is 6 years old.</comment>
	<attribute>
		msee:object.* = ARG1.msee:human.*;
		msee:object.age = ARG3.msee:number.value;
	</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:object.id);
		AddAttributeString(N1, "type", msee:object.type);		
		AddAttributeString(N1, "age", msee:object.age);		
	</veml>
</node>

<node>
	<production>RootCopula -- Subject(msee:event,msee:object) Copula(msee:event,msee:aux) RootP(ROOT-0,msee:event)</production>
	<attribute>
		msee:object.*= ARG1.msee:object.*;
		msee:event.*= ARG3.msee:event.*;
	</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:object.id);
		N2 = CreateEventNodeId(ROOT, msee:event.id);
		AddAttributeString(N2, "type", msee:event.type);
		AddAttributeString(N2, "agent", msee:object.id);	
		AddAttributeString(N1, "type", msee:object.type);		
	</veml>
</node>

<node>
	<production>RootCopula -- Subject(msee:fluent,msee:object) Copula(msee:fluent,msee:aux) RootP(ROOT-0,msee:fluent)</production>
	<attribute>
		msee:object.*= ARG1.msee:object.*;
		msee:fluent.*= ARG2.msee:fluent.*;
	</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:object.id);
		AddAttributeString(N1, "type", msee:object.type);	
		AddAttributeString(N1, "hasFluent", msee:fluent.id);	
	</veml>
</node>	

<node>
	<production>RootCopula -- Subject(msee:fluent,msee:object) AuxPassive(msee:fluent,msee:aux) RootP(ROOT-0,msee:fluent)</production>
	<attribute>
		msee:object.*= ARG1.msee:object.*;
		msee:fluent.*= ARG1.msee:fluent.*;
	</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:object.id);
		AddAttributeString(N1, "type", msee:object.type);	
	</veml>
</node>

<node>
	<production>RootCopula -- Subject(msee:objectattr,msee:object) Copula(msee:objectattr,msee:aux) RootP(ROOT-0,msee:objectattr)</production>
	<attribute>
		msee:object.*= ARG1.msee:object.*;
		msee:objectattr.*= ARG2.msee:objectattr.*;
	</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:object.id);
		AddAttributeString(N1, "type", msee:object.type);				
	</veml>
</node>	

<node>
	<production>RootEvent -- Advmod(msee:event,msee:manner) RootP(ROOT-0,msee:event)</production>
	<comment>First, move it.</comment>
	<attribute>
		msee:event.*= ARG2.msee:event.*;
		msee:manner.*= ARG1.msee:manner.*;
	</attribute>		
	<veml>
		N1 = CreateEventNodeId(ROOT, msee:event.id);
		AddAttributeString(N1, "manner", msee:manner.value);		
	</veml>
</node>

<node>
	<production>RootEvent -- AgentP(msee:event,msee:object) RootP(ROOT-0,msee:event)</production>
	<attribute>
		msee:object.*= ARG1.msee:object.*;		
		msee:event1.*= ARG1.msee:event.*;		
		msee:event1.*= ARG2.msee:event.*;
	</attribute>	
</node>

<node>
	<production>RootEvent -- AgentP(msee:event,msee:object) RootP(ROOT-0,msee:event) Conj_andP(msee:event,msee:event)</production>
	<attribute>
		msee:object.*= ARG1.msee:object.*;		
		msee:event1.*= ARG1.msee:event.*;		
		msee:event1.*= ARG2.msee:event.*;
	</attribute>	
</node>

<node>
	<production>RootEvent -- AgentP(msee:event,msee:object) RootP(ROOT-0,msee:event) Conj_andP(msee:event,msee:event) PurposeClause(msee:event1,msee:event2)</production>	
	<comment>He stops, and bents down to drink some water
		nsubj(stops-2, He-1)
		nsubj(bents-5, He-1)
		xsubj(drink-8, He-1)
		root(ROOT-0, stops-2)
		conj_and(stops-2, bents-5)
		prt(bents-5, down-6)
		aux(drink-8, to-7)
		xcomp(bents-5, drink-8)
		det(water-10, some-9)
		dobj(drink-8, water-10)
	</comment>
</node>

<node>
	<production>RootEvent -- AgentP(msee:event,msee:object) RootP(ROOT-0,msee:event) Conj_andP(msee:event,msee:event) Conj_andP(msee:event,msee:event)</production>
	<attribute>
		msee:object.*= ARG1.msee:object.*;		
		msee:event1.*= ARG1.msee:event.*;		
	</attribute>	
</node>




<node>
	<production>RootEvent -- Agent(msee:event,msee:object) RootP(ROOT-0,msee:event) PurposeClause(msee:event1,msee:event2)</production>
	<comment>
		He opens door to throw trash  
			nsubj(opens-2, He-1)
			root(ROOT-0, opens-2)
			dobj(opens-2, door-3)
			aux(throw-5, to-4)
			xcomp(opens-2, throw-5)
			dobj(throw-5, trash-6)
	</comment>
	<attribute>
		msee:object.*= ARG1.msee:object.*;
		msee:event1.*= ARG1.msee:event.*;
		msee:event1.*= ARG2.msee:event.*;
		msee:event1.*= ARG3.msee:event1.*;
		msee:event2.*= ARG3.msee:event2.*;
	</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:object.id);
		N2 = CreateEventNodeId(ROOT, msee:event1.id);
		N3 = CreateEventNodeId(ROOT, msee:event2.id);
		AddAttributeString(N1, "type", msee:object.type);		
		AddAttributeString(N2, "type", msee:event1.type);
		AddAttributeString(N3, "type", msee:event2.type);
		AddAttributeString(N2, "agent", msee:object.id);
		AddAttributeString(N3, "agent", msee:object.id);
	</veml>
</node>

<node>
	<production>RootEvent -- AgentP(msee:event,msee:object) RootP(ROOT-0,msee:event) Object(msee:event,msee:object) Conj_andP(msee:event,msee:event)</production>	
</node>

<node>
	<production>RootEvent -- AgentP(msee:event,msee:object) RootP(ROOT-0,msee:event) Object(msee:event,msee:object) Conj_andP(msee:event,msee:event) PurposeClause(msee:event1,msee:event2)</production>	
	<comment>He pulls the door and bends down to throw trash to trashcan
			nsubj(pulls-2, He-1)
			nsubj(bends-6, He-1)
			xsubj(throw-9, He-1)
			root(ROOT-0, pulls-2)
			det(door-4, the-3)
			dobj(pulls-2, door-4)
			conj_and(pulls-2, bends-6)
			prt(bends-6, down-7)
			aux(throw-9, to-8)
			xcomp(bends-6, throw-9)
			dobj(throw-9, trash-10)
			prep_to(throw-9, trashcan-12)
	</comment>
</node>

<node>
	<production>RootEvent -- AgentP(msee:event,msee:object) RootP(ROOT-0,msee:event) OpenClause(msee:event1,msee:event2)</production>
	<comment>
		they start eating 
			nsubj(start-2, they-1)
			root(ROOT-0, start-2)
			xcomp(start-2, eating-3)
	</comment>
</node>

<node>
	<production>RootEvent -- AgentP(msee:event,msee:object) RootP(ROOT-0,msee:event) PurposeClause(msee:event1,msee:event2)</production>
	<comment>
		he bends to throw trash 
			nsubj(bends-2, He-1)
			xsubj(throw-4, He-1)
			root(ROOT-0, bends-2)
			aux(throw-4, to-3)
			xcomp(bends-2, throw-4)
			dobj(throw-4, trash-5)		
	</comment>
</node>

<node>
	<production>RootEvent -- Agent(msee:event,msee:object) RootP(ROOT-0,msee:event)</production>
	<attribute>
		msee:object.*= ARG1.msee:object.*;
		msee:event.*= ARG1.msee:event.*;
		msee:event.*= ARG2.msee:event.*;		
	</attribute>
	<veml>
		N1 = CreateEventNodeId(ROOT, msee:event.id);
		N2 = CreateObjectNodeId(ROOT, msee:object.id);		
		AddAttributeString(N1, "type", msee:event.type);
	</veml>
</node>

<node>
	<production>RootEvent -- Agent(msee:event,msee:object) RootP(ROOT-0,msee:event) Agent(msee:event,msee:object) Conj_andP(msee:event,msee:event)</production>
</node>


<node>
	<production>RootEvent -- Agent(msee:event,msee:object) RootP(ROOT-0,msee:event) Destination(msee:event,msee:location)</production>
	<attribute>
		msee:object.*= ARG1.msee:object.*;
		msee:event.*= ARG1.msee:event.*;
		msee:event.*= ARG2.msee:event.*;
		msee:event.*= ARG3.msee:event.*;
	</attribute>
	<veml>
		N1 = CreateEventNodeId(ROOT, msee:event.id);
		AddAttributeString(N1, "type", msee:event.type);
	</veml>
</node>
<node>
	<production>RootEvent -- Agent(msee:event,msee:object) RootP(ROOT-0,msee:event) Location(msee:event,msee:location)</production>
	<attribute>
		msee:object.*= ARG1.msee:object.*;
		msee:event.*= ARG1.msee:event.*;
		msee:event.*= ARG2.msee:event.*;
		msee:event.*= ARG3.msee:event.*;
	</attribute>
	<veml>
		N1 = CreateEventNodeId(ROOT, msee:event.id);
		AddAttributeString(N1, "type", msee:event.type);
	</veml>
</node>


<node>
	<production>RootEvent -- Agent(msee:event,msee:object) RootP(ROOT-0,msee:event) Location(msee:event,msee:location) ParticipialModifier(msee:object,msee:event)</production>
	<attribute>
		msee:object.*= ARG1.msee:object.*;
		msee:event.*= ARG1.msee:event.*;
		msee:event.*= ARG2.msee:event.*;
		msee:event.*= ARG3.msee:event.*;
	</attribute>
	<veml>
		N1 = CreateEventNodeId(ROOT, msee:event.id);
		AddAttributeString(N1, "type", msee:event.type);
	</veml>
</node>

<node>
	<production>RootEvent -- Agent(msee:event,msee:object) RootP(ROOT-0,msee:event) Object(msee:event,msee:object)</production>
	<attribute>
		msee:object.*= ARG1.msee:object.*;
		msee:event.*= ARG1.msee:event.*;
		msee:event.*= ARG2.msee:event.*;
		msee:event.*= ARG3.msee:event.*;
	</attribute>
	<veml>
		N1 = CreateEventNodeId(ROOT, msee:event.id);
		AddAttributeString(N1, "type", msee:event.type);
	</veml>
</node>

<node>
	<production>RootEvent -- Agent(msee:event,msee:object) RootP(ROOT-0,msee:event) Object(msee:event,msee:object) Location(msee:event,msee:location)</production>
	<attribute>
		msee:object1.*= ARG1.msee:object.*;
		msee:object2.*= ARG3.msee:object.*;
		msee:event.*= ARG1.msee:event.*;
		msee:event.*= ARG2.msee:event.*;
		msee:event.*= ARG3.msee:event.*;
		msee:event.*= ARG4.msee:event.*;
		msee:location.*= ARG4.msee:location.*;
	</attribute>
	<veml>
		N1 = CreateEventNodeId(ROOT, msee:event.id);
		N2 = CreateObjectNodeId(ROOT, msee:object1.id);
		N3 = CreateObjectNodeId(ROOT, msee:object2.id);
		AddAttributeString(N1, "type", msee:event.type);
		AddAttributeString(N1, "agent", msee:object1.id);
		AddAttributeString(N1, "patient", msee:object2.id);
		AddAttributeString(N1, "location", msee:location.id);
	</veml>
</node>

<node>
	<production>RootEvent -- Agent(msee:event,msee:object) RootP(ROOT-0,msee:event) Object(msee:event,msee:object) Prt(msee:event,msee:fluent)</production>
	<attribute>
		msee:object.*= ARG1.msee:object.*;
		msee:event.*= ARG1.msee:event.*;
		msee:event.*= ARG2.msee:event.*;
		msee:event.*= ARG3.msee:event.*;
		msee:event.*= ARG4.msee:event.*;
	</attribute>
	<veml>
		N1 = CreateEventNodeId(ROOT, msee:event.id);
		AddAttributeString(N1, "type", msee:event.type);
	</veml>
</node>

<node>
	<production>RootEvent -- Agent(msee:event,msee:object) RootP(ROOT-0,msee:event) Object(msee:event,msee:object) Prt(msee:event,msee:prep)</production>
	<attribute>
		msee:object.*= ARG1.msee:object.*;
		msee:event.*= ARG1.msee:event.*;
		msee:event.*= ARG2.msee:event.*;
		msee:event.*= ARG3.msee:event.*;
		msee:event.*= ARG4.msee:event.*;
	</attribute>
	<veml>
		N1 = CreateEventNodeId(ROOT, msee:event.id);
		AddAttributeString(N1, "type", msee:event.type);
	</veml>
</node>


<node>
	<production>RootEvent -- NounCompound(msee:object,msee:event) RootP(ROOT-0,msee:object)</production>
	<comment>approach table_leg</comment>
	<attribute>
		msee:event.*= ARG1.msee:event.*;
		msee:object.*= ARG2.msee:object.*;
		msee:object.*= ARG2.msee:object.*;
		</attribute>
	<veml>
		N1 = CreateEventNodeId(ROOT, msee:event.id);
		N2 = CreateObjectNodeId(ROOT, msee:object.id);
		AddAttributeString(N1, "type", msee:event.type);
		AddAttributeString(N1, "patient", msee:object.id);
	</veml>
</node>

<node>
	<production>RootEvent -- RootP(ROOT-0,msee:event)</production>
	<comment>Put ball into a can.</comment>
	<attribute>
		msee:event.*= ARG1.msee:event.*;
		</attribute>
	<veml>
		N1 = CreateEventNodeId(ROOT, msee:event.id);
		AddAttributeString(N1, "type", msee:event.type);
	</veml>
</node>

<node>
	<production>RootIf -- Copula(msee:fluent,msee:aux) Subject(msee:fluent,msee:object) RootP(ROOT-0,msee:fluent)</production>
	<attribute>
		msee:object.*= ARG2.msee:object.*;
		msee:fluent.*= ARG1.msee:fluent.*;
	</attribute>
	<veml>
		Q1 = CreateSelectNodeId(ROOT, msee:fluent.value);
		V1 = CreateVariableNodeId(ROOT, msee:fluent.id);
		V2 = CreateVariableNodeId(ROOT, msee:fluent.value);
		V3 = CreateVariableNodeId(ROOT, msee:object.id);		
		N1 = CreateObjectNodeId(ROOT, msee:object.id);	
		N2 = CreateFluentNode(ROOT, msee:fluent.type, msee:fluent.id);
		AddAttributeString(N1, "type", msee:object.type);	
		AddAttributeString(N2, "value", msee:fluent.value);
	</veml>
</node>	

<node>
	<production>RootHow -- Dep(msee:event,msee:how) Aux(msee:event,msee:prep) RootP(ROOT-0,msee:event)</production>
	<comment>How to fold a short.</comment>
	<attribute>
		msee:event.*= ARG3.msee:event.*;
		msee:how.*= ARG1.msee:how.*;
		msee:how.type = "event_type";
	</attribute>		
	<veml>
		Q1 = CreateSelectNodeId(ROOT, msee:how.id);
		Q2 = CreateSelectNodeId(ROOT, msee:how.type);				
		V1 = CreateVariableNodeId(ROOT, msee:how.id);
		V2 = CreateVariableNodeId(ROOT, msee:how.type);
		N1 = CreateEventNodeId(ROOT, msee:how.id);
		N2 = CreateEventNodeId(ROOT, msee:event.id);	
		AddAttributeString(N1, "type", msee:how.type);
		AddAttributeString(N2, "type", msee:event.type);
		AddAttributeString(N2, "subevent", msee:how.id);	
	</veml>
</node>


<node>
	<production>RootLocation -- Subject(msee:aux,msee:object) RootP(ROOT-0,msee:aux) Location(msee:aux,msee:location)</production>
	<attribute>
		msee:object.*= ARG1.msee:object.*;
		msee:location.* = ARG3.msee:location.*;
	</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:object.id);
		N2 = CreateObjectNodeId(ROOT, msee:location.id);
		AddAttributeString(N1, "location", msee:location.id);
	</veml>
</node>


<node>
	<production>RootWhat -- RootWhatEvent</production>	
</node>

<node>
	<production>RootWhat -- RootWhatObject</production>	
</node>

<node>
	<production>RootWhat -- RootWhatHuman</production>	
	<comment>Who is a woman?</comment>
</node>

<node>
	<production>RootWhat -- RootWhatPatient</production>	
</node>



<node>	
	<production>RootWhatEvent -- Object(msee:eventdo,msee:what) Aux(msee:eventdo,msee:aux) Subject(msee:eventdo,msee:object) RootP(ROOT-0,msee:eventdo)</production>
	<comment></comment>
	<attribute>
		msee:what.* = ARG1.msee:what.*;		
		msee:eventdo.* = ARG1.msee:eventdo.*;
		msee:eventdo.* = ARG2.msee:eventdo.*;
		msee:eventdo.* = ARG3.msee:eventdo.*;
		msee:subject.* = ARG3.msee:object.*;	
		msee:eventdo.type = "event_type";				
	</attribute>
	<veml>		
		Q2 = CreateSelectNodeId(ROOT, "event_type");
		Q1 = CreateSelectNodeId(ROOT, msee:eventdo.id);
		V1 = CreateVariableNodeId(ROOT, msee:eventdo.id);
		V2 = CreateVariableNodeId(ROOT, msee:subject.id);	
		V3 = CreateVariableNodeId(ROOT, msee:eventdo.type);	
		N1 = CreateEventNodeId(ROOT, msee:eventdo.id);
		N2 = CreateObjectNodeId(ROOT, msee:subject.id);		
		AddAttributeString(N2, "type", msee:subject.type);
		AddAttributeString(N1, "agent", msee:subject.id);				
		AddAttributeString(N1, "type", msee:eventdo.type);
	</veml>
</node>


<node>	
	<production>RootWhatEvent -- Object(msee:eventdo,msee:what) Aux(msee:eventdo,msee:aux) Subject(msee:eventdo,msee:object) RootP(ROOT-0,msee:eventdo) Location(msee:eventdo,msee:location)</production>
	<comment>e.g. what is he touching?</comment>
	<attribute>
		msee:what.* = ARG1.msee:what.*;		
		msee:eventdo.* = ARG1.msee:eventdo.*;
		msee:eventdo.* = ARG2.msee:eventdo.*;
		msee:eventdo.* = ARG3.msee:eventdo.*;
		msee:subject.* = ARG3.msee:object.*;
		msee:location.* = ARG5.msee:location.*;	
		msee:eventdo.type = "event_type";					
	</attribute>
	<veml>		
		Q2 = CreateSelectNodeId(ROOT, "event_type");
		Q1 = CreateSelectNodeId(ROOT, msee:eventdo.id);
		V1 = CreateVariableNodeId(ROOT, msee:eventdo.id);
		V2 = CreateVariableNodeId(ROOT, msee:subject.id);
		V3 = CreateVariableNodeId(ROOT, msee:location.id);	
		V4 = CreateVariableNodeId(ROOT, msee:eventdo.type);	
		N1 = CreateEventNodeId(ROOT, msee:eventdo.id);
		N2 = CreateObjectNodeId(ROOT, msee:subject.id);
		N3 = CreateObjectNodeId(ROOT, msee:location.id);		
		AddAttributeString(N2, "type", msee:subject.type);
		AddAttributeString(N1, "agent", msee:subject.id);				
		AddAttributeString(N1, "type", msee:eventdo.type);
		AddAttributeString(N1, "location", msee:location.id);
		AddAttributeString(N1, "type", msee:eventdo.type);
	</veml>
</node>


<node>	
	<production>RootWhatObject -- Attr(msee:aux,msee:what) RootP(ROOT-0,msee:aux) Det(msee:object,msee:det) Nsubj(msee:aux,msee:object)</production>
	<comment>What is a button?
	attr(is-2, What-1) root(ROOT-0, is-2) det(button-4, a-3) nsubj(is-2, button-4)
	attr(msee:aux,msee:what) root(ROOT-0,msee:aux) det(msee:object,msee:det) nsubj(msee:aux,msee:object) 
	</comment>
	<attribute>
		msee:what.* = ARG1.msee:what.*;		
		msee:object.* = ARG4.msee:object.*;						
	</attribute>
	<veml>		
		Q1 = CreateSelectNodeId(ROOT, msee:object.id);
		V1 = CreateVariableNodeId(ROOT, msee:object.id);	
		N1 = CreateObjectNodeId(ROOT, msee:object.id);		
		AddAttributeString(N1, "type", msee:object.type);
	</veml>
</node>



<node>	
	<production>RootWhatObject -- Attr(msee:aux,msee:what) RootP(ROOT-0,msee:aux) Location(msee:aux,msee:location)</production>
	<comment>What is in a room?  // testng 
	attr(msee:aux,msee:what) root(ROOT-0,msee:aux) det(msee:location,msee:det) prep_in(msee:aux,msee:location) 
	</comment>
	<attribute>
		msee:what.* = ARG1.msee:what.*;					
		msee:location.* = ARG3.msee:location.*;		
	</attribute>
	<veml>		
		Q1 = CreateSelectNodeId(ROOT, msee:what.id);
		V1 = CreateVariableNodeId(ROOT, msee:what.id);	
		N1 = CreateObjectNodeId(ROOT, msee:what.id);
		N2 = CreateObjectNodeId(ROOT, msee:location.id);	
		AddAttributeString(N2, "type", msee:location.type);		
		AddAttributeString(N1, "location", msee:location.id);
	</veml>
</node>


<node>	
	<production>RootWhatHuman -- Attr(msee:aux,msee:who) RootP(ROOT-0,msee:aux) Det(msee:object,msee:det) Nsubj(msee:aux,msee:object)</production>
	<comment>Who is a human?
	attr(msee:aux,msee:who) root(ROOT-0,msee:aux) det(msee:human,msee:det) nsubj(msee:aux,msee:human)
	</comment>
	<attribute>
		msee:what.* = ARG1.msee:who.*;		
		msee:object.* = ARG4.msee:object.*;						
	</attribute>
	<veml>		
		Q1 = CreateSelectNodeId(ROOT, msee:object.id);
		V1 = CreateVariableNodeId(ROOT, msee:object.id);	
		N1 = CreateObjectNodeId(ROOT, msee:object.id);		
		AddAttributeString(N1, "type", msee:object.type);
		AddAttributeString(N1, "gender", msee:object.gender);
	</veml>
</node>



<node>
	<production>RootWhatPatient -- Attr(msee:aux,msee:what) RootP(ROOT-0,msee:aux) NounCompound(msee:event,msee:humanname) Nsubj(msee:aux,msee:event)</production>
	<comment>
	(attr(msee:aux,msee:what) root(ROOT-0,msee:aux) nn(msee:event,msee:humanname) nsubj(msee:aux,msee:event))
	e.g. What is Dan touching?	
	ref RootWhatPatient -- Object(msee:event,msee:what) Aux(msee:event,msee:aux) Agent(msee:event,msee:object) RootP(ROOT-0,msee:event)
	</comment>
	<attribute>
		msee:what.* = ARG1.msee:what.*;		
		msee:event.* = ARG3.msee:event.*;
		msee:subject.* = ARG3.msee:humanname.*;		
		msee:what.type = "objtype";			
	</attribute>
	<veml>	
		Q3 = CreateSelectNodeId(ROOT, msee:what.type);	
		Q1 = CreateSelectNodeId(ROOT, msee:what.id);
		Q2 = CreateSelectNodeId(ROOT, msee:event.id);
		V1 = CreateVariableNodeId(ROOT, msee:what.id);
		V2 = CreateVariableNodeId(ROOT, msee:event.id);
		V3 = CreateVariableNodeId(ROOT, msee:subject.id);
		V4 = CreateVariableNodeId(ROOT, msee:what.type);	
		N1 = CreateObjectNodeId(ROOT, msee:what.id);
		N2 = CreateObjectNodeId(ROOT, msee:subject.id);
		N3 = CreateEventNodeId(ROOT, msee:event.id);
		AddAttributeString(N2, "name", msee:subject.name);
		AddAttributeString(N3, "agent", msee:subject.id);
		AddAttributeString(N3, "patient", msee:what.id);		
		AddAttributeString(N3, "type", msee:event.type);
		AddAttributeString(N1, "type", msee:what.type);
	</veml>
</node>

<node>	
	<production>RootWhatPatient -- Object(msee:event,msee:what) Aux(msee:event,msee:aux) Agent(msee:event,msee:object) RootP(ROOT-0,msee:event)</production>
	<comment>e.g. what is he touching?</comment>
	<attribute>
		msee:what.* = ARG1.msee:what.*;		
		msee:event.* = ARG1.msee:event.*;
		msee:event.* = ARG2.msee:event.*;
		msee:event.* = ARG3.msee:event.*;
		msee:subject.* = ARG3.msee:object.*;	
		msee:what.type = "objtype";				
	</attribute>
	<veml>		
		Q3 = CreateSelectNodeId(ROOT, msee:what.type);	
		Q1 = CreateSelectNodeId(ROOT, msee:what.id);
		Q2 = CreateSelectNodeId(ROOT, msee:event.id);
		V1 = CreateVariableNodeId(ROOT, msee:what.id);
		V2 = CreateVariableNodeId(ROOT, msee:event.id);
		V3 = CreateVariableNodeId(ROOT, msee:subject.id);
		N1 = CreateObjectNodeId(ROOT, msee:what.id);
		N2 = CreateObjectNodeId(ROOT, msee:subject.id);
		N3 = CreateEventNodeId(ROOT, msee:event.id);
		AddAttributeString(N2, "type", msee:subject.type);
		AddAttributeString(N3, "agent", msee:subject.id);
		AddAttributeString(N3, "patient", msee:what.id);		
		AddAttributeString(N3, "type", msee:event.type);
		V4 = CreateVariableNodeId(ROOT, msee:what.type);
		AddAttributeString(N1, "type", msee:what.type);	
	</veml>
</node>


<node>	
	<production>RootWhatPatient -- Object(msee:event,msee:what) Aux(msee:event,msee:aux) Agent(msee:event,msee:object) RootP(ROOT-0,msee:event) Location(msee:event,msee:location)</production>
	<attribute>
		msee:what.* = ARG1.msee:what.*;		
		msee:event.* = ARG1.msee:event.*;
		msee:event.* = ARG2.msee:event.*;
		msee:event.* = ARG3.msee:event.*;
		msee:event.* = ARG4.msee:event.*;
		msee:subject.* = ARG3.msee:object.*;
		msee:location.* = ARG5.msee:location.*;			
		msee:what.type = "objtype";		
	</attribute>
	<veml>	
		Q3 = CreateSelectNodeId(ROOT, msee:what.type);	
		Q1 = CreateSelectNodeId(ROOT, msee:what.id);
		Q2 = CreateSelectNodeId(ROOT, msee:event.id);
		V1 = CreateVariableNodeId(ROOT, msee:what.id);
		V2 = CreateVariableNodeId(ROOT, msee:event.id);
		V3 = CreateVariableNodeId(ROOT, msee:subject.id);
		V4 = CreateVariableNodeId(ROOT, msee:location.id);
		N1 = CreateObjectNodeId(ROOT, msee:what.id);
		N2 = CreateObjectNodeId(ROOT, msee:subject.id);		
		N3 = CreateEventNodeId(ROOT, msee:event.id);
		N4 = CreateObjectNodeId(ROOT, msee:location.id);
		AddAttributeString(N2, "type", msee:subject.type);
		AddAttributeString(N3, "agent", msee:subject.id);
		AddAttributeString(N3, "patient", msee:what.id);		
		AddAttributeString(N3, "type", msee:event.type);
		AddAttributeString(N3, "location", msee:location.id);			
		V5 = CreateVariableNodeId(ROOT, msee:what.type);
		AddAttributeString(N1, "type", msee:what.type);	
	</veml>
</node>

<node>	
	<production>RootWhatPatient -- SubjectPassive(msee:event,msee:what) Aux(msee:event,msee:aux) AuxPassive(msee:event,msee:aux) RootP(ROOT-0,msee:event)</production>
	<comment>e.g. What is bought?</comment>
	<attribute>
		msee:what.* = ARG1.msee:what.*;		
		msee:event.* = ARG1.msee:event.*;
		msee:event.* = ARG3.msee:event.*;
		msee:event.* = ARG4.msee:event.*;	
		msee:what.type = "objtype";						
	</attribute>
	<veml>	
		Q3 = CreateSelectNodeId(ROOT, msee:what.type);	
		Q1 = CreateSelectNodeId(ROOT, msee:what.id);
		Q2 = CreateSelectNodeId(ROOT, msee:event.id);
		V1 = CreateVariableNodeId(ROOT, msee:what.id);
		V2 = CreateVariableNodeId(ROOT, msee:event.id);		
		N1 = CreateObjectNodeId(ROOT, msee:what.id);		
		N2 = CreateEventNodeId(ROOT, msee:event.id);		
		AddAttributeString(N2, "patient", msee:what.id);		
		AddAttributeString(N2, "type", msee:event.type);			
		V3 = CreateVariableNodeId(ROOT, msee:what.type);
		AddAttributeString(N1, "type", msee:what.type);	
	</veml>
</node>

<node>	
	<production>RootWhatPatient -- SubjectPassive(msee:event,msee:what) AuxPassive(msee:event,msee:aux) RootP(ROOT-0,msee:event)</production>
	<comment>e.g. What is bought?</comment>
	<attribute>
		msee:what.* = ARG1.msee:what.*;		
		msee:event.* = ARG1.msee:event.*;
		msee:event.* = ARG2.msee:event.*;
		msee:event.* = ARG3.msee:event.*;	
		msee:what.type = "objtype";						
	</attribute>
	<veml>			
		Q3 = CreateSelectNodeId(ROOT, msee:what.type);	
		Q1 = CreateSelectNodeId(ROOT, msee:what.id);
		Q2 = CreateSelectNodeId(ROOT, msee:event.id);
		V1 = CreateVariableNodeId(ROOT, msee:what.id);
		V2 = CreateVariableNodeId(ROOT, msee:event.id);		
		N1 = CreateObjectNodeId(ROOT, msee:what.id);		
		N2 = CreateEventNodeId(ROOT, msee:event.id);		
		AddAttributeString(N2, "patient", msee:what.id);		
		AddAttributeString(N2, "type", msee:event.type);		
		V3 = CreateVariableNodeId(ROOT, msee:what.type);
		AddAttributeString(N1, "type", msee:what.type);	
	</veml>
</node>

<node>	
	<production>RootWhatPatient -- SubjectPassive(msee:event,msee:what) AuxPassive(msee:event,msee:aux) RootP(ROOT-0,msee:event) Location(msee:event,msee:location)</production>
	<comment>e.g. What is bought at the office?</comment>
	<attribute>
		msee:what.* = ARG1.msee:what.*;		
		msee:event.* = ARG1.msee:event.*;
		msee:event.* = ARG2.msee:event.*;
		msee:event.* = ARG3.msee:event.*;	
		msee:location.* = ARG4.msee:location.*;	
		msee:what.type = "objtype";					
	</attribute>
	<veml>			
		Q3 = CreateSelectNodeId(ROOT, msee:what.type);	
		Q1 = CreateSelectNodeId(ROOT, msee:what.id);
		Q2 = CreateSelectNodeId(ROOT, msee:event.id);
		V1 = CreateVariableNodeId(ROOT, msee:what.id);
		V2 = CreateVariableNodeId(ROOT, msee:event.id);		
		V3 = CreateVariableNodeId(ROOT, msee:location.id);
		N1 = CreateObjectNodeId(ROOT, msee:what.id);		
		N2 = CreateEventNodeId(ROOT, msee:event.id);
		N3 = CreateObjectNodeId(ROOT, msee:location.id);		
		AddAttributeString(N2, "patient", msee:what.id);		
		AddAttributeString(N2, "type", msee:event.type);
		AddAttributeString(N2, "location", msee:location.id);
		V4 = CreateVariableNodeId(ROOT, msee:what.type);
		AddAttributeString(N1, "type", msee:what.type);	
	</veml>
</node>

<node>
	<production>RootWhen -- Advmod(msee:event,msee:when) Aux(msee:event,msee:aux) Subject(msee:event,msee:object) RootP(ROOT-0,msee:event)</production>
	<comment>When is she walking?	</comment>
	<attribute>
		msee:when.* = ARG1.msee:when.*;
		msee:when.begin = "time_begin";
		msee:when.end = "time_end";		
		msee:when.at = "time_at";	
		msee:object.*= ARG3.msee:object.*;
		msee:event.*= ARG1.msee:event.*;
		msee:event.*= ARG2.msee:event.*;
		msee:event.*= ARG3.msee:event.*;
		msee:event.*= ARG4.msee:event.*;		
	</attribute>
	<veml>		
		Q1 = CreateSelectNodeId(ROOT, msee:when.begin);
		Q2 = CreateSelectNodeId(ROOT, msee:when.end);
		Q3 = CreateSelectNodeId(ROOT, msee:when.at);
		Q4 = CreateSelectNodeId(ROOT, msee:event.id);
		V1 = CreateVariableNodeId(ROOT, msee:when.id);	
		V2 = CreateVariableNodeId(ROOT, msee:when.begin);		
		V3 = CreateVariableNodeId(ROOT, msee:when.end);
		V4 = CreateVariableNodeId(ROOT, msee:when.at);
		V5 = CreateVariableNodeId(ROOT, msee:object.id);
		V6 = CreateVariableNodeId(ROOT, msee:event.id);
		N1 = CreateObjectNodeId(ROOT, msee:object.id);
		N2 = CreateEventNodeId(ROOT, msee:event.id);	
		N3 = CreateTimeNodeId(ROOT, msee:when.id);		
		AddAttributeString(N2, "agent", msee:object.id);
		AddAttributeString(N2, "type", msee:event.type);
		AddAttributeString(N2, "time", msee:when.id);
		AddAttributeString(N3, "at", msee:when.at);
		AddAttributeString(N3, "begin", msee:when.begin);
		AddAttributeString(N3, "end", msee:when.end);
	</veml>
</node>

<node>
	<production>RootWhen -- Advmod(msee:aux,msee:when) RootP(ROOT-0,msee:aux) NounCompound(msee:event,msee:object) Subject(msee:aux,msee:event)</production>
	<comment>When is obect walking?
	0: advmod(is-2,When-1) advmod is When is3002 When3001
	1: root(ROOT-0,is-2) root ROOT is ROOT3000 is3002
	2: nn(walking-4,object-3) nn walking object walking3004 object3003
	3: nsubj(is-2,walking-4) nsubj is walking is3002 walking3004
	advmod(msee:aux,msee:when) root(ROOT-0,msee:aux) nn(msee:event,msee:object) nsubj(msee:aux,msee:event)
	</comment>
	<attribute>
		msee:when.* = ARG1.msee:when.*;
		msee:when.begin = "time_begin";
		msee:when.end = "time_end";		
		msee:when.at = "time_at";	
		msee:object.*= ARG3.msee:object.*;
		msee:event.*= ARG3.msee:event.*;
		msee:event.*= ARG4.msee:event.*;		
	</attribute>
	<veml>		
		Q1 = CreateSelectNodeId(ROOT, msee:when.begin);
		Q2 = CreateSelectNodeId(ROOT, msee:when.end);
		Q3 = CreateSelectNodeId(ROOT, msee:when.at);
		Q4 = CreateSelectNodeId(ROOT, msee:event.id);
		V1 = CreateVariableNodeId(ROOT, msee:when.id);	
		V2 = CreateVariableNodeId(ROOT, msee:when.begin);		
		V3 = CreateVariableNodeId(ROOT, msee:when.end);
		V4 = CreateVariableNodeId(ROOT, msee:when.at);
		V5 = CreateVariableNodeId(ROOT, msee:object.id);
		V6 = CreateVariableNodeId(ROOT, msee:event.id);
		N1 = CreateObjectNodeId(ROOT, msee:object.id);
		N2 = CreateEventNodeId(ROOT, msee:event.id);	
		N3 = CreateTimeNodeId(ROOT, msee:when.id);		
		AddAttributeString(N2, "agent", msee:object.id);
		AddAttributeString(N2, "type", msee:event.type);
		AddAttributeString(N2, "time", msee:when.id);
		AddAttributeString(N3, "at", msee:when.at);
		AddAttributeString(N3, "begin", msee:when.begin);
		AddAttributeString(N3, "end", msee:when.end);
	</veml>
</node>


<node>
	<production>RootWhere -- Advmod(msee:aux,msee:where) RootP(ROOT-0,msee:aux) Subject(msee:aux,msee:object)</production>
	<attribute>
		msee:where.* = ARG1.msee:where.*;
		msee:object.*= ARG3.msee:object.*;	
	</attribute>
	<veml>		
		Q1 = CreateSelectNodeId(ROOT, msee:where.id);
		V1 = CreateVariableNodeId(ROOT, msee:where.id);
		V2 = CreateVariableNodeId(ROOT, msee:object.id);
		N1 = CreateObjectNodeId(ROOT, msee:object.id);
		AddAttributeString(N1, "location", msee:where.id);
	</veml>
</node>

<node>
	<production>RootWhere -- Advmod(msee:aux,msee:where) RootP(ROOT-0,msee:aux) NounCompound(msee:event,msee:humanname) Nsubj(msee:aux,msee:event)</production>
	<comment>Where is Mingtian drinking?	</comment>
	<attribute>
		msee:where.* = ARG1.msee:where.*;
		msee:object.*= ARG3.msee:humanname.*;
		msee:event.*= ARG4.msee:event.*;		
	</attribute>
	<veml>		
		Q1 = CreateSelectNodeId(ROOT, msee:where.id);
		Q2 = CreateSelectNodeId(ROOT, msee:event.id);
		V1 = CreateVariableNodeId(ROOT, msee:where.id);
		V2 = CreateVariableNodeId(ROOT, msee:object.id);
		V3 = CreateVariableNodeId(ROOT, msee:event.id);
		N1 = CreateObjectNodeId(ROOT, msee:object.id);
		N2 = CreateEventNodeId(ROOT, msee:event.id);		
		AddAttributeString(N2, "location", msee:where.id);
		AddAttributeString(N2, "agent", msee:object.id);
		AddAttributeString(N1, "name", msee:object.name);
	</veml>
</node>


<node>
	<production>RootWhere -- Advmod(msee:event,msee:where) Aux(msee:event,msee:aux) Subject(msee:event,msee:object) RootP(ROOT-0,msee:event)</production>
	<attribute>
		msee:where.* = ARG1.msee:where.*;
		msee:object.*= ARG3.msee:object.*;
		msee:event.*= ARG1.msee:event.*;
		msee:event.*= ARG2.msee:event.*;
		msee:event.*= ARG3.msee:event.*;
		msee:event.*= ARG4.msee:event.*;		
	</attribute>
	<veml>		
		Q1 = CreateSelectNodeId(ROOT, msee:where.id);
		Q2 = CreateSelectNodeId(ROOT, msee:event.id);
		V1 = CreateVariableNodeId(ROOT, msee:where.id);
		V2 = CreateVariableNodeId(ROOT, msee:object.id);
		V3 = CreateVariableNodeId(ROOT, msee:event.id);
		N1 = CreateObjectNodeId(ROOT, msee:object.id);
		N2 = CreateEventNodeId(ROOT, msee:event.id);		
		AddAttributeString(N2, "location", msee:where.id);
		AddAttributeString(N2, "agent", msee:object.id);
	</veml>
</node>

<node>
	<production>RootWhere -- Advmod(msee:event,msee:where) Aux(msee:event,msee:aux) Subject(msee:event,msee:object) RootP(ROOT-0,msee:event) Object(msee:event,msee:object)</production>
	<attribute>
		msee:where.* = ARG1.msee:where.*;
		msee:object.*= ARG3.msee:object.*;
		msee:event.*= ARG1.msee:event.*;
		msee:event.*= ARG2.msee:event.*;
		msee:event.*= ARG3.msee:event.*;
		msee:event.*= ARG4.msee:event.*;
		msee:event.*= ARG5.msee:event.*;
		msee:patient.*= ARG5.msee:object.*;		
	</attribute>
	<veml>		
		Q1 = CreateSelectNodeId(ROOT, msee:where.id);
		V1 = CreateVariableNodeId(ROOT, msee:where.id);
		V2 = CreateVariableNodeId(ROOT, msee:object.id);
		V3 = CreateVariableNodeId(ROOT, msee:event.id);
		V4 = CreateVariableNodeId(ROOT, msee:patient.id);
		N1 = CreateObjectNodeId(ROOT, msee:object.id);
		N2 = CreateEventNodeId(ROOT, msee:event.id);
		N3 = CreateObjectNodeId(ROOT, msee:patient.id);		
		AddAttributeString(N2, "location", msee:where.id);
		AddAttributeString(N2, "agent", msee:object.id);
		AddAttributeString(N2, "patient", msee:patient.id);
	</veml>
</node>

<node>
	<production>RootWhere -- Advmod(msee:event,msee:where) Aux(msee:event,msee:aux) Subject(msee:event,msee:object) RootP(ROOT-0,msee:event) Prep(msee:event,msee:from)</production>
	<comment>Where is she walking from?	</comment>
	<attribute>
		msee:where.* = ARG1.msee:where.*;
		msee:object.*= ARG3.msee:object.*;
		msee:event.*= ARG1.msee:event.*;
		msee:event.*= ARG2.msee:event.*;
		msee:event.*= ARG3.msee:event.*;
		msee:event.*= ARG4.msee:event.*;
		msee:event.*= ARG5.msee:event.*;
	</attribute>
	<veml>		
		Q1 = CreateSelectNodeId(ROOT, msee:where.id);
		V1 = CreateVariableNodeId(ROOT, msee:where.id);
		V2 = CreateVariableNodeId(ROOT, msee:object.id);
		V3 = CreateVariableNodeId(ROOT, msee:event.id);
		N1 = CreateObjectNodeId(ROOT, msee:object.id);
		N2 = CreateEventNodeId(ROOT, msee:event.id);
		AddAttributeString(N2, "locationFrom", msee:where.id);
		AddAttributeString(N2, "agent", msee:object.id);
	</veml>
</node>

<node>
	<production>RootWhere -- Advmod(msee:event,msee:where) Aux(msee:event,msee:aux) Subject(msee:event,msee:object) RootP(ROOT-0,msee:event) Prep(msee:event,msee:to)</production>
	<comment>Where is she walking to?	</comment>
	<attribute>
		msee:where.* = ARG1.msee:where.*;
		msee:object.*= ARG3.msee:object.*;
		msee:event.*= ARG1.msee:event.*;
		msee:event.*= ARG2.msee:event.*;
		msee:event.*= ARG3.msee:event.*;
		msee:event.*= ARG4.msee:event.*;
		msee:event.*= ARG5.msee:event.*;
		msee:patient.*= ARG5.msee:object.*;		
	</attribute>
	<veml>		
		Q1 = CreateSelectNodeId(ROOT, msee:where.id);
		V1 = CreateVariableNodeId(ROOT, msee:where.id);
		V2 = CreateVariableNodeId(ROOT, msee:object.id);
		V3 = CreateVariableNodeId(ROOT, msee:event.id);
		V4 = CreateVariableNodeId(ROOT, msee:patient.id);
		N1 = CreateObjectNodeId(ROOT, msee:object.id);
		N2 = CreateEventNodeId(ROOT, msee:event.id);
		N3 = CreateObjectNodeId(ROOT, msee:patient.id);		
		AddAttributeString(N2, "locationTo", msee:where.id);
		AddAttributeString(N2, "agent", msee:object.id);
		AddAttributeString(N2, "patient", msee:patient.id);
	</veml>
</node>


<node>
	<production>RootWhere -- Advmod(msee:event,msee:where) Aux(msee:event,msee:aux) Subject(msee:event,msee:object) RootP(ROOT-0,msee:event) Prep(msee:event,msee:into)</production>
	<comment>Where is she walking into?	</comment>
	<attribute>
		msee:where.* = ARG1.msee:where.*;
		msee:object.*= ARG3.msee:object.*;
		msee:event.*= ARG1.msee:event.*;
		msee:event.*= ARG2.msee:event.*;
		msee:event.*= ARG3.msee:event.*;
		msee:event.*= ARG4.msee:event.*;
		msee:event.*= ARG5.msee:event.*;
	</attribute>
	<veml>		
		Q1 = CreateSelectNodeId(ROOT, msee:where.id);
		V1 = CreateVariableNodeId(ROOT, msee:where.id);
		V2 = CreateVariableNodeId(ROOT, msee:object.id);
		V3 = CreateVariableNodeId(ROOT, msee:event.id);
		N1 = CreateObjectNodeId(ROOT, msee:object.id);
		N2 = CreateEventNodeId(ROOT, msee:event.id);
		AddAttributeString(N2, "locationTo", msee:where.id);
		AddAttributeString(N2, "agent", msee:object.id);
	</veml>
</node>

<node>
	<production>RootWhere -- Advmod(msee:event,msee:where) AuxPassive(msee:event,msee:aux) SubjectPassive(msee:event,msee:object) RootP(ROOT-0,msee:event)</production>
	<attribute>
		msee:where.* = ARG1.msee:where.*;		
		msee:event.*= ARG1.msee:event.*;
		msee:event.*= ARG2.msee:event.*;
		msee:event.*= ARG3.msee:event.*;
		msee:event.*= ARG4.msee:event.*;		
		msee:patient.*= ARG3.msee:object.*;		
	</attribute>
	<veml>		
		Q1 = CreateSelectNodeId(ROOT, msee:where.id);
		V1 = CreateVariableNodeId(ROOT, msee:where.id);		
		V2 = CreateVariableNodeId(ROOT, msee:event.id);
		V3 = CreateVariableNodeId(ROOT, msee:patient.id);		
		N1 = CreateEventNodeId(ROOT, msee:event.id);
		N2 = CreateObjectNodeId(ROOT, msee:patient.id);
		AddAttributeString(N1, "location", msee:where.id);		
		AddAttributeString(N1, "patient", msee:patient.id);
	</veml>
</node>

<node>
	<production>RootWho -- RootWhat</production>	
</node>


<node>
	<production>RootWho -- Agent(msee:event,msee:who) Agent(msee:event,msee:who) RootP(ROOT-0,msee:event) Conj_and(msee:event,msee:event)</production>
	<comment>Who is walking and throwing.</comment>
	<attribute>
		msee:who.* = ARG1.msee:who.*;
		msee:event1.* = ARG1.msee:event.*;
		msee:event2.* = ARG2.msee:event.*;							
		msee:who.name = "agent_name";
	</attribute>
	<veml>		
		Q3 = CreateSelectNodeId(ROOT, "agent_name");
		Q1 = CreateSelectNodeId(ROOT, msee:who.id);
		Q2 = CreateSelectNodeId(ROOT, msee:event1.id);
		Q4 = CreateSelectNodeId(ROOT, msee:event2.id);
		V1 = CreateVariableNodeId(ROOT, msee:who.id);
		V2 = CreateVariableNodeId(ROOT, msee:event1.id);
		V3 = CreateVariableNodeId(ROOT, msee:event2.id);		
		V4 = CreateVariableNodeId(ROOT, "agent_name");				  
		N1 = CreateEventNodeId(ROOT, msee:event1.id);
		N2 = CreateEventNodeId(ROOT, msee:event2.id);
		N3 = CreateObjectNodeId(ROOT, msee:who.id);				
		AddAttributeString(N1, "type", msee:event1.type);
		AddAttributeString(N2, "type", msee:event2.type);
		AddAttributeString(N1, "agent", msee:who.id);		
		AddAttributeString(N2, "agent", msee:who.id);
		AddAttributeString(N2, "name", msee:who.name);
	</veml>
</node>

<node>
	<production>RootWho -- Agent(msee:event,msee:who) Agent(msee:event,msee:who) RootP(ROOT-0,msee:event) Conj_and(msee:event,msee:event) Object(msee:event,msee:object)</production>
	<comment>Who is walking and has a hat.</comment>
	<attribute>
		msee:who.* = ARG1.msee:who.*;
		msee:event1.* = ARG1.msee:event.*;
		msee:event2.* = ARG2.msee:event.*;							
		msee:who.name = "agent_name";
	</attribute>
	<veml>		
		Q3 = CreateSelectNodeId(ROOT, "agent_name");
		Q1 = CreateSelectNodeId(ROOT, msee:who.id);
		Q2 = CreateSelectNodeId(ROOT, msee:event1.id);
		Q4 = CreateSelectNodeId(ROOT, msee:event2.id);
		V1 = CreateVariableNodeId(ROOT, msee:who.id);
		V2 = CreateVariableNodeId(ROOT, msee:event1.id);
		V3 = CreateVariableNodeId(ROOT, msee:event2.id);		
		V4 = CreateVariableNodeId(ROOT, "agent_name");				  
		N1 = CreateEventNodeId(ROOT, msee:event1.id);
		N2 = CreateEventNodeId(ROOT, msee:event2.id);
		N3 = CreateObjectNodeId(ROOT, msee:who.id);				
		AddAttributeString(N1, "type", msee:event1.type);
		AddAttributeString(N2, "type", msee:event2.type);
		AddAttributeString(N1, "agent", msee:who.id);		
		AddAttributeString(N2, "agent", msee:who.id);
		AddAttributeString(N2, "name", msee:who.name);
	</veml>
</node>


<node>
	<production>RootWho -- Agent(msee:event,msee:who) Agent(msee:event,msee:who) RootP(ROOT-0,msee:event) Object(msee:event,msee:object) Aux(msee:event,msee:aux) Conj_and(msee:event,msee:event)</production>
	<comment>Who has a hat and is walking?</comment>
	<attribute>
		msee:who.* = ARG1.msee:who.*;
		msee:event1.* = ARG1.msee:event.*;
		msee:event2.* = ARG2.msee:event.*;							
		msee:who.name = "agent_name";
	</attribute>
	<veml>		
		Q3 = CreateSelectNodeId(ROOT, "agent_name");
		Q1 = CreateSelectNodeId(ROOT, msee:who.id);
		Q2 = CreateSelectNodeId(ROOT, msee:event1.id);
		Q4 = CreateSelectNodeId(ROOT, msee:event2.id);
		V1 = CreateVariableNodeId(ROOT, msee:who.id);
		V2 = CreateVariableNodeId(ROOT, msee:event1.id);
		V3 = CreateVariableNodeId(ROOT, msee:event2.id);		
		V4 = CreateVariableNodeId(ROOT, "agent_name");				  
		N1 = CreateEventNodeId(ROOT, msee:event1.id);
		N2 = CreateEventNodeId(ROOT, msee:event2.id);
		N3 = CreateObjectNodeId(ROOT, msee:who.id);				
		AddAttributeString(N1, "type", msee:event1.type);
		AddAttributeString(N2, "type", msee:event2.type);
		AddAttributeString(N1, "agent", msee:who.id);		
		AddAttributeString(N2, "agent", msee:who.id);
		AddAttributeString(N2, "name", msee:who.name);
	</veml>
</node>

<node>
	<production>RootWho -- Agent(msee:event,msee:who) RootP(ROOT-0,msee:event)</production>
	<attribute>
		msee:who.* = ARG1.msee:who.*;
		msee:event.* = ARG1.msee:event.*;
		msee:event.* = ARG2.msee:event.*;	
		msee:who.name = "agent_name";	
	</attribute>
	<veml>		
		Q3 = CreateSelectNodeId(ROOT, "agent_name");
		Q1 = CreateSelectNodeId(ROOT, msee:who.id);
		Q2 = CreateSelectNodeId(ROOT, msee:event.id);
		V1 = CreateVariableNodeId(ROOT, msee:who.id);
		V2 = CreateVariableNodeId(ROOT, msee:event.id);	
		V3 = CreateVariableNodeId(ROOT, "agent_name");			  
		E1 = CreateEventNodeId(ROOT, msee:event.id);
		O1 = CreateObjectNodeId(ROOT, msee:who.id);		
		AddAttributeString(E1, "type", msee:event.type);
		AddAttributeString(O1, "name", msee:who.name);
	</veml>
</node>

<node>
	<production>RootWho -- Agent(msee:event,msee:who) RootP(ROOT-0,msee:event) Object(msee:event,msee:object)</production>
	<attribute>
		msee:who.* = ARG1.msee:who.*;
		msee:event.* = ARG1.msee:event.*;
		msee:event.* = ARG2.msee:event.*;
		msee:event.* = ARG3.msee:event.*;	
		msee:object.*= ARG3.msee:object.*;	
		msee:who.name = "agent_name";

	</attribute>
	<veml>		
		Q3 = CreateSelectNodeId(ROOT, "agent_name");
		Q1 = CreateSelectNodeId(ROOT, msee:who.id);
		Q2 = CreateSelectNodeId(ROOT, msee:event.id);
		V1 = CreateVariableNodeId(ROOT, msee:who.id);
		V2 = CreateVariableNodeId(ROOT, msee:event.id);
		V3 = CreateVariableNodeId(ROOT, msee:object.id);
		V4 = CreateVariableNodeId(ROOT, "agent_name");			  
		E1 = CreateEventNodeId(ROOT, msee:event.id);
		O1 = CreateObjectNodeId(ROOT, msee:who.id);
		O2 = CreateObjectNodeId(ROOT, msee:object.id);
		AddAttributeString(E1, "type", msee:event.type);
		AddAttributeString(O1, "name", msee:who.name);	
	</veml>
</node>

<node>
	<production>RootWho -- Attr(msee:aux,msee:who) RootP(ROOT-0,msee:aux) Agent(msee:aux,msee:event)</production>
	<comment>e.g. Who is walking?</comment>
	<attribute>
		msee:who.* = ARG1.msee:who.*;
		msee:event.* = ARG3.msee:event.*;		
		msee:who.name = "agent_name";
	</attribute>
	<veml>		
		Q3 = CreateSelectNodeId(ROOT, "agent_name");
		Q1 = CreateSelectNodeId(ROOT, msee:who.id);
		Q2 = CreateSelectNodeId(ROOT, msee:event.id);
		V1 = CreateVariableNodeId(ROOT, msee:who.id);
		V2 = CreateVariableNodeId(ROOT, msee:event.id);		
		V3 = CreateVariableNodeId(ROOT, "agent_name");				  
		E1 = CreateEventNodeId(ROOT, msee:event.id);
		O1 = CreateObjectNodeId(ROOT, msee:who.id);		
		AddAttributeString(E1, "type", msee:event.type);
		AddAttributeString(E1, "agent", msee:who.id);
		AddAttributeString(O1, "name", msee:who.name);
	</veml>
</node>




<node>
	<production>RootWho -- Attr(msee:aux,msee:who) RootP(ROOT-0,msee:aux) Agent(msee:aux,msee:event) Location(msee:event,msee:location)</production>
	<attribute>
		msee:who.* = ARG1.msee:who.*;
		msee:event.* = ARG3.msee:event.*;
		msee:event.* = ARG4.msee:event.*;			
		msee:location.* = ARG4.msee:location.*;		
		msee:who.name = "agent_name";

	</attribute>
	<veml>		
		Q3 = CreateSelectNodeId(ROOT, "agent_name");
		Q1 = CreateSelectNodeId(ROOT, msee:who.id);
		Q2 = CreateSelectNodeId(ROOT, msee:event.id);
		V1 = CreateVariableNodeId(ROOT, msee:who.id);
		V2 = CreateVariableNodeId(ROOT, msee:event.id);
		V3 = CreateVariableNodeId(ROOT, msee:location.id);	
		V4 = CreateVariableNodeId(ROOT, "agent_name");				  
		N1 = CreateEventNodeId(ROOT, msee:event.id);
		N2 = CreateObjectNodeId(ROOT, msee:who.id);		
		N3 = CreateObjectNodeId(ROOT, msee:location.id);
		AddAttributeString(N1, "type", msee:event.type);
		AddAttributeString(N1, "agent", msee:who.id);
		AddAttributeString(N1, "location", msee:location.id);
		AddAttributeString(N2, "name", msee:who.name);
	</veml>
</node>


<node>
	<production>RootWho -- Attr(msee:aux,msee:who) RootP(ROOT-0,msee:aux) Agent(msee:aux,msee:event) Object(msee:object,msee:event) Location(msee:event,msee:location)</production>
	<comment>e.g. Who is walking?</comment>
	<attribute>
		msee:who.* = ARG1.msee:who.*;
		msee:event.* = ARG3.msee:event.*;
		msee:event.* = ARG4.msee:event.*;
		msee:event.* = ARG5.msee:event.*;						
		msee:location.* = ARG5.msee:location.*;
		msee:patient.* = ARG4.msee:object.*;	
		msee:who.name = "agent_name";
			
	</attribute>
	<veml>		
		Q3 = CreateSelectNodeId(ROOT, "agent_name");
		Q1 = CreateSelectNodeId(ROOT, msee:who.id);
		Q2 = CreateSelectNodeId(ROOT, msee:event.id);
		V1 = CreateVariableNodeId(ROOT, msee:who.id);
		V2 = CreateVariableNodeId(ROOT, msee:event.id);
		V3 = CreateVariableNodeId(ROOT, msee:location.id);
		V4 = CreateVariableNodeId(ROOT, msee:patient.id);
		V5 = CreateVariableNodeId(ROOT, "agent_name");					  
		N1 = CreateEventNodeId(ROOT, msee:event.id);
		N2 = CreateObjectNodeId(ROOT, msee:who.id);		
		N3 = CreateObjectNodeId(ROOT, msee:location.id);
		N4 = CreateObjectNodeId(ROOT, msee:patient.id);
		AddAttributeString(N1, "type", msee:event.type);
		AddAttributeString(N1, "agent", msee:who.id);
		AddAttributeString(N1, "location", msee:location.id);
		AddAttributeString(N1, "patient", msee:patient.id);
		AddAttributeString(N2, "name", msee:who.name);
	</veml>
</node>

<node>	
	<production>RootWho -- Attr(msee:aux,msee:who) RootP(ROOT-0,msee:aux) Location(msee:aux,msee:location)</production>
	<comment>who is in a room?  // testng 
	attr(msee:aux,msee:who) root(ROOT-0,msee:aux) det(msee:location,msee:det) prep_in(msee:aux,msee:location) 
	</comment>
	<attribute>
		msee:who.* = ARG1.msee:who.*;					
		msee:location.* = ARG3.msee:location.*;		
	</attribute>
	<veml>		
		Q1 = CreateSelectNodeId(ROOT, msee:who.id);
		V1 = CreateVariableNodeId(ROOT, msee:who.id);	
		N1 = CreateObjectNodeId(ROOT, msee:who.id);
		N2 = CreateObjectNodeId(ROOT, msee:location.id);	
		AddAttributeString(N2, "type", msee:location.type);		
		AddAttributeString(N1, "location", msee:location.id);
	</veml>
</node>

<node>
	<production>RootWho -- Attr(msee:aux,msee:who) RootP(ROOT-0,msee:aux) Object(msee:object,msee:event) Nsubj(msee:aux,msee:object)</production>
	<comment>e.g. Who is buying coffee?</comment>
	<attribute>
		msee:who.* = ARG1.msee:who.*;
		msee:event.* = ARG4.msee:event.*;
		msee:event.* = ARG3.msee:event.*;
		msee:patient.* = ARG3.msee:object.*;
		msee:who.name = "agent_name";
	</attribute>
	<veml>		
		Q3 = CreateSelectNodeId(ROOT, "agent_name");
		Q1 = CreateSelectNodeId(ROOT, msee:who.id);
		Q2 = CreateSelectNodeId(ROOT, msee:event.id);
		V1 = CreateVariableNodeId(ROOT, msee:who.id);
		V2 = CreateVariableNodeId(ROOT, msee:event.id);		
		V4 = CreateVariableNodeId(ROOT, msee:patient.id);	
		V5 = CreateVariableNodeId(ROOT, "agent_name");	  
		N1 = CreateEventNodeId(ROOT, msee:event.id);
		N2 = CreateObjectNodeId(ROOT, msee:who.id);
		N4 = CreateObjectNodeId(ROOT, msee:patient.id);
		AddAttributeString(N1, "type", msee:event.type);
		AddAttributeString(N1, "agent", msee:who.id);				
		AddAttributeString(N1, "patient", msee:patient.id);		
		AddAttributeString(N2, "name", msee:who.name);		
	</veml>	
</node>


<node>
	<production>RootWho -- Attr(msee:aux,msee:who) RootP(ROOT-0,msee:aux) Object(msee:object,msee:event) Nsubj(msee:aux,msee:object) Location(msee:object,msee:location)</production>
	<comment>e.g. Who is buying coffee at the vending_machine? </comment>
	<attribute>
		msee:who.* = ARG1.msee:who.*;
		msee:event.* = ARG4.msee:event.*;
		msee:event.* = ARG3.msee:event.*;
		msee:event.* = ARG5.msee:event.*;						
		msee:location.* = ARG5.msee:location.*;
		msee:patient.* = ARG3.msee:object.*;
		msee:patient.* = ARG5.msee:object.*;	
		msee:who.name = "agent_name";
		
	</attribute>
	<veml>
	Q3 = CreateSelectNodeId(ROOT, "agent_name");

		Q1 = CreateSelectNodeId(ROOT, msee:who.id);
		Q2 = CreateSelectNodeId(ROOT, msee:event.id);		
		V1 = CreateVariableNodeId(ROOT, msee:who.id);
		V2 = CreateVariableNodeId(ROOT, msee:event.id);
		V3 = CreateVariableNodeId(ROOT, msee:location.id);
		V4 = CreateVariableNodeId(ROOT, msee:patient.id);		
		V5 = CreateVariableNodeId(ROOT, "agent_name");	  
		N1 = CreateEventNodeId(ROOT, msee:event.id);
		N2 = CreateObjectNodeId(ROOT, msee:who.id);		
		N3 = CreateObjectNodeId(ROOT, msee:location.id);
		N4 = CreateObjectNodeId(ROOT, msee:patient.id);
		AddAttributeString(N1, "type", msee:event.type);
		AddAttributeString(N1, "agent", msee:who.id);
		AddAttributeString(N1, "location", msee:location.id);		
		AddAttributeString(N1, "patient", msee:patient.id);
		AddAttributeString(N2, "name", msee:who.name);
	</veml>
</node>

<node>
	<production>RootWho -- Attr(msee:aux,msee:who) RootP(ROOT-0,msee:aux) Subject(msee:aux,msee:object)</production>
	<comment>e.g. Who is female?</comment>
	<attribute>
		msee:who.* = ARG1.msee:who.*;
		msee:object.* = ARG3.msee:object.*;		
		msee:who.name = "agent_name";
	</attribute>
	<veml>		
		Q2 = CreateSelectNodeId(ROOT, "agent_name");
		Q1 = CreateSelectNodeId(ROOT, msee:who.id);		
		V1 = CreateVariableNodeId(ROOT, msee:who.id);
		V2 = CreateVariableNodeId(ROOT, "agent_name");				  		
		O1 = CreateObjectNodeId(ROOT, msee:who.id);		
		AddAttributeString(O1, "type", msee:object.type);		
		AddAttributeString(O1, "name", msee:who.name);
	</veml>
</node>

<node>	
	<production>RootWhy -- Advmod(msee:event,msee:why) Aux(msee:event,msee:aux) Subject(msee:event,msee:object) RootP(ROOT-0,msee:event)</production>
	<comment>e.g. why is he buying?
				(advmod(msee:event,msee:why) aux(msee:event,msee:aux) nsubj(msee:event,msee:human) root(ROOT-0,msee:event))
	</comment>
	<attribute>
		msee:why.* = ARG1.msee:why.*;		
		msee:event.*= ARG1.msee:event.*;
		msee:object.*= ARG3.msee:object.*;	
    </attribute>
	<veml>		
		Q1 = CreateSelectNodeId(ROOT, msee:why.id);		
		V1 = CreateVariableNodeId(ROOT, msee:why.id);
		V2 = CreateVariableNodeId(ROOT, msee:object.id);
		V3 = CreateVariableNodeId(ROOT, msee:event.id);
		N1 = CreateObjectNodeId(ROOT, msee:object.id);
		N2 = CreateEventNodeId(ROOT, msee:event.id);
		AddAttributeString(N2, "agent", msee:object.id);
		AddAttributeString(N2, "purpose", msee:why.id);
	</veml>
</node>

<node>	
	<production>RootWhy -- Advmod(msee:event,msee:why) Aux(msee:event,msee:aux) Subject(msee:event,msee:object) RootP(ROOT-0,msee:event) Object(msee:event,msee:object)</production>
	<comment>e.g. why is he buying food?
				(advmod(msee:event,msee:why) aux(msee:event,msee:aux) nsubj(msee:event,msee:human) root(ROOT-0,msee:event) dobj(msee:event,msee:object))
	</comment>
	<attribute>
		msee:why.* = ARG1.msee:why.*;		
		msee:event.*= ARG1.msee:event.*;
		msee:object.*= ARG3.msee:object.*;	
		msee:patient.*= ARG5.msee:object.*;	
    </attribute>
	<veml>		
		Q1 = CreateSelectNodeId(ROOT, msee:why.id);		
		V1 = CreateVariableNodeId(ROOT, msee:why.id);
		V2 = CreateVariableNodeId(ROOT, msee:object.id);
		V3 = CreateVariableNodeId(ROOT, msee:event.id);
		V4 = CreateVariableNodeId(ROOT, msee:patient.id);
		N1 = CreateObjectNodeId(ROOT, msee:object.id);
		N2 = CreateEventNodeId(ROOT, msee:event.id);
		N3 = CreateObjectNodeId(ROOT, msee:patient.id);				
		AddAttributeString(N2, "agent", msee:object.id);
		AddAttributeString(N2, "patient", msee:patient.id);
		AddAttributeString(N2, "purpose", msee:why.id);
	</veml>
</node>


<node>	
	<production>RootWhy -- Advmod(msee:fluent,msee:why) Copula(msee:fluent,msee:aux) Nsubj(msee:fluent,msee:object) RootS(ROOT-0,msee:fluent)</production>
	<comment>e.g. what is door open?
	advmod(msee:fluent,msee:why) cop(msee:fluent,msee:aux) nsubj(msee:fluent,msee:object) root(ROOT-0,msee:fluent)
	advmod(msee:fluent,msee:why) cop(msee:fluent,msee:aux) nsubj(msee:fluent,msee:object) root(ROOT-0,msee:fluent)	
	</comment>
	<attribute>
		msee:why.* = ARG1.msee:why.*;		
		msee:event.id = "event_id";
		msee:fluent.* = ARG2.msee:fluent.*;
		msee:causalrelation.id = "causalrelation_id";
		msee:causalrelation.type = "CausalRelation";
		msee:fluentchange.id = "fluentchange_id";
		msee:fluentchange.type = "FluentChange";
    </attribute>
	<veml>		
		Q1 = CreateSelectNodeId(ROOT, msee:event.id);
		V1 = CreateVariableNodeId(ROOT, msee:event.id);
		V2 = CreateVariableNodeId(ROOT, msee:fluentchange.id);
		V3 = CreateVariableNodeId(ROOT, msee:causalrelation.id);
		N1 = CreateEventNodeId(ROOT, msee:event.id);
		N2 = CreateFluentChangeNode(ROOT, msee:fluentchange.type, msee:fluentchange.id);
		N3 = CreateCausalRelationNode(ROOT, msee:causalrelation.type, msee:causalrelation.id);
		AddAttributeString(N3, "hasEffect", msee:fluentchange.id);
		AddAttributeString(N2, "hasToValue",msee:fluent.value);				
		AddAttributeString(N3, "hasCause", msee:event.id);
	</veml>
</node>




<node>
	<production>Acomp(msee:event,msee:direction) -- AcompPos(msee:event,msee:direction)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
	<veml>
		N1 = CreateEventNodeId(ROOT, msee:event.id);
		AddAttributeString(N1, "type", msee:event.type);
		AddAttributeString(N1, "directionTo", msee:direction.value);
	</veml>
</node>

<node>
	<production>Advmod(msee:aux,msee:when) -- AdvmodPos(msee:aux,msee:when)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>

<node>
	<production>Advmod(msee:aux,msee:where) -- AdvmodPos(msee:aux,msee:where)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>

<node>
	<production>Advmod(msee:event,msee:direction) -- AdvmodPos(msee:event,msee:direction)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
	<veml>
		N1 = CreateEventNodeId(ROOT, msee:event.id);
		AddAttributeString(N1, "type", msee:event.type);
		AddAttributeString(N1, "directionTo", msee:direction.value);
	</veml>
</node>

<node>
	<production>Advmod(msee:event,msee:manner) -- AdvmodPos(msee:event,msee:manner)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>
<node>
	<production>Advmod(msee:event,msee:when) -- AdvmodPos(msee:event,msee:when)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>
<node>
	<production>Advmod(msee:event,msee:where) -- AdvmodPos(msee:event,msee:where)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>

<node>
	<production>Advmod(msee:event,msee:why) -- AdvmodPos(msee:event,msee:why)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>

<node>
	<production>Advmod(msee:fluent,msee:manner) -- AdvmodPos(msee:fluent,msee:manner)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
	<veml>
		N1 = CreateFluentNode(ROOT, msee:fluent.type, msee:fluent.id);
		AddAttributeString(N1, "manner", msee:manner.value);
	</veml>
</node>


<node>
	<production>Advmod(msee:fluent,msee:why) -- AdvmodPos(msee:fluent,msee:why)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>

<node>
	<production>Agent(msee:aux,msee:event) -- Nsubj(msee:aux,msee:event)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>


<node>
	<production>Agent(msee:event,msee:object) -- PremodNsubj(msee:event,msee:object) Nsubj(msee:event,msee:object)</production>
	<attribute>*.*= ARG2.*.*;</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:object.id);
		N2 = CreateEventNodeId(ROOT, msee:event.id);	
		AddAttributeString(N2, "agent", msee:object.id);				
		AddAttributeString(N1, "type", msee:object.type);
	</veml>
</node>

<node>
	<production>Agent(msee:event,msee:object) -- PremodNsubj(msee:event,msee:object) Nsubj(msee:event,msee:object) PostmodNsubj(msee:event,msee:object)</production>
	<attribute>*.*= ARG2.*.*;</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:object.id);
		N2 = CreateEventNodeId(ROOT, msee:event.id);	
		AddAttributeString(N2, "agent", msee:object.id);				
		AddAttributeString(N1, "type", msee:object.type);
	</veml>
</node>


<node>
	<production>Agent(msee:event,msee:object) -- Nsubj(msee:event,msee:object)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:object.id);
		N2 = CreateEventNodeId(ROOT, msee:event.id);	
		AddAttributeString(N1, "type", msee:object.type);
		AddAttributeString(N2, "agent", msee:object.id);			
	</veml>
</node>

<node>
	<production>Agent(msee:event,msee:object) -- Nsubj(msee:event,msee:object) PostmodNsubj(msee:event,msee:object)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:object.id);
		N2 = CreateEventNodeId(ROOT, msee:event.id);	
		AddAttributeString(N1, "type", msee:object.type);
		AddAttributeString(N2, "agent", msee:object.id);			
	</veml>
</node>

<node>
	<production>Agent(msee:event,msee:who) -- Nsubj(msee:event,msee:who)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:who.id);
		N2 = CreateEventNodeId(ROOT, msee:event.id);		
		AddAttributeString(N2, "agent", msee:who.id);
	</veml>
</node>



<node>
	<production>Agent(msee:eventdo,msee:object) -- Nsubj(msee:eventdo,msee:object)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:object.id);
		N2 = CreateEventNodeId(ROOT, msee:eventdo.id);	
		AddAttributeString(N1, "type", msee:object.type);
		AddAttributeString(N2, "agent", msee:object.id);
	</veml>
</node>
<node>
	<production>Agent(msee:eventdo,msee:object) -- Det(msee:object,msee:det) Nsubj(msee:eventdo,msee:object)</production>
	<attribute>*.*= ARG2.*.*;</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:object.id);
		N2 = CreateEventNodeId(ROOT, msee:eventdo.id);	
		AddAttributeString(N2, "agent", msee:object.id);				
		AddAttributeString(N1, "type", msee:object.type);
	</veml>
</node>

<node>
	<production>AgentP(msee:event,msee:object) -- Agent(msee:event,msee:object)</production>
	<attribute>
		msee:object.*= ARG1.msee:object.*;		
		msee:event.*= ARG1.msee:event.*;		
	</attribute>	
</node>

<node>
	<production>AgentP(msee:event,msee:object) -- Agent(msee:event,msee:object) Agent(msee:event,msee:object)</production>
	<attribute>
		msee:object.*= ARG1.msee:object.*;		
		msee:event.*= ARG1.msee:event.*;		
	</attribute>	
</node>

<node>
	<production>AgentP(msee:event,msee:object) -- Agent(msee:event,msee:object) Agent(msee:event,msee:object) Agent(msee:event,msee:object)</production>
	<attribute>
		msee:object.*= ARG1.msee:object.*;		
		msee:event.*= ARG1.msee:event.*;		
	</attribute>	
</node>

<node>
	<production>Amod(msee:human,msee:direction) -- AmodPos(msee:human,msee:direction)</production>
	<attribute>
		msee:human.*= ARG1.msee:human.*;		
		msee:direction.*= ARG1.msee:direction.*;	
	</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:human.id);
		AddAttributeString(N1, "type", msee:human.type);
		AddAttributeString(N1, "direction", msee:direction.value);
	</veml>
</node>

<node>
	<production>Amod(msee:human,msee:yearold) -- AmodPos(msee:human,msee:yearold)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>

<node>
	<production>Amod(msee:object,msee:null) -- Amod_S(msee:object,msee:null)</production>
	<comment>get the first spoon</comment>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>

<node>
	<production>Amod(msee:object,msee:null) -- Amod_S(msee:object,msee:null) Amod_S(msee:object,msee:null)</production>
	<comment>get the first silver spoon</comment>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>

<node>
	<production>Amod(msee:object,msee:null) -- Amod_S(msee:object,msee:null) Amod_S(msee:object,msee:null) Amod_S(msee:object,msee:null)</production>
	<comment>get the first big silver spoon</comment>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>


<node>
	<production>Amod_S(msee:object,msee:color) -- AmodPos(msee:object,msee:color)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:object.id);
		AddAttributeString(N1, "type", msee:object.type);
		AddAttributeString(N1, "color", msee:color.value);
	</veml>
</node>

<node>
	<production>Amod_S(msee:object,msee:direction) -- AmodPos(msee:human,msee:direction)</production>
	<attribute>
		msee:object.*= ARG1.msee:human.*;		
		msee:direction.*= ARG1.msee:direction.*;	
	</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:object.id);
		AddAttributeString(N1, "type", msee:object.type);
		AddAttributeString(N1, "direction", msee:direction.value);
	</veml>
</node>

<node>
	<production>Amod_S(msee:object,msee:direction) -- AmodPos(msee:object,msee:direction)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:object.id);
		AddAttributeString(N1, "type", msee:object.type);
		AddAttributeString(N1, "direction", msee:direction.value);
	</veml>
</node>


<node>
	<production>Amod_S(msee:object,msee:position) -- AmodPos(msee:object,msee:position)</production>
	<comment>get the first spoon</comment>
	<attribute>*.* = ARG1.*.*;</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:object.id);
		AddAttributeString(N1, "type", msee:object.type);
		AddAttributeString(N1, "position", msee:position.value);
	</veml>
</node>

<node>
	<production>Amod_S(msee:object,msee:manner) -- AmodPos(msee:object,msee:manner)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:object.id);
		AddAttributeString(N1, "type", msee:object.type);
		AddAttributeString(N1, "manner", msee:manner.value);
	</veml>
</node>

<node>
	<production>Amod_S(msee:object,msee:size) -- AmodPos(msee:object,msee:size)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:object.id);
		AddAttributeString(N1, "type", msee:object.type);
		AddAttributeString(N1, "size", msee:size.value);
	</veml>
</node>

<node>
	<production>Amod_S(msee:object,msee:null) -- Amod_S(msee:object,msee:color)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>

<node>
	<production>Amod_S(msee:object,msee:null) -- Amod_S(msee:object,msee:direction)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>

<node>
	<production>Amod_S(msee:object,msee:null) -- Amod_S(msee:object,msee:manner)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>

<node>
	<production>Amod_S(msee:object,msee:null) -- Amod_S(msee:object,msee:position)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>

<node>
	<production>Amod_S(msee:object,msee:null) -- Amod_S(msee:object,msee:size)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>


<node>
	<production>Attr(msee:aux,msee:what) -- AttrPos(msee:aux,msee:what)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>


<node>
	<production>Attr(msee:aux,msee:who) -- AttrPos(msee:aux,msee:who)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>

<node>
	<production>Aux(msee:event,msee:aux) -- AuxPos(msee:event,msee:aux)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>

<node>
	<production>Aux(msee:event,msee:prep) -- AuxPos(msee:event,msee:prep)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>

<node>
	<production>Aux(msee:eventdo,msee:aux) -- AuxPos(msee:eventdo,msee:aux)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>

<node>
	<production>AuxPassive(msee:event,msee:aux) -- AuxpassPos(msee:event,msee:aux)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>

<node>
	<production>AuxPassive(msee:fluent,msee:aux) -- AuxpassPos(msee:fluent,msee:aux)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>

<node>
	<production>Conj_and(msee:event,msee:event) -- Conj_andPos(msee:event,msee:event)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>

<node>
	<production>Conj_andP(msee:event,msee:event) -- Conj_and(msee:event,msee:event)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>

<node>
	<production>Conj_andP(msee:event,msee:event) -- Conj_and(msee:event,msee:event) Location(msee:event,msee:location)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>

<node>
	<production>Conj_andP(msee:event,msee:event) -- Conj_and(msee:event,msee:event) Object(msee:event,msee:object)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>

<node>
	<production>Conj_andP(msee:event,msee:event) -- Conj_and(msee:event,msee:event) Object(msee:event,msee:object) Location(msee:event,msee:location)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>

<node>
	<production>Conj_andP(msee:event,msee:event) -- Conj_and(msee:event,msee:event) Object(msee:event,msee:object) Preposition(msee:event,msee:object)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>

<node>
	<production>Conj_andP(msee:event,msee:event) -- Conj_and(msee:event,msee:event) Object(msee:event,msee:object) Prt(msee:event,msee:prep)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>

<node>
	<production>Conj_andP(msee:event,msee:event) -- Conj_and(msee:event,msee:event) Preposition(msee:event,msee:object)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>

<node>
	<production>Conj_andP(msee:event,msee:event) -- Conj_and(msee:event,msee:event) Prt(msee:event,msee:prep)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>

<node>
	<production>Cop(msee:color,msee:aux) -- CopPos(msee:color,msee:aux)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>

<node>
	<production>Cop(msee:event,msee:aux) -- CopPos(msee:event,msee:aux)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>
<node>
	<production>Cop(msee:fluent,msee:aux) -- CopPos(msee:fluent,msee:aux)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
	<veml>
		N1 = CreateFluentNode(ROOT, msee:fluent.type, msee:fluent.id);
		AddAttributeString(N1, "value", msee:fluent.value);
	</veml>
</node>

<node>
	<production>Cop(msee:human,msee:aux) -- CopPos(msee:human,msee:aux)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>

<node>
	<production>Cop(msee:occupation,msee:aux) -- CopPos(msee:occupation,msee:aux)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>

<node>
	<production>Cop(msee:race,msee:aux) -- CopPos(msee:race,msee:aux)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>

<node>
	<production>Cop(msee:religion,msee:aux) -- CopPos(msee:religion,msee:aux)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>



<node>
	<production>Cop(msee:size,msee:aux) -- CopPos(msee:size,msee:aux)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>


<node>
	<production>Cop(msee:yearold,msee:aux) -- CopPos(msee:yearold,msee:aux)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>

<node>
	<production>Copula(msee:event,msee:aux) -- Cop(msee:event,msee:aux)</production>
	<attribute>*.* = ARG1.*.*;</attribute>		
</node>

<node>
	<production>Copula(msee:fluent,msee:aux) -- Advmod(msee:fluent,msee:manner) Cop(msee:fluent,msee:aux)</production>
	<attribute>
		msee:fluent.*= ARG2.msee:fluent.*;
	</attribute>		
</node>

<node>
	<production>Copula(msee:fluent,msee:aux) -- Cop(msee:fluent,msee:aux) Advmod(msee:fluent,msee:manner)</production>
	<attribute>
		msee:fluent.*= ARG1.msee:fluent.*;
	</attribute>		
</node>

<node>
	<production>Copula(msee:fluent,msee:aux) -- Cop(msee:fluent,msee:aux)</production>
	<attribute>
		msee:fluent.*= ARG1.msee:fluent.*;
	</attribute>		
</node>

<node>
	<production>Copula(msee:hummanattr,msee:aux) -- Cop(msee:human,msee:aux)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>

<node>
	<production>Copula(msee:hummanattr,msee:aux) -- Cop(msee:occupation,msee:aux)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>
<node>
	<production>Copula(msee:hummanattr,msee:aux) -- Cop(msee:race,msee:aux)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>
<node>
	<production>Copula(msee:hummanattr,msee:aux) -- Cop(msee:religion,msee:aux)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>

<node>
	<production>Copula(msee:objectattr,msee:aux) -- Cop(msee:color,msee:aux)</production>
	<attribute>msee:objectattr.*= ARG1.msee:size.*;</attribute>		
</node>
<node>
	<production>Copula(msee:objectattr,msee:aux) -- Cop(msee:size,msee:aux)</production>
	<attribute>msee:objectattr.*= ARG1.msee:size.*;</attribute>		
</node>

<node>
	<production>Copula(msee:occupation,msee:aux) -- Cop(msee:occupation,msee:aux)</production>
	<attribute>*.* = ARG1.*.*;</attribute>		
</node>
<node>
	<production>Copula(msee:race,msee:aux) -- Cop(msee:race,msee:aux)</production>
	<attribute>*.* = ARG1.*.*;</attribute>		
</node>
<node>
	<production>Copula(msee:religion,msee:aux) -- Cop(msee:religion,msee:aux)</production>
	<attribute>*.* = ARG1.*.*;</attribute>		
</node>
<node>
	<production>Copula(msee:yearold,msee:aux) -- Cop(msee:yearold,msee:aux)</production>
	<attribute>*.* = ARG1.*.*;</attribute>		
</node>

<node>
	<production>Dep(msee:event,msee:how) -- DepPos(msee:event,msee:how)</production>
	<comment>How to fold a short.</comment>
	<attribute>*.*= ARG1.*.*;</attribute>
	<veml>
		N1 = CreateEventNodeId(ROOT, msee:event.id);
		AddAttributeString(N1, "type", msee:event.type);		
	</veml>
</node>



<node>
	<production>Dep(msee:event,msee:human) -- DepPos(msee:event,msee:human)</production>
	<attribute>*.*= ARG1.*.*;</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:human.id);
		N2 = CreateEventNodeId(ROOT, msee:event.id);
		AddAttributeString(N1, "name", msee:human.name);
		AddAttributeString(N1, "type", msee:human.type);
		AddAttributeString(N2, "type", msee:event.type);		
	</veml>
</node>

<node>
	<production>Destination(msee:event,msee:location) -- Det(msee:location,msee:det) Prep_into(msee:event,msee:location)</production>
	<attribute>
		msee:location.* = ARG2.msee:location.*;
		msee:location.type ="location";
		msee:event.*= ARG2.msee:event.*;
	</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:location.id);
		N2 = CreateEventNodeId(ROOT, msee:event.id);
		AddAttributeString(N2, "destination", msee:location.id);
		AddAttributeString(N2, "locationTo", msee:location.id);		
		AddAttributeString(N1, "type", msee:location.type);
	</veml>
</node>
<node>
	<production>Destination(msee:event,msee:location) -- Det(msee:location,msee:det) Prep_to(msee:event,msee:location)</production>
	<attribute>
		msee:location.* = ARG2.msee:location.*;
		msee:location.type ="location";
		msee:event.*= ARG2.msee:event.*;
	</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:location.id);
		N2 = CreateEventNodeId(ROOT, msee:event.id);
		AddAttributeString(N2, "destination", msee:location.id);
		AddAttributeString(N2, "locationTo", msee:location.id);				
		AddAttributeString(N1, "type", msee:location.type);
	</veml>
</node>
<node>
	<production>Destination(msee:event,msee:location) -- Det(msee:object,msee:det) Prep_to(msee:event,msee:object)</production>
	<attribute>
		msee:location.* = ARG2.msee:object.*;
		msee:event.*= ARG2.msee:event.*;
	</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:location.id);
		N2 = CreateEventNodeId(ROOT, msee:event.id);
		AddAttributeString(N2, "destination", msee:location.id);
		AddAttributeString(N2, "locationTo", msee:location.id);		
		AddAttributeString(N1, "type", msee:location.type);
	</veml>
</node>


<node>
	<production>Destination(msee:event,msee:location) -- Prep_to(msee:event,msee:object)</production>
	<attribute>
		msee:location.* = ARG1.msee:object.*;
		msee:event.*= ARG1.msee:event.*;
	</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:location.id);
		N2 = CreateEventNodeId(ROOT, msee:event.id);
		AddAttributeString(N2, "destination", msee:location.id);
		AddAttributeString(N2, "locationTo", msee:location.id);		
		AddAttributeString(N1, "type", msee:location.type);
	</veml>
</node>


<node>
	<production>Det(msee:direction,msee:det) -- DetPos(msee:direction,msee:det)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>

<node>
	<production>Det(msee:human,msee:det) -- DetPos(msee:human,msee:det)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:human.id);
		AddAttributeString(N1, "type", msee:human.type);
	</veml>
</node>


<node>
	<production>Det(msee:human,msee:det) -- Det(msee:occupation,msee:det)</production>
	<attribute>
		msee:human.* = ARG1.msee:occupation.*;
		msee:occupation.* = ARG1.msee:occupation.*;
	</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:human.id);
		AddAttributeString(N1, "type", msee:human.type);
		AddAttributeString(N1, "occupation", msee:occupation.value);
	</veml>
</node>

<node>
	<production>Det(msee:human,msee:det) -- Det(msee:race,msee:det)</production>
	<attribute>
		msee:human.* = ARG1.msee:race.*;
		msee:race.* = ARG1.msee:race.*;
	</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:human.id);
		AddAttributeString(N1, "type", msee:human.type);
		AddAttributeString(N1, "race", msee:race.value);
	</veml>
</node>

<node>
	<production>Det(msee:human,msee:det) -- Det(msee:religion,msee:det)</production>
	<attribute>
		msee:human.* = ARG1.msee:religion.*;
		msee:religion.* = ARG1.msee:religion.*;
	</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:human.id);
		AddAttributeString(N1, "type", msee:human.type);
		AddAttributeString(N1, "religion", msee:religion.value);
	</veml>
</node>



<node>
	<production>Det(msee:human,msee:det) -- PossPos(msee:human,msee:poss)</production>
	<attribute>		
		msee:human.* = ARG1.msee:human.*;
		msee:det.* = ARG1.msee:poss.*;
	</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:human.id);
		AddAttributeString(N1, "type", msee:human.type);
	</veml>
</node>


<node>
	<production>Det(msee:location,msee:det) -- DetPos(msee:location,msee:det)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:location.id);
		AddAttributeString(N1, "type", msee:location.type);
	</veml>
</node>
<node>
	<production>Det(msee:location,msee:det) -- DetPos(msee:object,msee:det)</production>
	<attribute>msee:location.* = ARG1.msee:object.*;</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:location.id);
		AddAttributeString(N1, "type", msee:location.type);
	</veml>
</node>

<node>
	<production>Det(msee:location,msee:det) -- PossPos(msee:object,msee:poss)</production>
	<comment>A wallet is in his bag </comment>
	<attribute>msee:location.* = ARG1.msee:object.*;</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:location.id);
		AddAttributeString(N1, "type", msee:location.type);
	</veml>
</node>

<node>
	<production>Det(msee:object,msee:det) -- Det(msee:location,msee:det)</production>
	<attribute>
		msee:object.* = ARG1.msee:location.*;
		msee:object.type = "location";
	</attribute>
</node>
<node>
	<production>Det(msee:object,msee:det) -- Det(msee:human,msee:det)</production>
	<attribute>
		msee:object.* = ARG1.msee:human.*;
	</attribute>
</node>
<node>
	<production>Det(msee:object,msee:det) -- Det(msee:occupation,msee:det)</production>
	<attribute>
		msee:object.* = ARG1.msee:occupation.*;
		msee:object.type = "Human";
		msee:occupation.* = ARG1.msee:occupation.*;
	</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:object.id);
		AddAttributeString(N1, "type", msee:object.type);		
		AddAttributeString(N1, "occupation", msee:occupation.value);		
	</veml>
</node>
<node>
	<production>Det(msee:object,msee:det) -- DetPos(msee:object,msee:det)</production>
	<attribute>
		*.* = ARG1.*.*;
	</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:object.id);
		AddAttributeString(N1, "type", msee:object.type);
	</veml>
</node>


<node>
	<production>Det(msee:object,msee:det) -- PossPos(msee:object,msee:poss)</production>
	<attribute>		
		msee:object.* = ARG1.msee:object.*;
		msee:det.* = ARG1.msee:poss.*;
	</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:object.id);
		AddAttributeString(N1, "type", msee:object.type);
	</veml>
</node>

<node>
	<production>Det(msee:occupation,msee:det) -- DetPos(msee:occupation,msee:det)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>


<node>
	<production>Det(msee:race,msee:det) -- DetPos(msee:race,msee:det)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>

<node>
	<production>Det(msee:religion,msee:aux) -- DetPos(msee:religion,msee:aux)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>
<node>
	<production>Det(msee:religion,msee:det) -- DetPos(msee:religion,msee:det)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>

<node>
	<production>Dobj(msee:event,msee:human) -- DobjPos(msee:event,msee:human)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>

<node>
	<production>Dobj(msee:event,msee:location) -- DobjPos(msee:event,msee:location)</production>
	<attribute>
		*.* = ARG1.*.*;
	</attribute>
</node>

<node>
	<production>Dobj(msee:event,msee:object) -- Dobj(msee:event,msee:human)</production>
	<attribute>
		msee:event.* = ARG1.msee:event.*;
		msee:object.* = ARG1.msee:human.*;
	</attribute>
</node>

<node>
	<production>Dobj(msee:event,msee:object) -- Dobj(msee:event,msee:location)</production>
	<attribute>
		msee:event.* = ARG1.msee:event.*;
		msee:object.* = ARG1.msee:location.*;
		msee:object.type = "location";
	</attribute>
</node>
<node>
	<production>Dobj(msee:event,msee:object) -- DobjPos(msee:event,msee:object)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>

<node>
	<production>Dobj(msee:event,msee:task) -- DobjPos(msee:event,msee:task)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>



<node>
	<production>Dobj(msee:event,msee:what) -- DobjPos(msee:event,msee:what)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>


<node>
	<production>Dobj(msee:eventdo,msee:what) -- DobjPos(msee:eventdo,msee:what)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>

<node>
	<production>Expletive(msee:aux,msee:expletive) -- ExplPos(msee:aux,msee:expletive)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>


<node>
	<production>Location(msee:aux,msee:location) -- Det(msee:location,msee:det) Prep_at(msee:aux,msee:location)</production>
	<attribute>
		msee:location.* = ARG1.msee:location.*;	
		msee:location.* = ARG2.msee:location.*;		
	</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:location.id);
	</veml>
</node>

<node>
	<production>Location(msee:aux,msee:location) -- Det(msee:location,msee:det) Prep_in(msee:aux,msee:location)</production>
	<attribute>
		msee:location.* = ARG1.msee:location.*;	
		msee:location.* = ARG2.msee:location.*;		
	</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:location.id);
	</veml>
</node>

<node>
	<production>Location(msee:aux,msee:location) -- Det(msee:location,msee:det) Prep_on(msee:aux,msee:location)</production>
	<attribute>
		msee:location.* = ARG1.msee:location.*;	
		msee:location.* = ARG2.msee:location.*;		
	</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:location.id);
	</veml>
</node>


<node>
	<production>Location(msee:event,msee:location) -- Det(msee:location,msee:det) Prep_at(msee:event,msee:location)</production>
	<attribute>
		msee:location.* = ARG1.msee:location.*;
		msee:location.* = ARG2.msee:location.*;
		msee:location.type ="location";
		msee:event.*= ARG2.msee:event.*;
	</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:location.id);
		N2 = CreateEventNodeId(ROOT, msee:event.id);
		AddAttributeString(N1, "type", msee:location.type);
		AddAttributeString(N2, "location", msee:location.id);
	</veml>
</node>
<node>
	<production>Location(msee:event,msee:location) -- Det(msee:location,msee:det) Prep_in(msee:event,msee:location)</production>
	<attribute>
		msee:location.* = ARG1.msee:location.*;
		msee:location.* = ARG2.msee:location.*;
		msee:location.type ="location";
		msee:event.*= ARG2.msee:event.*;
	</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:location.id);
		N2 = CreateEventNodeId(ROOT, msee:event.id);
		AddAttributeString(N1, "type", msee:location.type);
		AddAttributeString(N2, "location", msee:location.id);
	</veml>
</node>
<node>
	<production>Location(msee:event,msee:location) -- Det(msee:location,msee:det) Prep_into(msee:event,msee:location)</production>
	<attribute>
		msee:location.* = ARG1.msee:location.*;
		msee:location.* = ARG2.msee:location.*;
		msee:location.type ="location";
		msee:event.*= ARG2.msee:event.*;
	</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:location.id);
		N2 = CreateEventNodeId(ROOT, msee:event.id);
		AddAttributeString(N1, "type", msee:location.type);
		AddAttributeString(N2, "location", msee:location.id);
	</veml>
</node>
<node>
	<production>Location(msee:event,msee:location) -- Det(msee:location,msee:det) Prep_on(msee:event,msee:location)</production>
	<attribute>
		msee:location.* = ARG1.msee:location.*;	
		msee:location.* = ARG2.msee:location.*;
		msee:location.type ="location";
		msee:event.*= ARG2.msee:event.*;
	</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:location.id);
		N2 = CreateEventNodeId(ROOT, msee:event.id);
		AddAttributeString(N1, "type", msee:location.type);
		AddAttributeString(N2, "location", msee:location.id);
	</veml>
</node>
<node>
	<production>Location(msee:event,msee:location) -- Det(msee:object,msee:det) Prep_on(msee:event,msee:object)</production>
	<attribute>
		msee:location.* = ARG1.msee:object.*;
		msee:location.* = ARG2.msee:object.*;
		msee:event.*= ARG2.msee:event.*;
	</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:location.id);
		N2 = CreateEventNodeId(ROOT, msee:event.id);
		AddAttributeString(N1, "type", msee:location.type);
		AddAttributeString(N2, "location", msee:location.id);
	</veml>
</node>

<node>
	<production>Location(msee:event,msee:location) -- Det(msee:object,msee:det) Prep_at(msee:event,msee:object)</production>
	<attribute>
		msee:location.* = ARG2.msee:object.*;
		msee:event.*= ARG2.msee:event.*;
	</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:location.id);
		N2 = CreateEventNodeId(ROOT, msee:event.id);
		AddAttributeString(N2, "location", msee:location.id);
		AddAttributeString(N1, "type", msee:location.type);
	</veml>
</node>

<node>
	<production>Location(msee:event,msee:location) -- Det(msee:object,msee:det) Prep_from(msee:event,msee:object)</production>
	<attribute>
		msee:location.* = ARG2.msee:object.*;
		msee:event.*= ARG2.msee:event.*;
	</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:location.id);
		N2 = CreateEventNodeId(ROOT, msee:event.id);
		AddAttributeString(N2, "locationFrom", msee:location.id);
		AddAttributeString(N1, "type", msee:location.type);
	</veml>
</node>




<node>
	<production>Location(msee:event,msee:location) -- Det(msee:object,msee:det) Prep_into(msee:event,msee:object)</production>
	<attribute>
		msee:location.* = ARG2.msee:object.*;
		msee:event.*= ARG2.msee:event.*;
	</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:location.id);
		N2 = CreateEventNodeId(ROOT, msee:event.id);
		AddAttributeString(N2, "locationTo", msee:location.id);
		AddAttributeString(N1, "type", msee:location.type);
	</veml>
</node>


<node>
	<production>Location(msee:event,msee:location) -- Prep_from(msee:event,msee:object)</production>
	<attribute>
		msee:location.* = ARG1.msee:object.*;
		msee:event.*= ARG1.msee:event.*;
	</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:location.id);
		N2 = CreateEventNodeId(ROOT, msee:event.id);
		AddAttributeString(N2, "locationFrom", msee:location.id);
		AddAttributeString(N1, "type", msee:location.type);
	</veml>
</node>

<node>
	<production>Location(msee:event,msee:location) -- Prep_in(msee:event,msee:object)</production>
	<attribute>
		msee:location.* = ARG1.msee:object.*;
		msee:event.*= ARG1.msee:event.*;
	</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:location.id);
		N2 = CreateEventNodeId(ROOT, msee:event.id);
		AddAttributeString(N2, "locationTo", msee:location.id);
		AddAttributeString(N1, "type", msee:location.type);
	</veml>
</node>

<node>
	<production>Location(msee:event,msee:location) -- Prep_into(msee:event,msee:object)</production>
	<attribute>
		msee:location.* = ARG1.msee:object.*;
		msee:event.*= ARG1.msee:event.*;
	</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:location.id);
		N2 = CreateEventNodeId(ROOT, msee:event.id);
		AddAttributeString(N2, "locationTo", msee:location.id);
		AddAttributeString(N1, "type", msee:location.type);
	</veml>
</node>


<node>
	<production>Location(msee:event,msee:location) -- Prep_on(msee:event,msee:location)</production>
	<attribute>
		msee:location.* = ARG1.msee:location.*;	
		msee:event.*= ARG1.msee:event.*;
	</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:location.id);
		N2 = CreateEventNodeId(ROOT, msee:event.id);
		AddAttributeString(N1, "type", msee:location.type);
		AddAttributeString(N2, "location", msee:location.id);
	</veml>
</node>

<node>
	<production>Location(msee:event,msee:location) -- Prep_to(msee:event,msee:object)</production>
	<attribute>
		msee:location.* = ARG1.msee:object.*;
		msee:event.*= ARG1.msee:event.*;
	</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:location.id);
		N2 = CreateEventNodeId(ROOT, msee:event.id);
		AddAttributeString(N2, "locationTo", msee:location.id);
		AddAttributeString(N1, "type", msee:location.type);
	</veml>
</node>

<node>
	<production>Location(msee:eventdo,msee:location) -- Det(msee:location,msee:det) Prep_on(msee:eventdo,msee:location)</production>
	<attribute>
		msee:location.* = ARG2.msee:location.*;
		msee:location.type ="location";
		msee:eventdo.*= ARG2.msee:eventdo.*;
	</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:location.id);
		N2 = CreateEventNodeId(ROOT, msee:eventdo.id);
		AddAttributeString(N2, "location", msee:location.id);
		AddAttributeString(N1, "type", msee:location.type);
	</veml>
</node>
<node>
	<production>Location(msee:eventdo,msee:location) -- Det(msee:object,msee:det) Prep_on(msee:eventdo,msee:object)</production>
	<attribute>
		msee:location.* = ARG2.msee:object.*;
		msee:eventdo.*= ARG2.msee:eventdo.*;
	</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:location.id);
		N2 = CreateEventNodeId(ROOT, msee:eventdo.id);
		AddAttributeString(N2, "location", msee:location.id);
		AddAttributeString(N1, "type", msee:location.type);
	</veml>
</node>
<node>
	<production>Location(msee:eventdo,msee:location) -- Det(msee:location,msee:det) Prep_at(msee:eventdo,msee:location)</production>
	<attribute>
		msee:location.* = ARG2.msee:location.*;
		msee:location.type ="location";
		msee:eventdo.*= ARG2.msee:eventdo.*;
	</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:location.id);
		N2 = CreateEventNodeId(ROOT, msee:eventdo.id);
		AddAttributeString(N2, "location", msee:location.id);
		AddAttributeString(N1, "type", msee:location.type);
	</veml>
</node>
<node>
	<production>Location(msee:eventdo,msee:location) -- Det(msee:object,msee:det) Prep_at(msee:eventdo,msee:object)</production>
	<attribute>
		msee:location.* = ARG2.msee:object.*;
		msee:eventdo.*= ARG2.msee:eventdo.*;
	</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:location.id);
		N2 = CreateEventNodeId(ROOT, msee:eventdo.id);
		AddAttributeString(N2, "location", msee:location.id);
		AddAttributeString(N1, "type", msee:location.type);
	</veml>
</node>







<node>
	<production>Location(msee:object,msee:location) -- Det(msee:location,msee:det) Prep_in(msee:object,msee:location)</production>
	<attribute>
		msee:location.* = ARG2.msee:location.*;
		msee:object.* = ARG2.msee:object.*;
	</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:object.id);
		N2 = CreateObjectNodeId(ROOT, msee:location.id);
		AddAttributeString(N1, "location", msee:location.id);
	</veml>
</node>
<node>
	<production>Location(msee:object,msee:location) -- Det(msee:location,msee:det) Prep_at(msee:object,msee:location)</production>
	<attribute>
		msee:location.* = ARG2.msee:location.*;
		msee:object.* = ARG2.msee:object.*;
	</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:object.id);
		N2 = CreateObjectNodeId(ROOT, msee:location.id);
		AddAttributeString(N1, "location", msee:location.id);
	</veml>
</node>

<node>
	<production>NounCompound(msee:event,msee:humanname) -- NnPos(msee:event,msee:humanname)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>

<node>
	<production>NounCompound(msee:event,msee:object) -- NnPos(msee:event,msee:object)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>

<node>
	<production>NounCompound(msee:object,msee:event) -- NnPos(msee:object,msee:event)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>

<node>
	<production>Npadvmod(msee:yearold,msee:number) -- NpadvmodPos(msee:yearold,msee:number)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>

<node>
	<production>Nsubj(msee:aux,msee:event) -- NsubjPos(msee:aux,msee:event)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>

<node>
	<production>Nsubj(msee:aux,msee:human) -- NsubjPos(msee:aux,msee:human)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>

<node>
	<production>Nsubj(msee:aux,msee:human) -- NsubjPos(msee:aux,msee:humanname)</production>
	<attribute>
		msee:human.* = ARG1.msee:humanname.*;
	</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:human.id);
		AddAttributeString(N1, "name", msee:human.name);
	</veml>
</node>

<node>
	<production>Nsubj(msee:aux,msee:humanname) -- NsubjPos(msee:aux,msee:humanname)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>



<node>
	<production>Nsubj(msee:aux,msee:object) -- Nsubj(msee:aux,msee:human)</production>
	<attribute>
		msee:object.* = ARG1.msee:human.*;
	</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:object.id);
		AddAttributeString(N1, "name", msee:object.name);
		AddAttributeString(N1, "type", msee:object.type);
	</veml>
</node>

<node>
	<production>Nsubj(msee:aux,msee:object) -- Nsubj(msee:aux,msee:humanname)</production>
	<attribute>
		msee:object.* = ARG1.msee:humanname.*;
		msee:object.type = "Human";
	</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:object.id);
		AddAttributeString(N1, "name", msee:object.name);
		AddAttributeString(N1, "type", msee:object.type);
	</veml>
</node>

<node>
	<production>Nsubj(msee:aux,msee:object) -- NsubjPos(msee:aux,msee:object)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:object.id);
		AddAttributeString(N1, "name", msee:object.name);		
	</veml>
</node>

<node>
	<production>Nsubj(msee:color,msee:object) -- NsubjPos(msee:color,msee:object)</production>
	<attribute>
		*.*= ARG1.*.*;	
		msee:object.color= ARG1.msee:color.value;
	</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:object.id);
		AddAttributeString(N1, "type", msee:object.type);
		AddAttributeString(N1, "color", msee:object.color);
	</veml>
</node>

<node>
	<production>Nsubj(msee:event,msee:human) -- Dep(msee:event,msee:human)</production>
	<attribute>*.*= ARG1.*.*;</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:human.id);
		N2 = CreateEventNodeId(ROOT, msee:event.id);
		AddAttributeString(N1, "name", msee:human.name);
		AddAttributeString(N1, "type", msee:human.type);
		AddAttributeString(N2, "type", msee:event.type);		
	</veml>
</node>

<node>
	<production>Nsubj(msee:event,msee:human) -- NsubjPos(msee:event,msee:human)</production>
	<attribute>*.*= ARG1.*.*;</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:human.id);
		N2 = CreateEventNodeId(ROOT, msee:event.id);
		AddAttributeString(N1, "name", msee:human.name);
		AddAttributeString(N1, "type", msee:human.type);
		AddAttributeString(N2, "type", msee:event.type);		
	</veml>
</node>

<node>
	<production>Nsubj(msee:event,msee:human) -- Nsubj(msee:event,msee:occupation)</production>
	<attribute>
		msee:event.*= ARG1.msee:event.*;
		msee:human.*= ARG1.msee:occupation.*;
		msee:occupation.*= ARG1.msee:occupation.*;
	</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:human.id);
		N2 = CreateEventNodeId(ROOT, msee:event.id);
		AddAttributeString(N1, "name", msee:human.name);
		AddAttributeString(N1, "type", msee:human.type);
		AddAttributeString(N1, "occupation", msee:occupation.value);
		AddAttributeString(N2, "type", msee:event.type);		
	</veml>
</node>

<node>
	<production>Nsubj(msee:event,msee:human) -- XsubjPos(msee:event,msee:human)</production>
	<attribute>*.*= ARG1.*.*;</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:human.id);
		N2 = CreateEventNodeId(ROOT, msee:event.id);
		AddAttributeString(N1, "name", msee:human.name);
		AddAttributeString(N1, "type", msee:human.type);
		AddAttributeString(N2, "type", msee:event.type);		
	</veml>
</node>


<node>
	<production>Nsubj(msee:event,msee:humanname) -- NsubjPos(msee:event,msee:humanname)</production>
	<attribute>
		*.*= ARG1.*.*;
		msee:humanname.type = "Human";		
	</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:humanname.id);
		N2 = CreateEventNodeId(ROOT, msee:event.id);
		AddAttributeString(N1, "name", msee:humanname.name);
		AddAttributeString(N1, "type", msee:humanname.type);
		AddAttributeString(N2, "type", msee:event.type);		
	</veml>
</node>




<node>
	<production>Nsubj(msee:event,msee:humanname) -- XsubjPos(msee:event,msee:humanname)</production>
	<attribute>
		*.*= ARG1.*.*;
		msee:humanname.type = "Human";		
	</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:humanname.id);
		N2 = CreateEventNodeId(ROOT, msee:event.id);
		AddAttributeString(N1, "name", msee:humanname.name);
		AddAttributeString(N1, "type", msee:humanname.type);
		AddAttributeString(N2, "type", msee:event.type);		
	</veml>
</node>


<node>
	<production>Nsubj(msee:event,msee:object) -- Nsubj(msee:event,msee:human)</production>
	<attribute>
		msee:event.*= ARG1.msee:event.*;
		msee:object.* = ARG1.msee:human.*;		
	</attribute>
</node>

<node>
	<production>Nsubj(msee:event,msee:object) -- Nsubj(msee:event,msee:humanname)</production>
	<attribute>
		msee:event.*= ARG1.msee:event.*;
		msee:object.* = ARG1.msee:humanname.*;
		msee:object.type = "Human";
	</attribute>
</node>


<node>
	<production>Nsubj(msee:event,msee:object) -- NsubjPos(msee:event,msee:object)</production>
	<attribute>*.*= ARG1.*.*;</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:object.id);
		N2 = CreateEventNodeId(ROOT, msee:event.id);		
		AddAttributeString(N1, "type", msee:object.type);
		AddAttributeString(N2, "type", msee:event.type);		
		AddAttributeString(N2, "agent", msee:object.id);					
	</veml>
</node>

<node>
	<production>Nsubj(msee:event,msee:object) -- XsubjPos(msee:event,msee:object)</production>
	<attribute>*.*= ARG1.*.*;</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:object.id);
		N2 = CreateEventNodeId(ROOT, msee:event.id);		
		AddAttributeString(N1, "type", msee:object.type);
		AddAttributeString(N2, "type", msee:event.type);		
		AddAttributeString(N2, "agent", msee:object.id);					
	</veml>
</node>


<node>
	<production>Nsubj(msee:event,msee:occupation) -- NsubjPos(msee:event,msee:occupation)</production>
	<attribute>*.*= ARG1.*.*;</attribute>
</node>

<node>
	<production>Nsubj(msee:event,msee:occupation) -- XsubjPos(msee:event,msee:occupation)</production>
	<attribute>*.*= ARG1.*.*;</attribute>
</node>


<node>
	<production>Nsubj(msee:event,msee:who) -- NsubjPos(msee:event,msee:who)</production>
	<attribute>*.* = ARG1.*.*;</attribute>		
</node>


<node>
	<production>Nsubj(msee:eventdo,msee:human) -- NsubjPos(msee:eventdo,msee:human)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>

<node>
	<production>Nsubj(msee:eventdo,msee:humanname) -- NsubjPos(msee:eventdo,msee:humanname)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>

<node>
	<production>Nsubj(msee:eventdo,msee:object) -- Nsubj(msee:eventdo,msee:human)</production>
	<attribute>
		msee:eventdo.*= ARG1.msee:eventdo.*;
		msee:object.* = ARG1.msee:human.*;
	</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:object.id);
		AddAttributeString(N1, "name", msee:object.name);
	</veml>
</node>
<node>
	<production>Nsubj(msee:eventdo,msee:object) -- Nsubj(msee:eventdo,msee:humanname)</production>
	<attribute>
		msee:eventdo.*= ARG1.msee:eventdo.*;
		msee:object.* = ARG1.msee:humanname.*;
		msee:object.type = "Human";
	</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:object.id);
		AddAttributeString(N1, "name", msee:object.name);
	</veml>
</node>



<node>
	<production>Nsubj(msee:eventdo,msee:object) -- NsubjPos(msee:eventdo,msee:object)</production>
	<attribute>
		msee:eventdo.*= ARG1.msee:eventdo.*;
		msee:object.* = ARG1.msee:object.*;
	</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:object.id);
		AddAttributeString(N1, "type", msee:object.type);
	</veml>
</node>


<node>
	<production>Nsubj(msee:fluent,msee:human) -- NsubjPos(msee:fluent,msee:human)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>

<node>
	<production>Nsubj(msee:fluent,msee:humanname) -- NsubjPos(msee:fluent,msee:humanname)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>

<node>
	<production>Nsubj(msee:fluent,msee:object) -- Nsubj(msee:fluent,msee:human)</production>
	<attribute>
		msee:fluent.*= ARG1.msee:fluent.*;
		msee:object.* = ARG1.msee:human.*;
	</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:object.id);
		AddAttributeString(N1, "name", msee:object.name);		
	</veml>
</node>
<node>
	<production>Nsubj(msee:fluent,msee:object) -- Nsubj(msee:fluent,msee:humanname)</production>
	<attribute>
		msee:fluent.*= ARG1.msee:fluent.*;
		msee:object.* = ARG1.msee:humanname.*;
		msee:object.type = "Human";
	</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:object.id);
		AddAttributeString(N1, "name", msee:object.name);
	</veml>
</node>
<node>
	<production>Nsubj(msee:fluent,msee:object) -- Nsubjpass(msee:fluent,msee:object)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:object.id);
		AddAttributeString(N1, "name", msee:object.name);
	</veml>
</node>
<node>
	<production>Nsubj(msee:fluent,msee:object) -- NsubjPos(msee:fluent,msee:object)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:object.id);
		AddAttributeString(N1, "type", msee:object.type);	
		AddAttributeString(N1, "hasFluent", msee:fluent.id);			
		N2 = CreateFluentNode(ROOT, msee:fluent.type, msee:fluent.id);
		AddAttributeString(N2, "value", msee:fluent.value);
	</veml>
</node>

<node>
	<production>Nsubj(msee:human1,msee:human2) -- NsubjPos(msee:human1,msee:human2)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>

<node>
	<production>Nsubj(msee:objectattr,msee:object) -- Nsubj(msee:color,msee:object)</production>
	<attribute>
		msee:objectattr.*= ARG1.msee:color.*;
		msee:object.*= ARG1.msee:object.*;
	</attribute>
</node>


<node>
	<production>Nsubj(msee:objectattr,msee:object) -- Nsubj(msee:size,msee:object)</production>
	<attribute>
		msee:objectattr.*= ARG1.msee:size.*;
		msee:object.*= ARG1.msee:object.*;
	</attribute>
</node>

<node>
	<production>Nsubj(msee:occupation,msee:human) -- NsubjPos(msee:occupation,msee:human)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:human.id);
		AddAttributeString(N1, "type", msee:human.type);		
		AddAttributeString(N1, "occupation", msee:occupation.value);		
	</veml>
</node>	


<node>
	<production>Nsubj(msee:race,msee:human) -- NsubjPos(msee:race,msee:human)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:human.id);
		AddAttributeString(N1, "type", msee:human.type);		
		AddAttributeString(N1, "race", msee:race.value);		
	</veml>
</node>	

<node>
	<production>Nsubj(msee:religion,msee:human) -- NsubjPos(msee:religion,msee:human)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:human.id);
		AddAttributeString(N1, "type", msee:human.type);		
		AddAttributeString(N1, "religion", msee:religion.value);		
	</veml>
</node>	




<node>
	<production>Nsubj(msee:size,msee:object) -- NsubjPos(msee:size,msee:object)</production>
	<attribute>
		*.*= ARG1.*.*;	
		msee:object.size= ARG1.msee:size.value;
	</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:object.id);
		AddAttributeString(N1, "type", msee:object.type);
		AddAttributeString(N1, "size", msee:object.size);
	</veml>
</node>


<node>
	<production>Nsubj(msee:yearold,msee:human) -- NsubjPos(msee:yearold,msee:human)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>

<node>
	<production>Nsubj(msee:yearold,msee:human) -- Nsubj(msee:yearold,msee:occupation)</production>
	<attribute>
		msee:yearold.* = ARG1.msee:yearold.*;
		msee:human.* = ARG1.msee:occupation.*;
		msee:occupation.* = ARG1.msee:occupation.*;
	</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:human.id);
		AddAttributeString(N1, "type", msee:human.type);		
		AddAttributeString(N1, "occupation", msee:occupation.value);		
	</veml>
</node>	

<node>
	<production>Nsubj(msee:yearold,msee:occupation) -- NsubjPos(msee:yearold,msee:occupation)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>

<node>
	<production>NsubjPass(msee:event,msee:object) -- NsubjPassPos(msee:event,msee:object)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>


<node>
	<production>NsubjPass(msee:event,msee:what) -- NsubjPassPos(msee:event,msee:what)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>

<node>
	<production>Nsubjpass(msee:fluent,msee:object) -- NsubjpassPos(msee:fluent,msee:object)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>


<node>
	<production>Num(msee:object,msee:number) -- Num(msee:human,msee:number)</production>
	<attribute>
		msee:number.* = ARG1.msee:number.*;
		msee:object.* = ARG1.msee:human.*;	
	</attribute>

</node>


<node>
	<production>Num(msee:object,msee:number) -- NumPos(msee:object,msee:number)</production>
	<attribute>
		*.* = ARG1.*.*;
		msee:object.num = ARG1.msee:number.value;
	</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:object.id);
		AddAttributeString(N1, "type", msee:object.type);		
		AddAttributeString(N1, "num", msee:object.num);		
	</veml>
</node>

<node>
	<production>Num(msee:human,msee:number) -- NumPos(msee:human,msee:number)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>


<node>
	<production>Number(msee:yearold,msee:number) -- NumberPos(msee:yearold,msee:number)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>


<node>
	<production>Object(msee:event,msee:object) -- Det(msee:object,msee:det) Amod(msee:object,msee:null) Object_S(msee:event,msee:object)</production>
	<attribute>*.* = ARG3.*.*;</attribute>	
</node>


<node>
	<production>Object(msee:event,msee:object) -- Det(msee:object,msee:det) Amod(msee:object,msee:manner) Object_S(msee:event,msee:object)</production>
	<attribute>*.* = ARG3.*.*;</attribute>	
</node>

<node>
	<production>Object(msee:event,msee:object) -- Det(msee:object,msee:det) Num(msee:object,msee:number) Object_S(msee:event,msee:object)</production>
	<attribute>*.* = ARG3.*.*;</attribute>	
</node>


<node>
	<production>Object(msee:event,msee:object) -- Det(msee:object,msee:det) Object_S(msee:event,msee:object)</production>
	<attribute>*.* = ARG2.*.*;</attribute>	
</node>

<node>
	<production>Object(msee:event,msee:object) -- Det(msee:object,msee:det) Object_S(msee:event,msee:object) Preposition(msee:object1,msee:object2)</production>
	<attribute>*.* = ARG2.*.*;</attribute>	
</node>

<node>
	<production>Object(msee:event,msee:object) -- Amod(msee:object,msee:null) Object_S(msee:event,msee:object)</production>
	<attribute>*.* = ARG2.*.*;</attribute>	
</node>

<node>
	<production>Object(msee:event,msee:object) -- Num(msee:object,msee:number) Object_S(msee:event,msee:object)</production>
	<attribute>*.* = ARG2.*.*;</attribute>	
</node>

<node>
	<production>Object(msee:event,msee:object) -- Object_S(msee:event,msee:object)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>



<node>
	<production>Object(msee:event,msee:what) -- Dobj(msee:event,msee:what)</production>
	<attribute>
		msee:what.* = ARG1.msee:what.*;
		msee:event.*= ARG1.msee:event.*;
	</attribute>
	<veml>
		N1 = CreateEventNodeId(ROOT, msee:event.id);
		AddAttributeString(N1, "type", msee:event.type);
	</veml>
</node>


<node>
	<production>Object(msee:eventdo,msee:what) -- Dobj(msee:eventdo,msee:what)</production>
	<attribute>
		msee:what.* = ARG1.msee:what.*;
		msee:eventdo.*= ARG1.msee:eventdo.*;
	</attribute>
	<veml>
		N1 = CreateEventNodeId(ROOT, msee:eventdo.id);
		AddAttributeString(N1, "type", msee:eventdo.type);
	</veml>
</node>

<node>
	<production>Object(msee:object,msee:event) -- NounCompound(msee:object,msee:event)</production>
	<comment>e.g. who is buying coffee. This is error from POS</comment>
	<attribute>
		msee:object.* = ARG1.msee:object.*;
		msee:event.*= ARG1.msee:event.*;
	</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:object.id);
		N2 = CreateEventNodeId(ROOT, msee:event.id);
		AddAttributeString(N2, "patient", msee:object.id);
		AddAttributeString(N1, "type", msee:object.type);
	</veml>
</node>

<node>
	<production>Object_S(msee:event,msee:object) -- Dobj(msee:event,msee:object)</production>
	<attribute>
		msee:object.* = ARG1.msee:object.*;
		msee:event.*= ARG1.msee:event.*;
	</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:object.id);
		N2 = CreateEventNodeId(ROOT, msee:event.id);
		AddAttributeString(N1, "type", msee:object.type);
		AddAttributeString(N2, "type", msee:event.type);
		AddAttributeString(N2, "patient", msee:object.id);			
	</veml>
</node>

<node>
	<production>Object_S(msee:event,msee:object) -- Dobj(msee:event,msee:task)</production>
	<attribute>
		msee:object.* = ARG1.msee:task.*;
		msee:event.*= ARG1.msee:event.*;
	</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:object.id);
		N2 = CreateEventNodeId(ROOT, msee:event.id);
		AddAttributeString(N1, "type", msee:object.type);
		AddAttributeString(N2, "type", msee:event.type);
		AddAttributeString(N2, "patient", msee:object.id);			
	</veml>
</node>

<node>
	<production>OpenClause(msee:event1,msee:event2) -- Xcomp(msee:event1,msee:event2)</production>
	<comment>
		they start eating
			nsubj(start-2, they-1)
			root(ROOT-0, start-2)
			xcomp(start-2, eating-3)
	</comment>
	<attribute>
		msee:event1.*= ARG1.msee:event1.*;
		msee:event2.*= ARG1.msee:event2.*;
	</attribute>
	<veml>	
		N1 = CreateEventNodeId(ROOT, msee:event1.id);
		N2 = CreateEventNodeId(ROOT, msee:event2.id);
		AddAttributeString(N1, "complement", msee:event2.id);
	</veml>
</node>

<node>
	<production>ParticipialModifier(msee:object,msee:event) -- Partmod_S(msee:object,msee:event)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>


	
<node>
	<production>ParticipialModifier(msee:object,msee:event) -- Partmod_S(msee:object,msee:event) Object(msee:event,msee:object)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>


	
<node>
	<production>Partmod_S(msee:human,msee:event) -- PartmodPos(msee:human,msee:event)</production>	
	<attribute>*.* = ARG1.*.*;</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:human.id);
		N2 = CreateEventNodeId(ROOT, msee:event.id);
		AddAttributeString(N1, "type", msee:human.type);
		AddAttributeString(N2, "type", msee:event.type);
		AddAttributeString(N2, "agent", msee:human.id);			
	</veml>
</node>

<node>
	<production>Partmod_S(msee:object,msee:event) -- Partmod_S(msee:human,msee:event)</production>
	<attribute>
		msee:object.* = ARG1.msee:human.*;
		msee:event.* = ARG1.msee:event.*;
	</attribute>
</node>

<node>
	<production>Partmod_S(msee:object,msee:event) -- PartmodPos(msee:object,msee:event)</production>	
	<attribute>*.* = ARG1.*.*;</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:object.id);
		N2 = CreateEventNodeId(ROOT, msee:event.id);
		AddAttributeString(N1, "type", msee:object.type);
		AddAttributeString(N2, "type", msee:event.type);
		AddAttributeString(N2, "agent", msee:object.id);			
	</veml>
</node> 

<node>
	<production>PostmodNsubj(msee:event,msee:object) -- Num(msee:human,msee:number) Prep_of(msee:object,msee:human)</production>
	<attribute>
		*.* = ARG2.*.*;
		msee:human.num = ARG1.msee:number.value;
	</attribute>	
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:object.id);
		N2 = CreateObjectNodeId(ROOT, msee:human.id);
		AddAttributeString(N1, "type", msee:object.type);
		AddAttributeString(N2, "type", msee:human.type);
		AddAttributeString(N1, "component", msee:human.id);	
		AddAttributeString(N2, "num", msee:human.num);	
	</veml>
</node>


<node>
	<production>PostmodNsubj(msee:event,msee:object) -- Prep_of(msee:object,msee:human)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:object.id);
		N2 = CreateObjectNodeId(ROOT, msee:human.id);
		AddAttributeString(N1, "type", msee:object.type);
		AddAttributeString(N2, "type", msee:human.type);
		AddAttributeString(N1, "component", msee:human.id);		
	</veml>
</node>


<node>
	<production>PostmodNsubj(msee:event,msee:object) -- Preposition(msee:null,msee:null)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>




<node>
	<production>PremodNsubj(msee:event,msee:object) -- Det(msee:object,msee:det)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>


<node>
	<production>PremodNsubj(msee:event,msee:object) -- Det(msee:object,msee:det) Size(msee:object,msee:size)</production>
	<attribute>
		*.*= ARG1.*.*;	
		*.*= ARG2.*.*;
		msee:object.size= ARG2.msee:size.value;
	</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:object.id);
		AddAttributeString(N1, "type", msee:object.type);
		AddAttributeString(N1, "size", msee:object.size);
	</veml>
</node>

<node>
	<production>PremodNsubj(msee:event,msee:object) -- Det(msee:object,msee:det) Num(msee:object,msee:number)</production>
	<attribute>
		*.*= ARG1.*.*;	
		*.*= ARG2.*.*;
		msee:object.num= ARG2.msee:number.value;
	</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:object.id);
		AddAttributeString(N1, "type", msee:object.type);
		AddAttributeString(N1, "num", msee:object.num);
	</veml>
</node>

<node>
	<production>PremodNsubj(msee:event,msee:object) -- Det(msee:object,msee:det) Number(msee:yearold,msee:number) Amod(msee:human,msee:yearold)</production>
	<attribute>
		*.*= ARG1.*.*;	
		*.*= ARG2.*.*;
		*.*= ARG3.*.*;
		msee:object.age= ARG2.msee:number.value;
	</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:object.id);
		AddAttributeString(N1, "type", msee:object.type);
		AddAttributeString(N1, "age", msee:object.age);
	</veml>
</node>

<node>
	<production>PremodNsubj(msee:event,msee:object) -- Num(msee:object,msee:number)</production>
	<attribute>
		*.*= ARG1.*.*;		
		msee:object.num= ARG1.msee:number.value;
	</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:object.id);
		AddAttributeString(N1, "type", msee:object.type);
		AddAttributeString(N1, "num", msee:object.num);
	</veml>
</node>


<node>
	<production>PremodNsubj(msee:event,msee:object) -- Size(msee:object,msee:size)</production>
	<attribute>
		*.*= ARG1.*.*;	
		msee:object.size= ARG1.msee:size.value;
	</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:object.id);
		AddAttributeString(N1, "type", msee:object.type);
		AddAttributeString(N1, "size", msee:object.size);
	</veml>
</node>

<node>
	<production>Prep(msee:event,msee:from) -- PrepPos(msee:event,msee:from)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>

<node>
	<production>Prep(msee:event,msee:into) -- PrepPos(msee:event,msee:into)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>

<node>
	<production>Prep(msee:event,msee:to) -- PrepPos(msee:event,msee:to)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>


<node>
	<production>Prep_above(msee:event,msee:object) -- Det(msee:object,msee:det) Amod(msee:object,msee:null) Prep_above_S(msee:event,msee:object)</production>
	<attribute>*.* = ARG3.*.*;</attribute>
</node>

<node>
	<production>Prep_above(msee:event,msee:object) -- Det(msee:object,msee:det) Prep_above_S(msee:event,msee:object)</production>
	<attribute>*.* = ARG2.*.*;</attribute>
</node>


<node>
	<production>Prep_above(msee:event,msee:object) -- Prep_above_S(msee:event,msee:object)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>



<node>
	<production>Prep_above_S(msee:event,msee:object) -- Prep_abovePos(msee:event,msee:object)</production>
	<attribute>
		msee:event.* = ARG1.msee:event.*;
		msee:object.* = ARG1.msee:object.*;
		msee:prep.type = "above";
	</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:object.id);
		N2 = CreateEventNodeId(ROOT, msee:event.id);
		AddAttributeString(N1, "type", msee:object.type);
		AddAttributeString(N2, "type", msee:event.type);
		AddAttributeString(N2, "above", msee:object.id);
		AddAttributeString(N2, "location", msee:object.id);
	</veml>
</node>


<node>
	<production>Prep_across(msee:event,msee:object) -- Det(msee:object,msee:det) Prep_across_S(msee:event,msee:object)</production>
	<attribute>*.* = ARG2.*.*;</attribute>
</node>

<node>
	<production>Prep_across(msee:event,msee:object) -- Prep_across_S(msee:event,msee:object)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>

<node>
	<production>Prep_across(msee:event,msee:object) -- Det(msee:location,msee:det) Prep_across_S(msee:event,msee:location)</production>
	<attribute>
		msee:event.* = ARG2.msee:event.*;
		msee:object.* = ARG2.msee:location.*;
	</attribute>
</node>

<node>
	<production>Prep_across(msee:event,msee:object) -- Prep_across_S(msee:event,msee:location)</production>
	<attribute>
		msee:event.* = ARG1.msee:event.*;
		msee:object.* = ARG1.msee:location.*;
	</attribute>
</node>




<node>
	<production>Prep_across_S(msee:event,msee:location) -- Prep_acrossPos(msee:event,msee:location)</production>
	<attribute>
		msee:event.* = ARG1.msee:event.*;
		msee:location.* = ARG1.msee:location.*;
		msee:prep.type = "across";
	</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:location.id);
		N2 = CreateEventNodeId(ROOT, msee:event.id);
		AddAttributeString(N1, "type", msee:location.type);
		AddAttributeString(N2, "type", msee:event.type);
		AddAttributeString(N2, "across", msee:location.id);
		AddAttributeString(N2, "location", msee:location.id);
	</veml>
</node>

<node>
	<production>Prep_across_S(msee:event,msee:object) -- Prep_across_S(msee:event,msee:location)</production>
	<attribute>
		msee:event.* = ARG1.msee:event.*;
		msee:object.* = ARG1.msee:location.*;
	</attribute>
</node>

<node>
	<production>Prep_across_S(msee:event,msee:object) -- Prep_acrossPos(msee:event,msee:object)</production>
	<attribute>
		msee:event.* = ARG1.msee:event.*;
		msee:object.* = ARG1.msee:object.*;
		msee:prep.type = "across";
	</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:object.id);
		N2 = CreateEventNodeId(ROOT, msee:event.id);
		AddAttributeString(N1, "type", msee:object.type);
		AddAttributeString(N2, "type", msee:event.type);
		AddAttributeString(N2, "across", msee:object.id);
		AddAttributeString(N2, "location", msee:object.id);
	</veml>
</node>

<node>
	<production>Prep_among(msee:event,msee:object) -- Prep_amongPos(msee:event,msee:object)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:object.id);
		N2 = CreateEventNodeId(ROOT, msee:event.id);
		AddAttributeString(N1, "type", msee:object.type);
		AddAttributeString(N2, "type", msee:event.type);
		AddAttributeString(N2, "among", msee:object.id);		
	</veml>	
</node>



<node>
	<production>Prep_around(msee:event,msee:object) -- Det(msee:object,msee:det) Prep_around_S(msee:event,msee:object)</production>
	<attribute>*.* = ARG2.*.*;</attribute>
</node>

<node>
	<production>Prep_around(msee:event,msee:object) -- Prep_around_S(msee:event,msee:object)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>

<node>
	<production>Prep_around(msee:event,msee:object) -- Det(msee:location,msee:det) Prep_around_S(msee:event,msee:location)</production>
	<attribute>
		msee:event.* = ARG2.msee:event.*;
		msee:object.* = ARG2.msee:location.*;
	</attribute>
</node>

<node>
	<production>Prep_around(msee:event,msee:object) -- Prep_around_S(msee:event,msee:location)</production>
	<attribute>
		msee:event.* = ARG1.msee:event.*;
		msee:object.* = ARG1.msee:location.*;
	</attribute>
</node>



<node>
	<production>Prep_around_S(msee:event,msee:location) -- Prep_aroundPos(msee:event,msee:location)</production>
	<attribute>
		msee:event.* = ARG1.msee:event.*;
		msee:location.* = ARG1.msee:location.*;
		msee:prep.type = "around";
	</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:location.id);
		N2 = CreateEventNodeId(ROOT, msee:event.id);
		AddAttributeString(N1, "type", msee:location.type);
		AddAttributeString(N2, "type", msee:event.type);
		AddAttributeString(N2, "around", msee:location.id);
		AddAttributeString(N2, "location", msee:location.id);
	</veml>
</node>

<node>
	<production>Prep_around_S(msee:event,msee:object) -- Prep_around_S(msee:event,msee:location)</production>
	<attribute>
		msee:event.* = ARG1.msee:event.*;
		msee:object.* = ARG1.msee:location.*;
	</attribute>
</node>

<node>
	<production>Prep_around_S(msee:event,msee:object) -- Prep_aroundPos(msee:event,msee:object)</production>
	<attribute>
		msee:event.* = ARG1.msee:event.*;
		msee:object.* = ARG1.msee:object.*;
		msee:prep.type = "around";
	</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:object.id);
		N2 = CreateEventNodeId(ROOT, msee:event.id);
		AddAttributeString(N1, "type", msee:object.type);
		AddAttributeString(N2, "type", msee:event.type);
		AddAttributeString(N2, "around", msee:object.id);
		AddAttributeString(N2, "location", msee:object.id);
	</veml>
</node>

<node>
	<production>Prep_at(msee:aux,msee:location) -- Prep_atPos(msee:aux,msee:location)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>

<node>
	<production>Prep_at(msee:aux,msee:location) -- Prep_at(msee:aux,msee:object)</production>
	<attribute>msee:location.* = ARG1.msee:object.*;</attribute>	
</node>

<node>
	<production>Prep_at(msee:aux,msee:object) -- Prep_atPos(msee:aux,msee:object)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>


<node>
	<production>Prep_at(msee:event,msee:location) -- Det(msee:location,msee:det) Prep_at_S(msee:event,msee:location)</production>
	<attribute>*.* = ARG2.*.*;</attribute>	
</node>

<node>
	<production>Prep_at(msee:event,msee:location) -- Prep_at_S(msee:event,msee:location)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>

<node>
	<production>Prep_at(msee:event,msee:location) -- Prep_at(msee:event,msee:object)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>

<node>
	<production>Prep_at(msee:event,msee:object) -- Det(msee:object,msee:det) Prep_at_S(msee:event,msee:object)</production>
	<attribute>*.* = ARG2.*.*;</attribute>	

</node>

<node>
	<production>Prep_at(msee:event,msee:object) -- Prep_at_S(msee:event,msee:object)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>



<node>
	<production>Prep_at_S(msee:event,msee:location) -- Prep_atPos(msee:event,msee:location)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:location.id);
		N2 = CreateEventNodeId(ROOT, msee:event.id);
		AddAttributeString(N1, "type", msee:location.type);
		AddAttributeString(N2, "type", msee:event.type);
		AddAttributeString(N2, "location", msee:location.id);			
	</veml>
</node>

<node>
	<production>Prep_at_S(msee:event,msee:object) -- Prep_atPos(msee:event,msee:object)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:object.id);
		N2 = CreateEventNodeId(ROOT, msee:event.id);
		AddAttributeString(N1, "type", msee:object.type);
		AddAttributeString(N2, "type", msee:event.type);
		AddAttributeString(N2, "location", msee:object.id);			
	</veml>
</node>



<node>
	<production>Prep_at(msee:eventdo,msee:location) -- Prep_atPos(msee:eventdo,msee:location)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>
<node>
	<production>Prep_at(msee:eventdo,msee:location) -- Prep_at(msee:eventdo,msee:object)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>

<node>
	<production>Prep_at(msee:eventdo,msee:object) -- Prep_atPos(msee:eventdo,msee:object)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>


<node>
	<production>Prep_at(msee:object,msee:location) -- Prep_atPos(msee:object,msee:location)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>


<node>
	<production>Prep_at(msee:object,msee:location) -- Prep_atPos(msee:object1,msee:object2)</production>
	<attribute>
		msee:object.* = ARG1.msee:object1.*;
		msee:location.*= ARG1.msee:object2.*;
	</attribute>	
</node>


<node>
	<production>Prep_away_from(msee:event,msee:object) -- Det(msee:object,msee:det) Prep_away_from_S(msee:event,msee:object)</production>
	<attribute>*.* = ARG2.*.*;</attribute>
</node>

<node>
	<production>Prep_away_from(msee:event,msee:object) -- Prep_away_from_S(msee:event,msee:object)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>

<node>
	<production>Prep_away_from_S(msee:event,msee:object) -- Prep_away_fromPos(msee:event,msee:human)</production>
	<attribute>
		msee:event.* = ARG1.msee:event.*;
		msee:object.* = ARG1.msee:human.*;
		msee:prep.type = "awayfrom";
	</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:object.id);
		N2 = CreateEventNodeId(ROOT, msee:event.id);
		AddAttributeString(N1, "type", msee:object.type);
		AddAttributeString(N2, "type", msee:event.type);
		AddAttributeString(N2, "awayfrom", msee:object.id);
	</veml>
</node>

<node>
	<production>Prep_away_from_S(msee:event,msee:object) -- Prep_away_fromPos(msee:event,msee:object)</production>
	<attribute>
		msee:event.* = ARG1.msee:event.*;
		msee:object.* = ARG1.msee:object.*;
		msee:prep.type = "awayfrom";
	</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:object.id);
		N2 = CreateEventNodeId(ROOT, msee:event.id);
		AddAttributeString(N1, "type", msee:object.type);
		AddAttributeString(N2, "type", msee:event.type);
		AddAttributeString(N2, "awayfrom", msee:object.id);
	</veml>
</node>


<node>
	<production>Prep_by(msee:event,msee:object) -- Prep_byPos(msee:event,msee:object)</production>
	<attribute>
		msee:event.* = ARG1.msee:event.*;
		msee:object.* = ARG1.msee:object.*;
		msee:prep.type = "by";
	</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:object.id);
		N2 = CreateEventNodeId(ROOT, msee:event.id);
		AddAttributeString(N1, "type", msee:object.type);
		AddAttributeString(N2, "type", msee:event.type);
		AddAttributeString(N2, "by", msee:object.id);
	</veml>
</node>

<node>
	<production>Prep_from(msee:event,msee:direction) -- Prep_fromPos(msee:event,msee:direction)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
	<veml>
		N1 = CreateEventNodeId(ROOT, msee:event.id);
		AddAttributeString(N1, "type", msee:event.type);
		AddAttributeString(N1, "directionFrom", msee:direction.value);
	</veml>
</node>


<node>
	<production>Prep_for(msee:event,msee:object) -- DetPos(msee:object,msee:det) Prep_for_S(msee:event,msee:object)</production>
	<attribute>
		*.* = ARG1.*.*;
		*.* = ARG2.*.*;
	</attribute>
</node>

<node>
	<production>Prep_for(msee:event,msee:object) -- Prep_for_S(msee:event,msee:object)</production>
	<attribute>
		*.* = ARG1.*.*;
	</attribute>
</node>


<node>
	<production>Prep_for(msee:event,msee:object) -- Prep_for_S(msee:object1,msee:object2)</production>
	<comment>They ask a female for directions.</comment>
	<attribute>
		msee:object.* = ARG1.msee:object2.*;
	</attribute>
</node>


<node>
	<production>Prep_for_S(msee:event,msee:object) -- Prep_forPos(msee:event,msee:object)</production>
	<attribute>
		*.* = ARG1.*.*;
		msee:prep.type = "for";
	</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:object.id);
		N2 = CreateEventNodeId(ROOT, msee:event.id);
		AddAttributeString(N1, "type", msee:object.type);
		AddAttributeString(N2, "purpose", msee:object.id);
	</veml>
</node>


<node>
	<production>Prep_for_S(msee:human,msee:object) -- Prep_forPos(msee:human,msee:object)</production>
	<attribute>
		*.* = ARG1.*.*;
		msee:prep.type = "for";
	</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:human.id);
		N2 = CreateObjectNodeId(ROOT, msee:object.id);
		AddAttributeString(N1, "type", msee:human.type);
		AddAttributeString(N2, "type", msee:object.type);
		AddAttributeString(N1, "purpose", msee:object.id);
	</veml>
</node>

<node>
	<production>Prep_for_S(msee:object1,msee:object2) -- Prep_for_S(msee:human,msee:object)</production>
	<attribute>
		msee:object1.* = ARG1.msee:human.*;
		msee:object2.* = ARG1.msee:object.*;
	</attribute>
</node>

<node>
	<production>Prep_from(msee:event,msee:object) -- Prep_fromPos(msee:event,msee:object)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:object.id);
		N2 = CreateEventNodeId(ROOT, msee:event.id);
		AddAttributeString(N2, "locationFrom", msee:object.id);
		AddAttributeString(N1, "type", msee:object.type);		
	</veml>
</node>


<node>
	<production>Prep_from(msee:object1,msee:object2) -- Prep_fromPos(msee:object1,msee:object2)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:object1.id);
		N2 = CreateObjectNodeId(ROOT, msee:object2.id);
		AddAttributeString(N1, "type", msee:object1.type);
		AddAttributeString(N2, "type", msee:object2.type);		
		AddAttributeString(N1, "from", msee:object2.id);
	</veml>	
</node>


<node>
	<production>Prep_in(msee:aux,msee:fluent) -- DetPos(msee:fluent,msee:det) Prep_inPos(msee:aux,msee:fluent)</production>
	<attribute>*.* = ARG2.*.*;</attribute>
	<veml>
		N1 = CreateFluentNode(ROOT, msee:fluent.type, msee:fluent.id);
		AddAttributeString(N1, "value", msee:fluent.value);
	</veml>
</node>

<node>
	<production>Prep_in(msee:aux,msee:fluent) -- Prep_inPos(msee:aux,msee:fluent)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
	<veml>
		N1 = CreateFluentNode(ROOT, msee:fluent.type, msee:fluent.id);
		AddAttributeString(N1, "value", msee:fluent.value);
	</veml>
</node>

<node>
	<production>Prep_in(msee:aux,msee:location) -- Prep_inPos(msee:aux,msee:location)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>

<node>
	<production>Prep_in(msee:aux,msee:location) -- Prep_inPos(msee:aux,msee:object)</production>
	<attribute>msee:location.* = ARG1.msee:object.*;</attribute>
</node>

<node>
	<production>Prep_in(msee:event,msee:location) -- Prep_inPos(msee:event,msee:location)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:location.id);
		N2 = CreateEventNodeId(ROOT, msee:event.id);
		AddAttributeString(N2, "locationTo", msee:location.id);
		AddAttributeString(N1, "type", msee:location.type);
	</veml>	
</node>

<node>
	<production>Prep_in(msee:event,msee:location) -- Prep_inPos(msee:event,msee:object)</production>
	<attribute>
		msee:event.* = ARG1.msee:event.*;
		msee:location.* = ARG1.msee:object.*;
	</attribute>	
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:location.id);
		N2 = CreateEventNodeId(ROOT, msee:event.id);
		AddAttributeString(N2, "locationTo", msee:location.id);
		AddAttributeString(N1, "type", msee:location.type);
	</veml>	
</node>

<node>
	<production>Prep_in(msee:event,msee:object) -- Prep_inPos(msee:event,msee:object)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:object.id);
		N2 = CreateEventNodeId(ROOT, msee:event.id);
		AddAttributeString(N1, "type", msee:object.type);
		AddAttributeString(N2, "locationTo", msee:object.id);		
		AddAttributeString(N2, "preposition", msee:prep.type);
	</veml>
</node>

<node>
	<production>Prep_in(msee:human,msee:object) -- Prep_inPos(msee:human,msee:object)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:human.id);
		N2 = CreateObjectNodeId(ROOT, msee:object.id);
		AddAttributeString(N1, "type", msee:human.type);
		AddAttributeString(N2, "type", msee:object.type);
		AddAttributeString(N1, "locationIn", msee:object.id);				
	</veml>
</node>


<node>
	<production>Prep_in(msee:human,msee:location) -- Prep_inPos(msee:human,msee:location)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>

<node>
	<production>Prep_in(msee:object,msee:location) -- Prep_in(msee:human,msee:location)</production>
	<attribute>
		msee:location.* = ARG1.msee:location.*;
		msee:object.* = ARG1.msee:human.*;
	</attribute>
</node>

<node>
	<production>Prep_in(msee:object,msee:location) -- Prep_inPos(msee:object,msee:location)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
		<veml>
		N1 = CreateObjectNodeId(ROOT, msee:object.id);
		N2 = CreateObjectNodeId(ROOT, msee:location.id);
		AddAttributeString(N1, "type", msee:object.type);
		AddAttributeString(N2, "type", msee:location.type);		
		AddAttributeString(N1, "in", msee:location.id);
	</veml>	
</node>

<node>
	<production>Prep_in(msee:object1,msee:object2) -- Prep_inPos(msee:object1,msee:object2)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:object1.id);
		N2 = CreateObjectNodeId(ROOT, msee:object2.id);
		AddAttributeString(N1, "type", msee:object1.type);
		AddAttributeString(N2, "type", msee:object2.type);		
		AddAttributeString(N1, "in", msee:object2.id);
	</veml>	
</node>


<node>
	<production>Prep_in_front_of(msee:object1,msee:object2) -- Prep_in_front_ofPos(msee:object1,msee:object2)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:object1.id);
		N2 = CreateObjectNodeId(ROOT, msee:object2.id);
		AddAttributeString(N1, "type", msee:object1.type);
		AddAttributeString(N2, "type", msee:object2.type);		
		AddAttributeString(N1, "infront", msee:object2.id);
	</veml>	
</node>

<node>
	<production>Prep_inside(msee:object1,msee:object2) -- Prep_insidePos(msee:object1,msee:object2)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:object1.id);
		N2 = CreateObjectNodeId(ROOT, msee:object2.id);
		AddAttributeString(N1, "type", msee:object1.type);
		AddAttributeString(N2, "type", msee:object2.type);		
		AddAttributeString(N1, "inside", msee:object2.id);
	</veml>	
</node>




<node>
	<production>Prep_on_top_of(msee:object1,msee:object2) -- Prep_on_top_ofPos(msee:object1,msee:object2)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:object1.id);
		N2 = CreateObjectNodeId(ROOT, msee:object2.id);
		AddAttributeString(N1, "type", msee:object1.type);
		AddAttributeString(N2, "type", msee:object2.type);		
		AddAttributeString(N1, "ontop", msee:object2.id);
	</veml>	
</node>

<node>
	<production>Prep_outside(msee:object1,msee:object2) -- Prep_outsidePos(msee:object1,msee:object2)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:object1.id);
		N2 = CreateObjectNodeId(ROOT, msee:object2.id);
		AddAttributeString(N1, "type", msee:object1.type);
		AddAttributeString(N2, "type", msee:object2.type);		
		AddAttributeString(N1, "outside", msee:object2.id);
	</veml>	
</node>


<node>
	<production>Prep_into(msee:event,msee:location) -- Prep_intoPos(msee:event,msee:location)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:location.id);
		N2 = CreateEventNodeId(ROOT, msee:event.id);
		AddAttributeString(N2, "locationTo", msee:location.id);
		AddAttributeString(N1, "type", msee:location.type);
	</veml>	
</node>

<node>
	<production>Prep_into(msee:event,msee:object) -- Det(msee:object,msee:det) Amod(msee:object,msee:null) Prep_intoPos(msee:event,msee:object)</production>
	<comment>put a ball into a white box</comment>
	<attribute>
		msee:object.* = ARG1.msee:object.*;
		msee:object.* = ARG2.msee:object.*;
		msee:event.* = ARG3.msee:event.*;		
		msee:prep.type = "into";
	</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:object.id);
		N2 = CreateEventNodeId(ROOT, msee:event.id);
		AddAttributeString(N1, "type", msee:object.type);
		AddAttributeString(N2, "locationTo", msee:object.id);		
		AddAttributeString(N2, "preposition", msee:prep.type);
	</veml>
</node>


<node>
	<production>Prep_into(msee:event,msee:object) -- Prep_intoPos(msee:event,msee:object)</production>
	<attribute>
		*.* = ARG1.*.*;		
		msee:prep.type = "into";
	</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:object.id);
		N2 = CreateEventNodeId(ROOT, msee:event.id);
		AddAttributeString(N1, "type", msee:object.type);
		AddAttributeString(N2, "locationTo", msee:object.id);		
		AddAttributeString(N2, "preposition", msee:prep.type);
	</veml>
</node>




<node>
	<production>Prep_of(msee:event,msee:object) -- Det(msee:object,msee:det) Prep_of_S(msee:event,msee:object)</production>
	<attribute>*.* = ARG2.*.*;</attribute>	
</node>

<node>
	<production>Prep_of(msee:event,msee:object) -- Prep_of_S(msee:event,msee:object)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>

<node>
	<production>Prep_of(msee:object,msee:human) -- Prep_ofPos(msee:object,msee:human)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>

<node>
	<production>Prep_of(msee:object1,msee:object2) -- Prep_ofPos(msee:object1,msee:object2)</production>
	<comment>a bottle of drink</comment>
	<attribute>*.* = ARG1.*.*;</attribute>	
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:object1.id);
		N2 = CreateObjectNodeId(ROOT, msee:object2.id);
		AddAttributeString(N1, "type", msee:object1.type);
		AddAttributeString(N2, "type", msee:object2.type);
		AddAttributeString(N1, "of", msee:object2.id);
	</veml>
</node>
	
<node>
	<production>Prep_of_S(msee:event,msee:object) -- Prep_ofPos(msee:event,msee:object)</production>
	<attribute>
		msee:event.* = ARG1.msee:event.*;
		msee:object.* = ARG1.msee:object.*;
		msee:prep.type = "of";
	</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:object.id);
		N2 = CreateEventNodeId(ROOT, msee:event.id);
		AddAttributeString(N1, "type", msee:object.type);
		AddAttributeString(N2, "patient", msee:object.id);
		AddAttributeString(N2, "preposition", msee:prep.type);
		AddAttributeString(N2, "locationFrom", msee:object.id);
	</veml>
</node>

<node>
	<production>Prep_on(msee:aux,msee:location) -- Prep_onPos(msee:aux,msee:location)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>

<node>
	<production>Prep_on(msee:aux,msee:location) -- Prep_onPos(msee:aux,msee:object)</production>
	<attribute>msee:location.* = ARG1.msee:human:object.*;</attribute>
</node>

<node>
	<production>Prep_on(msee:event,msee:location) -- Prep_onPos(msee:event,msee:location)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>

<node>
	<production>Prep_on(msee:event,msee:location) -- Prep_on(msee:event,msee:object)</production>
	<attribute>
		msee:event.* = ARG1.msee:event.*;
		msee:location.* = ARG1.msee:human:object.*;
	</attribute>
</node>

<node>
	<production>Prep_on(msee:event,msee:object) -- Det(msee:object,msee:det) Prep_onPos(msee:event,msee:object)</production>
	<attribute>*.* = ARG2.*.*;</attribute>	
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:object.id);
		N2 = CreateEventNodeId(ROOT, msee:event.id);
		AddAttributeString(N1, "type", msee:object.type);
		AddAttributeString(N2, "type", msee:event.type);		
		AddAttributeString(N2, "on", msee:object.id);
	</veml>
</node>

<node>
	<production>Prep_on(msee:event,msee:object) -- Prep_onPos(msee:event,msee:object)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:object.id);
		N2 = CreateEventNodeId(ROOT, msee:event.id);
		AddAttributeString(N1, "type", msee:object.type);
		AddAttributeString(N2, "type", msee:event.type);		
		AddAttributeString(N2, "on", msee:object.id);
	</veml>	
</node>

<node>
	<production>Prep_on(msee:eventdo,msee:location) -- Prep_onPos(msee:eventdo,msee:location)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:location.id);
		N2 = CreateEventNodeId(ROOT, msee:event.id);
		AddAttributeString(N1, "type", msee:location.type);
		AddAttributeString(N2, "type", msee:event.type);		
		AddAttributeString(N2, "on", msee:location.id);
	</veml>	
</node>
<node>
	<production>Prep_on(msee:eventdo,msee:location) -- Prep_on(msee:eventdo,msee:object)</production>
	<attribute>
		msee:event.* = ARG1.msee:event.*;
		msee:location.* = ARG1.msee:object.*;
	</attribute>
</node>
<node>
	<production>Prep_on(msee:eventdo,msee:object) -- Prep_onPos(msee:eventdo,msee:object)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>

<node>
	<production>Prep_out_of(msee:event,msee:object) -- Det(msee:object,msee:det) Prep_out_of_S(msee:event,msee:object)</production>
	<attribute>*.* = ARG2.*.*;</attribute>
</node>

<node>
	<production>Prep_out_of(msee:event,msee:object) -- Prep_out_of_S(msee:event,msee:object)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>

<node>
	<production>Prep_out_of_S(msee:event,msee:object) -- Prep_out_ofPos(msee:event,msee:object)</production>
	<attribute>
		msee:event.* = ARG1.msee:event.*;
		msee:object.* = ARG1.msee:object.*;
		msee:prep.type = "out";
	</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:object.id);
		N2 = CreateEventNodeId(ROOT, msee:event.id);
		AddAttributeString(N1, "type", msee:object.type);
		AddAttributeString(N2, "type", msee:event.type);
		AddAttributeString(N2, "patient", msee:object.id);
		AddAttributeString(N2, "preposition", msee:prep.type);
		AddAttributeString(N2, "locationFrom", msee:object.id);
	</veml>
</node>


<node>
	<production>Prep_over(msee:event,msee:object) -- Det(msee:object,msee:det) Prep_over_S(msee:event,msee:object)</production>
	<attribute>*.* = ARG2.*.*;</attribute>
</node>

<node>
	<production>Prep_over(msee:event,msee:object) -- Prep_over_S(msee:event,msee:object)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>

<node>
	<production>Prep_over(msee:event,msee:object) -- Det(msee:location,msee:det) Prep_over_S(msee:event,msee:location)</production>
	<attribute>
		msee:event.* = ARG2.msee:event.*;
		msee:object.* = ARG2.msee:location.*;
	</attribute>
</node>

<node>
	<production>Prep_over(msee:event,msee:object) -- Prep_over_S(msee:event,msee:location)</production>
	<attribute>
		msee:event.* = ARG1.msee:event.*;
		msee:object.* = ARG1.msee:location.*;
	</attribute>
</node>


<node>
	<production>Prep_over_S(msee:event,msee:location) -- Prep_overPos(msee:event,msee:location)</production>
	<attribute>
		msee:event.* = ARG1.msee:event.*;
		msee:location.* = ARG1.msee:location.*;
		msee:prep.type = "over";
	</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:location.id);
		N2 = CreateEventNodeId(ROOT, msee:event.id);
		AddAttributeString(N1, "type", msee:location.type);
		AddAttributeString(N2, "type", msee:event.type);
		AddAttributeString(N2, "over", msee:location.id);
		AddAttributeString(N2, "location", msee:location.id);
	</veml>
</node>

<node>
	<production>Prep_over_S(msee:event,msee:object) -- Prep_over_S(msee:event,msee:location)</production>
	<attribute>
		msee:event.* = ARG1.msee:event.*;
		msee:object.* = ARG1.msee:location.*;
	</attribute>
</node>

<node>
	<production>Prep_over_S(msee:event,msee:object) -- Prep_overPos(msee:event,msee:object)</production>
	<attribute>
		msee:event.* = ARG1.msee:event.*;
		msee:object.* = ARG1.msee:object.*;
		msee:prep.type = "over";
	</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:object.id);
		N2 = CreateEventNodeId(ROOT, msee:event.id);
		AddAttributeString(N1, "type", msee:object.type);
		AddAttributeString(N2, "type", msee:event.type);
		AddAttributeString(N2, "over", msee:object.id);
		AddAttributeString(N2, "location", msee:object.id);
	</veml>
</node>




<node>
	<production>Prep_through(msee:event,msee:object) -- Det(msee:object,msee:det) Prep_through_S(msee:event,msee:object)</production>
	<attribute>*.* = ARG2.*.*;</attribute>
</node>

<node>
	<production>Prep_through(msee:event,msee:object) -- Prep_through_S(msee:event,msee:object)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>

<node>
	<production>Prep_through(msee:event,msee:object) -- Det(msee:location,msee:det) Prep_through_S(msee:event,msee:location)</production>
	<attribute>
		msee:event.* = ARG2.msee:event.*;
		msee:object.* = ARG2.msee:location.*;
	</attribute>
</node>

<node>
	<production>Prep_through(msee:event,msee:object) -- Prep_through_S(msee:event,msee:location)</production>
	<attribute>
		msee:event.* = ARG1.msee:event.*;
		msee:object.* = ARG1.msee:location.*;
	</attribute>
</node>


<node>
	<production>Prep_through_S(msee:event,msee:location) -- Prep_throughPos(msee:event,msee:location)</production>
	<attribute>
		msee:event.* = ARG1.msee:event.*;
		msee:location.* = ARG1.msee:location.*;
		msee:prep.type = "through";
	</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:location.id);
		N2 = CreateEventNodeId(ROOT, msee:event.id);
		AddAttributeString(N1, "type", msee:location.type);
		AddAttributeString(N2, "type", msee:event.type);
		AddAttributeString(N2, "through", msee:location.id);
		AddAttributeString(N2, "location", msee:location.id);
	</veml>
</node>

<node>
	<production>Prep_through_S(msee:event,msee:object) -- Prep_through_S(msee:event,msee:location)</production>
	<attribute>
		msee:event.* = ARG1.msee:event.*;
		msee:object.* = ARG1.msee:location.*;
	</attribute>
</node>

<node>
	<production>Prep_through_S(msee:event,msee:object) -- Prep_throughPos(msee:event,msee:object)</production>
	<attribute>
		msee:event.* = ARG1.msee:event.*;
		msee:object.* = ARG1.msee:object.*;
		msee:prep.type = "through";
	</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:object.id);
		N2 = CreateEventNodeId(ROOT, msee:event.id);
		AddAttributeString(N1, "type", msee:object.type);
		AddAttributeString(N2, "type", msee:event.type);
		AddAttributeString(N2, "through", msee:object.id);
		AddAttributeString(N2, "location", msee:object.id);
	</veml>
</node>

<node>
	<production>Prep_to(msee:event,msee:direction) -- Prep_toPos(msee:event,msee:direction)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
	<veml>
		N1 = CreateEventNodeId(ROOT, msee:event.id);
		AddAttributeString(N1, "type", msee:event.type);
		AddAttributeString(N1, "directionTo", msee:direction.value);
	</veml>
</node>

<node>
	<production>Prep_to(msee:event,msee:location) -- Prep_toPos(msee:event,msee:location)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:location.id);
		N2 = CreateEventNodeId(ROOT, msee:event.id);
		AddAttributeString(N2, "locationTo", msee:location.id);
		AddAttributeString(N1, "type", msee:location.type);
	</veml>	
</node>

<node>
	<production>Prep_to(msee:event,msee:object) -- Prep_toPos(msee:event,msee:human)</production>
	<comment>he talks to someone</comment>
	<attribute>
		msee:event.* = ARG1.msee:event.*;
		msee:object.* = ARG1.msee:human.*;
		msee:prep.type = "to";
	</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:object.id);
		N2 = CreateEventNodeId(ROOT, msee:event.id);		
		AddAttributeString(N1, "type", msee:object.type);
		AddAttributeString(N2, "to", msee:object.id);
	</veml>
</node>


<node>
	<production>Prep_to(msee:event,msee:object) -- Prep_toPos(msee:event,msee:object)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:object.id);
		N2 = CreateEventNodeId(ROOT, msee:event.id);
		AddAttributeString(N2, "locationTo", msee:object.id);
		AddAttributeString(N1, "type", msee:object.type);
	</veml>
</node>

<node>
	<production>Prep_to(msee:event,msee:object) -- Prep_toPos(msee:event,msee:task)</production>
	<comment>go to parent(task)</comment>
	<attribute>
			msee:event.* = ARG1.msee:event.*;
			msee:object.* = ARG1.msee:task.*;
	</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:object.id);
		N2 = CreateEventNodeId(ROOT, msee:event.id);
		AddAttributeString(N2, "locationTo", msee:object.id);
		AddAttributeString(N1, "type", msee:object.type);
	</veml>
</node>



<node>
	<production>Prep_to(msee:object1,msee:object2) -- Prep_toPos(msee:object1,msee:object2)</production>
	<attribute>
			msee:object1.* = ARG1.msee:object1.*;
			msee:object2.* = ARG1.msee:object2.*;
	</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:object1.id);
		N2 = CreateObjectNodeId(ROOT, msee:object2.id);
		AddAttributeString(N1, "to", msee:object2.id);
	</veml>
</node>


<node>
	<production>Prep_towards(msee:event,msee:object) -- Det(msee:object,msee:det) Prep_towards_S(msee:event,msee:object)</production>
	<attribute>*.* = ARG2.*.*;</attribute>
</node>

<node>
	<production>Prep_towards(msee:event,msee:object) -- Prep_towards_S(msee:event,msee:object)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>

<node>
	<production>Prep_towards_S(msee:event,msee:object) -- Prep_towardsPos(msee:event,msee:human)</production>
	<attribute>
		msee:event.* = ARG1.msee:event.*;
		msee:object.* = ARG1.msee:human.*;
		msee:prep.type = "towards";
	</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:object.id);
		N2 = CreateEventNodeId(ROOT, msee:event.id);
		AddAttributeString(N1, "type", msee:object.type);
		AddAttributeString(N2, "type", msee:event.type);
		AddAttributeString(N2, "towards", msee:object.id);
	</veml>
</node>

<node>
	<production>Prep_towards_S(msee:event,msee:object) -- Prep_towardsPos(msee:event,msee:object)</production>
	<attribute>
		msee:event.* = ARG1.msee:event.*;
		msee:object.* = ARG1.msee:object.*;
		msee:prep.type = "towards";
	</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:object.id);
		N2 = CreateEventNodeId(ROOT, msee:event.id);
		AddAttributeString(N1, "type", msee:object.type);
		AddAttributeString(N2, "type", msee:event.type);
		AddAttributeString(N2, "towards", msee:object.id);
	</veml>
</node>





<node>
	<production>Prep_with(msee:aux,msee:object) -- Det(msee:object,msee:det) Prep_with_S(msee:aux,msee:object)</production>
	<attribute>*.* = ARG2.*.*;</attribute>
</node>


<node>
	<production>Prep_with(msee:event,msee:object) -- Det(msee:object,msee:det) Amod(msee:object,msee:null) Prep_with_S(msee:event,msee:object)</production>
	<comment>grasp ball with right hand</comment>
	<attribute>
			msee:event.* = ARG3.msee:event.*;
			msee:object.* = ARG3.msee:object.*;
	</attribute>
</node>


<node>
	<production>Prep_with(msee:event,msee:object) -- Det(msee:object,msee:det) Prep_with_S(msee:event,msee:object)</production>
	<attribute>*.* = ARG2.*.*;</attribute>
</node>


<node>
	<production>Prep_with(msee:event,msee:object) -- Prep_with_S(msee:event,msee:object)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>

<node>
	<production>Prep_with_S(msee:aux,msee:object) -- Prep_withPos(msee:aux,msee:human)</production>
	<attribute>		
		msee:object.* = ARG1.msee:human.*;
		msee:prep.type = "with";
	</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:object.id);		
		AddAttributeString(N1, "type", msee:object.type);		
	</veml>
</node>

<node>
	<production>Prep_with_S(msee:aux,msee:object) -- Prep_withPos(msee:aux,msee:object)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>


<node>
	<production>Prep_with_S(msee:event,msee:object) -- Prep_withPos(msee:event,msee:human)</production>
	<attribute>
		msee:event.* = ARG1.msee:event.*;
		msee:object.* = ARG1.msee:human.*;
		msee:prep.type = "with";
	</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:object.id);
		N2 = CreateEventNodeId(ROOT, msee:event.id);
		AddAttributeString(N1, "type", msee:object.type);
		AddAttributeString(N2, "type", msee:event.type);
		AddAttributeString(N2, "with", msee:object.id);
	</veml>
</node>

<node>
	<production>Prep_with_S(msee:event,msee:object) -- Prep_withPos(msee:event,msee:object)</production>
	<attribute>
		msee:event.* = ARG1.msee:event.*;
		msee:object.* = ARG1.msee:object.*;
		msee:prep.type = "with";
	</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:object.id);
		N2 = CreateEventNodeId(ROOT, msee:event.id);
		AddAttributeString(N1, "type", msee:object.type);
		AddAttributeString(N2, "type", msee:event.type);
		AddAttributeString(N2, "with", msee:object.id);
	</veml>
</node>

<node>
	<production>Preposition(msee:event,msee:null) -- Advmod(msee:event,msee:direction)</production>
	<attribute>
			msee:event.* = ARG1.msee:event.*;
	</attribute>	
</node>


<node>
	<production>Preposition(msee:event,msee:null) -- Acomp(msee:event,msee:direction)</production>
	<attribute>
			msee:event.* = ARG1.msee:event.*;
	</attribute>	
</node>


<node>
	<production>Preposition(msee:event,msee:null) -- Det(msee:direction,msee:det) Prep_from(msee:event,msee:direction)</production>
	<attribute>
			msee:event.* = ARG2.msee:event.*;
	</attribute>	
</node>

<node>
	<production>Preposition(msee:event,msee:null) -- Det(msee:direction,msee:det) Prep_to(msee:event,msee:direction)</production>
	<attribute>
			msee:event.* = ARG2.msee:event.*;
	</attribute>	
</node>


<node>
	<production>Preposition(msee:event,msee:null) -- Prep_from(msee:event,msee:direction)</production>
	<attribute>
			msee:event.* = ARG1.msee:event.*;
	</attribute>	
</node>

<node>
	<production>Preposition(msee:event,msee:null) -- Prep_from(msee:event,msee:direction) Prep_to(msee:event,msee:direction)</production>
	<attribute>
			msee:event.* = ARG1.msee:event.*;
	</attribute>	
</node>

<node>
	<production>Preposition(msee:event,msee:null) -- Prep_to(msee:event,msee:direction)</production>
	<attribute>
			msee:event.* = ARG1.msee:event.*;
	</attribute>	
</node>

<node>
	<production>Preposition(msee:event,msee:object) -- Amod(msee:object,msee:null) Preposition_S(msee:event,msee:object)</production>
	<comment>put a ball into white box</comment>
	<attribute>
		msee:object.* = ARG1.msee:object.*;
		msee:object.* = ARG2.msee:object.*;
		msee:event.* = ARG2.msee:event.*;		
	</attribute>
</node>


<node>
	<production>Preposition(msee:event,msee:object) -- Det(msee:object,msee:det) Amod(msee:object,msee:null) Preposition_S(msee:event,msee:object)</production>
	<comment>put a ball into a white box</comment>
	<attribute>
		msee:object.* = ARG1.msee:object.*;
		msee:object.* = ARG2.msee:object.*;
		msee:object.* = ARG3.msee:object.*;
		msee:event.* = ARG3.msee:event.*;		
	</attribute>
</node>

<node>
	<production>Preposition(msee:event,msee:object) -- Num(msee:object,msee:number) Prep_by(msee:event,msee:object)</production>
	<comment>num(msee:object,msee:number) prep_by(msee:event,msee:object); move table by three inches</comment>
	<attribute>
		msee:object.* = ARG1.msee:object.*;
		msee:object.* = ARG2.msee:object.*;
		msee:event.* = ARG2.msee:event.*;		
	</attribute>
</node>


<node>
	<production>Preposition(msee:event,msee:object) -- Det(msee:object,msee:det) Preposition_S(msee:event,msee:object)</production>
	<comment>put a ball into a box</comment>
	<attribute>
		msee:object.* = ARG1.msee:object.*;
		msee:object.* = ARG2.msee:object.*;
		msee:event.* = ARG2.msee:event.*;		
	</attribute>
</node>


<node>
	<production>Preposition(msee:event,msee:object) -- Det(msee:object,msee:det) Num(msee:object,msee:number) Preposition_S(msee:event,msee:object)</production>
	<comment>with two hands</comment>
	<attribute>
		msee:object.* = ARG1.msee:object.*;
		msee:object.* = ARG3.msee:object.*;
		msee:event.* = ARG3.msee:event.*;		
	</attribute>
</node>

<node>
	<production>Preposition(msee:event,msee:object) -- Num(msee:object,msee:number) Preposition_S(msee:event,msee:object)</production>
	<comment>put a ball into a box</comment>
	<attribute>
		msee:object.* = ARG1.msee:object.*;
		msee:object.* = ARG2.msee:object.*;
		msee:event.* = ARG2.msee:event.*;		
	</attribute>
</node>

<node>
	<production>Preposition(msee:event,msee:object) -- Preposition_S(msee:event,msee:object)</production>
	<comment>put ball into box</comment>
	<attribute>
		msee:object.* = ARG1.msee:object.*;
		msee:event.* = ARG1.msee:event.*;		
	</attribute>
</node>


<node>
	<production>Preposition(msee:human,msee:object) -- Amod(msee:object,msee:null) Preposition_S(msee:human,msee:object)</production>	
	<attribute>
		msee:object.* = ARG1.msee:object.*;
		msee:object.* = ARG2.msee:object.*;
		msee:human.* = ARG2.msee:human.*;		
	</attribute>
</node>


<node>
	<production>Preposition(msee:human,msee:object) -- Det(msee:object,msee:det) Amod(msee:object,msee:null) Preposition_S(msee:human,msee:object)</production>
	<attribute>
		msee:object.* = ARG1.msee:object.*;
		msee:object.* = ARG2.msee:object.*;
		msee:object.* = ARG3.msee:object.*;
		msee:human.* = ARG3.msee:human.*;		
	</attribute>
</node>

<node>
	<production>Preposition(msee:human,msee:object) -- Det(msee:object,msee:det) Preposition_S(msee:human,msee:object)</production>
	<attribute>
		msee:object.* = ARG1.msee:object.*;
		msee:object.* = ARG2.msee:object.*;
		msee:human.* = ARG2.msee:human.*;		
	</attribute>
</node>

<node>
	<production>Preposition(msee:human,msee:object) -- Preposition_S(msee:human,msee:object)</production>
	<attribute>
		msee:object.* = ARG1.msee:object.*;
		msee:human.* = ARG1.msee:human.*;		
	</attribute>
</node>















<node>
	<production>Preposition(msee:null,msee:null) -- Preposition(msee:event,msee:null)</production>
	<attribute>*.*= ARG1.*.*;</attribute>	
</node>

<node>
	<production>Preposition(msee:null,msee:null) -- Preposition(msee:event,msee:object)</production>
	<attribute>*.*= ARG1.*.*;</attribute>	
</node>

<node>
	<production>Preposition(msee:null,msee:null) -- Preposition(msee:human,msee:object)</production>
	<attribute>*.*= ARG1.*.*;</attribute>	
</node>


<node>
	<production>Preposition(msee:null,msee:null) -- Preposition(msee:object1,msee:object2)</production>
	<attribute>*.*= ARG1.*.*;</attribute>	
</node>

<node>
	<production>Preposition(msee:null,msee:null) -- Preposition(msee:object,msee:human)</production>
	<attribute>*.*= ARG1.*.*;</attribute>	
</node>

<node>
	<production>Preposition(msee:object1,msee:object2) -- Amod(msee:object,msee:null) Preposition_S(msee:object1,msee:object2)</production>
	<comment>with left hand</comment>
	<attribute>
		msee:object1.* = ARG2.msee:object1.*;
		msee:object2.* = ARG2.msee:object2.*;		
	</attribute>
</node>


<node>
	<production>Preposition(msee:object1,msee:object2) -- Det(msee:object,msee:det) Amod(msee:object,msee:null) Preposition_S(msee:object1,msee:object2)</production>
	<comment>put a ball in a the box</comment>
	<attribute>
		msee:object1.* = ARG3.msee:object1.*;
		msee:object2.* = ARG3.msee:object2.*;		
	</attribute>
</node>

<node>
	<production>Preposition(msee:object1,msee:object2) -- Det(msee:object,msee:det) Preposition_S(msee:object1,msee:object2)</production>
	<comment>put a ball in a the box</comment>
	<attribute>
		msee:object1.* = ARG2.msee:object1.*;
		msee:object2.* = ARG2.msee:object2.*;		
	</attribute>
</node>

<node>
	<production>Preposition(msee:object1,msee:object2) -- Preposition_S(msee:object1,msee:object2)</production>
	<comment>put ball in box</comment>
	<attribute>
		msee:object1.* = ARG1.msee:object1.*;
		msee:object2.* = ARG1.msee:object2.*;		
	</attribute>
</node>

<node>
	<production>Preposition_P(msee:null,msee:null) -- Preposition(msee:null,msee:null)</production>
	<attribute>*.*= ARG1.*.*;</attribute>	
</node>

<node>
	<production>Preposition_P(msee:null,msee:null) -- Preposition(msee:null,msee:null) Preposition(msee:null,msee:null)</production>
	<comment>focus on the front side of the table</comment>
	<attribute>*.*= ARG1.*.*;</attribute>	
</node>

<node>
	<production>Preposition_P(msee:null,msee:null) -- Preposition(msee:null,msee:null) Preposition(msee:null,msee:null) Preposition(msee:null,msee:null)</production>
	<attribute>*.*= ARG1.*.*;</attribute>	
</node>

<node>
	<production>Preposition_P(msee:null,msee:null) -- Preposition(msee:null,msee:null) Preposition(msee:null,msee:null) Preposition(msee:null,msee:null) Preposition(msee:null,msee:null)</production>
	<attribute>*.*= ARG1.*.*;</attribute>	
</node>


<node>
	<production>Preposition_S(msee:event,msee:object) -- Prep_above(msee:event,msee:object)</production>
	<attribute>*.*= ARG1.*.*;</attribute>	
</node>

<node>
	<production>Preposition_S(msee:event,msee:object) -- Prep_across(msee:event,msee:object)</production>
	<attribute>*.*= ARG1.*.*;</attribute>	
</node>

<node>
	<production>Preposition_S(msee:event,msee:object) -- Prep_among(msee:event,msee:object)</production>
	<attribute>*.*= ARG1.*.*;</attribute>	
</node>

<node>
	<production>Preposition_S(msee:event,msee:object) -- Prep_around(msee:event,msee:object)</production>
	<attribute>*.*= ARG1.*.*;</attribute>	
</node>

<node>
	<production>Preposition_S(msee:event,msee:object) -- Prep_at(msee:event,msee:object)</production>
	<attribute>*.*= ARG1.*.*;</attribute>	
</node>

<node>
	<production>Preposition_S(msee:event,msee:object) -- Prep_away_from(msee:event,msee:object)</production>
	<attribute>*.*=ARG1.*.*;</attribute>	
</node>

<node>
	<production>Preposition_S(msee:event,msee:object) -- Prep_for(msee:event,msee:object)</production>
	<attribute>*.*= ARG1.*.*;</attribute>	
</node>

<node>
	<production>Preposition_S(msee:event,msee:object) -- Prep_from(msee:event,msee:object)</production>
	<attribute>*.*= ARG1.*.*;</attribute>	
</node>

<node>
	<production>Preposition_S(msee:event,msee:object) -- Prep_in(msee:event,msee:object)</production>
	<attribute>*.*= ARG1.*.*;</attribute>	
</node>

<node>
	<production>Preposition_S(msee:event,msee:object) -- Prep_into(msee:event,msee:object)</production>
	<attribute>*.*= ARG1.*.*;</attribute>	
</node>

<node>
	<production>Preposition_S(msee:event,msee:object) -- Prep_on(msee:event,msee:object)</production>
	<attribute>*.*= ARG1.*.*;</attribute>	
</node>

<node>
	<production>Preposition_S(msee:event,msee:object) -- Prep_out_of(msee:event,msee:object)</production>
	<attribute>*.*=ARG1.*.*;</attribute>	
</node>

<node>
	<production>Preposition_S(msee:event,msee:object) -- Prep_over(msee:event,msee:object)</production>
	<attribute>*.*= ARG1.*.*;</attribute>	
</node>


<node>
	<production>Preposition_S(msee:event,msee:object) -- Prep_to(msee:event,msee:object)</production>
	<attribute>*.*=ARG1.*.*;</attribute>	
</node>

<node>
	<production>Preposition_S(msee:event,msee:object) -- Prep_towards(msee:event,msee:object)</production>
	<attribute>*.*=ARG1.*.*;</attribute>	
</node>

<node>
	<production>Preposition_S(msee:event,msee:object) -- Prep_with(msee:event,msee:object)</production>
	<attribute>*.*=ARG1.*.*;</attribute>	
</node>

<node>
	<production>Preposition_S(msee:event,msee:object) -- Prt(msee:event,msee:prep)</production>
	<attribute>*.*=ARG1.*.*;</attribute>	
</node>

<node>
	<production>Preposition_S(msee:event,msee:object) -- Prt(msee:event,msee:prep) Prep_of(msee:event,msee:object)</production>
	<attribute>*.*=ARG2.*.*;</attribute>	
</node>

<node>
	<production>Preposition_S(msee:human,msee:object) -- Prep_in(msee:human,msee:object)</production>
	<attribute>*.*= ARG1.*.*;</attribute>	
</node>


<node>
	<production>Preposition_S(msee:object1,msee:object2) -- Prep_from(msee:object1,msee:object2)</production>
	<attribute>*.*= ARG1.*.*;</attribute>	
</node>

<node>
	<production>Preposition_S(msee:object1,msee:object2) -- Prep_in(msee:object1,msee:object2)</production>
	<attribute>*.*= ARG1.*.*;</attribute>	
</node>

<node>
	<production>Preposition_S(msee:object1,msee:object2) -- Prep_in_front_of(msee:object1,msee:object2)</production>
	<attribute>*.*= ARG1.*.*;</attribute>	
</node>


<node>
	<production>Preposition_S(msee:object1,msee:object2) -- Prep_inside(msee:object1,msee:object2)</production>
	<attribute>*.*= ARG1.*.*;</attribute>	
</node>

<node>
	<production>Preposition_S(msee:object1,msee:object2) -- Prep_of(msee:object1,msee:object2)</production>
	<attribute>*.*= ARG1.*.*;</attribute>	
</node>

<node>
	<production>Preposition_S(msee:object1,msee:object2) -- Prep_to(msee:object1,msee:object2)</production>
	<attribute>*.*= ARG1.*.*;</attribute>	
</node>



<node>
	<production>Preposition_S(msee:object1,msee:object2) -- Prep_on_top_of(msee:object1,msee:object2)</production>
	<attribute>*.*= ARG1.*.*;</attribute>	
</node>


<node>
	<production>Preposition_S(msee:object1,msee:object2) -- Prep_outside(msee:object1,msee:object2)</production>
	<attribute>*.*= ARG1.*.*;</attribute>	
</node>

<node>
	<production>Prt(msee:event,msee:fluent) -- PrtPos(msee:event,msee:fluent)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
	<veml>
		N1 = CreateEventNodeId(ROOT, msee:event.id);
		AddAttributeString(N1, "value", msee:fluent.value);	
	</veml>
</node>


<node>
	<production>Prt(msee:event,msee:prep) -- PrtPos(msee:event,msee:prep)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
	<veml>
		N1 = CreateEventNodeId(ROOT, msee:event.id);
		AddAttributeString(N1, "preposition", msee:prep.type);	
	</veml>
</node>


<node>
	<production>PurposeClause(msee:event1,msee:event2) -- Aux(msee:event,msee:prep) Xcomp(msee:event1,msee:event2)</production>
	<comment>
		he bends to throw 
			nsubj(bends-2, He-1)
			xsubj(throw-4, He-1)
			root(ROOT-0, bends-2)
			aux(throw-4, to-3)
			xcomp(bends-2, throw-4)				
	</comment>
	<attribute>
		msee:event1.*= ARG2.msee:event1.*;
		msee:event2.*= ARG2.msee:event2.*;
	</attribute>
	<veml>	
		N1 = CreateEventNodeId(ROOT, msee:event1.id);
		N2 = CreateEventNodeId(ROOT, msee:event2.id);
		AddAttributeString(N1, "purpose", msee:event2.id);
	</veml>
</node>

<node>
	<production>PurposeClause(msee:event1,msee:event2) -- Aux(msee:event,msee:prep) Xcomp(msee:event1,msee:event2) Destination(msee:event,msee:location)</production>
	<comment>He bends to throw to trashcan </comment>
	<attribute>
		msee:event1.*= ARG2.msee:event1.*;
		msee:event2.*= ARG2.msee:event2.*;
	</attribute>
	<veml>	
		N1 = CreateEventNodeId(ROOT, msee:event1.id);
		N2 = CreateEventNodeId(ROOT, msee:event2.id);
		AddAttributeString(N1, "purpose", msee:event2.id);
	</veml>
</node>

<node>
	<production>PurposeClause(msee:event1,msee:event2) -- Aux(msee:event,msee:prep) Xcomp(msee:event1,msee:event2) Object(msee:event,msee:object)</production>
	<comment>
		He opens door to throw trash 
			nsubj(opens-2, He-1)
			root(ROOT-0, opens-2)
			dobj(opens-2, door-3)
			aux(throw-5, to-4)
			xcomp(opens-2, throw-5)
			dobj(throw-5, trash-6)		
	</comment>
	<attribute>
		msee:event1.*= ARG2.msee:event1.*;
		msee:event2.*= ARG2.msee:event2.*;
	</attribute>
	<veml>	
		N1 = CreateEventNodeId(ROOT, msee:event1.id);
		N2 = CreateEventNodeId(ROOT, msee:event2.id);
		AddAttributeString(N1, "purpose", msee:event2.id);
	</veml>
</node>

<node>
	<production>PurposeClause(msee:event1,msee:event2) -- Aux(msee:event,msee:prep) Xcomp(msee:event1,msee:event2) Object(msee:event,msee:object) Destination(msee:event,msee:location)</production>
	<comment>He bends to throw to trashcan </comment>
	<attribute>
		msee:event1.*= ARG2.msee:event1.*;
		msee:event2.*= ARG2.msee:event2.*;
	</attribute>
	<veml>	
		N1 = CreateEventNodeId(ROOT, msee:event1.id);
		N2 = CreateEventNodeId(ROOT, msee:event2.id);
		AddAttributeString(N1, "purpose", msee:event2.id);
	</veml>
</node>

<node>
	<production>RootP(ROOT-0,msee:aux) -- RootS(ROOT-0,msee:aux)</production>
	<attribute>*.* = ARG1.*.*;</attribute>		
</node>

<node>
	<production>RootP(ROOT-0,msee:event) -- Aux(msee:event,msee:aux) RootP(ROOT-0,msee:event)</production>
	<attribute>
		msee:event.*= ARG2.msee:event.*;
	</attribute>		
</node>

<node>
	<production>RootP(ROOT-0,msee:event) -- Aux(msee:event,msee:prep) RootP(ROOT-0,msee:event)</production>
	<comment>to fold a shirt</comment>
	<attribute>
		msee:event.*= ARG2.msee:event.*;
	</attribute>		
</node>


<node>
	<production>RootP(ROOT-0,msee:event) -- RootS(ROOT-0,msee:event)</production>
	<attribute>msee:event.*= ARG1.msee:event.*;</attribute>		
</node>



<node>
	<production>RootP(ROOT-0,msee:event) -- RootS(ROOT-0,msee:event) Advmod(msee:event,msee:manner)</production>
	<attribute>
		msee:event.*= ARG1.msee:event.*;
		msee:manner.*= ARG2.msee:manner.*;
	</attribute>		
	<veml>
		N1 = CreateEventNodeId(ROOT, msee:event.id);
		AddAttributeString(N1, "manner", msee:manner.value);		
	</veml>
</node>


<node>
	<production>RootP(ROOT-0,msee:event) -- RootS(ROOT-0,msee:event) Object(msee:event,msee:object)</production>
	<attribute>
		msee:event.*= ARG1.msee:event.*;
		msee:event.*= ARG2.msee:event.*;		
		msee:object.*= ARG2.msee:object.*;
	</attribute>		
</node>

<node>
	<production>RootP(ROOT-0,msee:event) -- RootS(ROOT-0,msee:event) Object(msee:event,msee:object) Preposition_P(msee:null,msee:null)</production>
	<attribute>
		msee:event.*= ARG1.msee:event.*;
		msee:event.*= ARG2.msee:event.*;	
		msee:object.*= ARG2.msee:object.*;
	</attribute>		
</node>

<node>
	<production>RootP(ROOT-0,msee:event) -- RootS(ROOT-0,msee:event) Preposition_P(msee:null,msee:null)</production>
	<attribute>
		msee:event.*= ARG1.msee:event.*;
	</attribute>		
	<veml>
		N1 = CreateEventNodeId(ROOT, msee:event.id);
	</veml>
</node>

<node>
	<production>RootP(ROOT-0,msee:event) -- RootS(ROOT-0,msee:event) Prt(msee:event,msee:fluent)</production>
	<comment>He turns off the light. Prt is Phrasal Verb Particle, e.g. in, down, etc. </comment>
	<attribute>
		msee:event.*= ARG1.msee:event.*;
		msee:fluent.*= ARG2.msee:fluent.*;
	</attribute>		
	<veml>
		N1 = CreateEventNodeId(ROOT, msee:event.id);
		AddAttributeString(N1, "value", msee:fluent.value);		
	</veml>
</node>

<node>
	<production>RootP(ROOT-0,msee:event) -- RootS(ROOT-0,msee:event) Prt(msee:event,msee:prep) Object(msee:event,msee:object)</production>
	<comment>Prt is Phrasal Verb Particle, e.g. in, down, etc. </comment>
	<comment>take out a plate</comment>
	<attribute>
		msee:event.*= ARG1.msee:event.*;
	</attribute>		
	<veml>
		N1 = CreateEventNodeId(ROOT, msee:event.id);
	</veml>
</node>

<node>
	<production>RootP(ROOT-0,msee:event) -- RootS(ROOT-0,msee:event) Prt(msee:event,msee:prep) Object(msee:event,msee:object) Preposition_P(msee:null,msee:null)</production>
	<comment>Prt is Phrasal Verb Particle, e.g. in, down, etc. </comment>
	<comment>take out a plate</comment>
	<attribute>
		msee:event.*= ARG1.msee:event.*;
	</attribute>		
	<veml>
		N1 = CreateEventNodeId(ROOT, msee:event.id);
	</veml>
</node>


<node>
	<production>RootP(ROOT-0,msee:event) -- RootS(ROOT-0,msee:event) Prt(msee:event,msee:prep)</production>
	<comment>Prt is Phrasal Verb Particle, e.g. in, down, etc. </comment>
	<comment>take out a plate</comment>
	<attribute>
		msee:event.*= ARG1.msee:event.*;
	</attribute>		
	<veml>
		N1 = CreateEventNodeId(ROOT, msee:event.id);
	</veml>
</node>


<node>
	<production>RootP(ROOT-0,msee:eventdo) -- RootS(ROOT-0,msee:eventdo)</production>
	<attribute>*.* = ARG1.*.*;</attribute>		
</node>

<node>
	<production>RootP(ROOT-0,msee:fluent) -- RootS(ROOT-0,msee:fluent)</production>
	<attribute>msee:fluent.*= ARG1.msee:fluent.*;</attribute>		
</node>

<node>
	<production>RootP(ROOT-0,msee:hummanattr) -- RootP(ROOT-0,msee:human)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>

<node>
	<production>RootP(ROOT-0,msee:hummanattr) -- RootP(ROOT-0,msee:occupation)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>
<node>
	<production>RootP(ROOT-0,msee:hummanattr) -- RootP(ROOT-0,msee:race)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>
<node>
	<production>RootP(ROOT-0,msee:hummanattr) -- RootP(ROOT-0,msee:religion)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>




<node>
	<production>RootP(ROOT-0,msee:human) -- Det(msee:human,msee:det) RootS(ROOT-0,msee:human)</production>
	<attribute>
		*.* = ARG1.*.*;
		*.* = ARG2.*.*;
	</attribute>	
</node>

<node>
	<production>RootP(ROOT-0,msee:human) -- Det(msee:occupation,msee:det) RootP(ROOT-0,msee:occupation)</production>
	<attribute>
		msee:human.*= ARG1.msee:occupation.*;
		msee:human.*= ARG2.msee:occupation.*;
	</attribute>	
</node>

<node>
	<production>RootP(ROOT-0,msee:human) -- RootP(ROOT-0,msee:occupation)</production>
	<attribute>msee:human.*= ARG1.msee:occupation.*;</attribute>	
</node>

<node>
	<production>RootP(ROOT-0,msee:human) -- RootS(ROOT-0,msee:human)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>

<node>
	<production>RootP(ROOT-0,msee:occupation) -- Det(msee:occupation,msee:det) RootS(ROOT-0,msee:occupation)</production>
	<attribute>
		*.* = ARG1.*.*;
		*.* = ARG2.*.*;
	</attribute>	
</node>

<node>
	<production>RootP(ROOT-0,msee:object) -- RootS(ROOT-0,msee:object)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:object.id);
	</veml>	
</node>


<node>
	<production>RootP(ROOT-0,msee:objectattr) -- RootS(ROOT-0,msee:color)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>

<node>
	<production>RootP(ROOT-0,msee:objectattr) -- RootS(ROOT-0,msee:size)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>
<node>
	<production>RootP(ROOT-0,msee:occupation) -- RootS(ROOT-0,msee:occupation)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>

<node>
	<production>RootP(ROOT-0,msee:race) -- Det(msee:race,msee:det) RootS(ROOT-0,msee:race)</production>
	<attribute>
		*.* = ARG1.*.*;
		*.* = ARG2.*.*;
	</attribute>	
</node>
<node>
	<production>RootP(ROOT-0,msee:race) -- RootS(ROOT-0,msee:race)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>

<node>
	<production>RootP(ROOT-0,msee:religion) -- Det(msee:religion,msee:aux) RootS(ROOT-0,msee:religion)</production>
	<attribute>
		*.* = ARG1.*.*;
		*.* = ARG2.*.*;
	</attribute>	
</node>
<node>
	<production>RootP(ROOT-0,msee:religion) -- Det(msee:religion,msee:det) RootS(ROOT-0,msee:religion)</production>
	<attribute>
		*.* = ARG1.*.*;
		*.* = ARG2.*.*;
	</attribute>	
</node>
<node>
	<production>RootP(ROOT-0,msee:religion) -- RootS(ROOT-0,msee:religion)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>

<node>
	<production>RootP(ROOT-0,msee:yearold) -- RootS(ROOT-0,msee:yearold)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>

<node>
	<production>RootS(ROOT-0,msee:aux) -- RootSPos(ROOT-0,msee:aux)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>

<node>
	<production>RootS(ROOT-0,msee:color) -- RootSPos(ROOT-0,msee:color)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>


<node>
	<production>RootS(ROOT-0,msee:event) -- RootSPos(ROOT-0,msee:event)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>
<node>
	<production>RootS(ROOT-0,msee:eventdo) -- RootSPos(ROOT-0,msee:eventdo)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>
<node>
	<production>RootS(ROOT-0,msee:fluent) -- RootSPos(ROOT-0,msee:fluent)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>


<node>
	<production>RootS(ROOT-0,msee:human) -- RootSPos(ROOT-0,msee:human)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>

<node>
	<production>RootS(ROOT-0,msee:object) -- RootSPos(ROOT-0,msee:object)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>

<node>
	<production>RootS(ROOT-0,msee:occupation) -- RootSPos(ROOT-0,msee:occupation)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>
<node>
	<production>RootS(ROOT-0,msee:race) -- RootSPos(ROOT-0,msee:race)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>
<node>
	<production>RootS(ROOT-0,msee:religion) -- RootSPos(ROOT-0,msee:religion)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>
<node>
	<production>RootS(ROOT-0,msee:size) -- RootSPos(ROOT-0,msee:size)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>

<node>
	<production>RootS(ROOT-0,msee:yearold) -- RootSPos(ROOT-0,msee:yearold)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>

<node>
	<production>Size(msee:object,msee:size) -- AmodPos(msee:object,msee:size)</production>
	<attribute>
		*.*= ARG1.*.*;	
		msee:object.size= ARG1.msee:size.value;
	</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:object.id);
		AddAttributeString(N1, "type", msee:object.type);
		AddAttributeString(N1, "size", msee:object.size);
	</veml>
</node>



<node>
	<production>Subject(msee:aux,msee:event) -- Nsubj(msee:aux,msee:event)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>

<node>
	<production>Subject(msee:aux,msee:object) -- Det(msee:human,msee:det) Nsubj(msee:aux,msee:human)</production>  
	<attribute>msee:object.*= ARG1.msee:human.*;</attribute>	
</node>

<node>
	<production>Subject(msee:aux,msee:object) -- Det(msee:object,msee:det) Nsubj(msee:aux,msee:object)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>



<node>
	<production>Subject(msee:aux,msee:object) -- Nsubj(msee:aux,msee:object)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>



<node>
	<production>Subject(msee:aux,msee:object) -- Num(msee:object,msee:number) Nsubj(msee:aux,msee:object)</production>
	<attribute>	
		*.*= ARG2.*.*;
		msee:object.num= ARG1.msee:number.value;
	</attribute>
	<veml>	
		N1 = CreateObjectNodeId(ROOT, msee:object.id);
		AddAttributeString(N1, "type", msee:object.type);
		AddAttributeString(N1, "num", msee:object.num);		
	</veml>
</node>

<node>
	<production>Subject(msee:event,msee:object) -- Agent(msee:event,msee:object)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>

<node>
	<production>Subject(msee:eventdo,msee:object) -- Agent(msee:eventdo,msee:object)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>

<node>
	<production>Subject(msee:fluent,msee:object) -- Nsubj(msee:fluent,msee:object)</production>
	<attribute>	
		*.*= ARG1.*.*;
	</attribute>
</node>
<node>
	<production>Subject(msee:fluent,msee:object) -- Det(msee:object,msee:det) Nsubj(msee:fluent,msee:object)</production>
	<attribute>*.*= ARG2.*.*;</attribute>
</node>

<node>
	<production>Subject(msee:human,msee:human) -- Det(msee:human,msee:det) Amod(msee:human,msee:direction) Nsubj(msee:human,msee:human)</production>
	<attribute>*.*= ARG3.*.*;</attribute>
</node>

<node>
	<production>Subject(msee:human,msee:human) -- Det(msee:human,msee:det) Nsubj(msee:human,msee:human)</production>
	<attribute>*.*= ARG2.*.*;</attribute>
</node>
<node>
	<production>Subject(msee:human1,msee:human2) -- Nsubj(msee:human1,msee:human2)</production>
	<attribute>*.*= ARG1.*.*;</attribute>
</node>


<node>
	<production>Subject(msee:hummanattr,msee:human) -- Amod(msee:human,msee:direction) Subject(msee:human1,msee:human2)</production>
	<attribute>
		msee:hummanattr.*=ARG2.msee:human1.*;
		msee:human.*=ARG2.msee:human2.*;
	</attribute>
</node>

<node>
	<production>Subject(msee:hummanattr,msee:human) -- Subject(msee:human1,msee:human2)</production>
	<attribute>
		msee:hummanattr.*=ARG1.msee:human1.*;
		msee:human.*=ARG1.msee:human2.*;
	</attribute>
</node>

<node>
	<production>Subject(msee:hummanattr,msee:human) -- Subject(msee:occupation,msee:human)</production>
	<attribute>
		msee:hummanattr.*=ARG1.msee:occupation.*;
		msee:human.*=ARG1.msee:human.*;
	</attribute>
</node>

<node>
	<production>Subject(msee:hummanattr,msee:human) -- Subject(msee:race,msee:human)</production>
	<attribute>
		msee:hummanattr.*=ARG1.msee:race.*;
		msee:human.*=ARG1.msee:human.*;
	</attribute>
</node>

<node>
	<production>Subject(msee:hummanattr,msee:human) -- Subject(msee:religion,msee:human)</production>
	<attribute>
		msee:hummanattr.*=ARG1.msee:religion.*;
		msee:human.*=ARG1.msee:human.*;
	</attribute>
</node>





<node>
	<production>Subject(msee:objectattr,msee:object) -- Det(msee:object,msee:det) Nsubj(msee:objectattr,msee:object)</production>
	<attribute>*.*= ARG2.*.*;</attribute>
</node>
<node>
	<production>Subject(msee:objectattr,msee:object) -- Nsubj(msee:objectattr,msee:object)</production>
	<attribute>*.*= ARG1.*.*;</attribute>
</node>



<node>
	<production>Subject(msee:occupation,msee:human) -- Det(msee:human,msee:det) Nsubj(msee:occupation,msee:human)</production>
	<attribute>*.*= ARG2.*.*;</attribute>
</node>
<node>
	<production>Subject(msee:occupation,msee:human) -- Nsubj(msee:occupation,msee:human)</production>
	<attribute>*.*= ARG1.*.*;</attribute>
</node>


<node>
	<production>Subject(msee:race,msee:human) -- Det(msee:human,msee:det) Nsubj(msee:race,msee:human)</production>
	<attribute>*.*= ARG2.*.*;</attribute>
</node>
<node>
	<production>Subject(msee:race,msee:human) -- Nsubj(msee:race,msee:human)</production>
	<attribute>*.*= ARG1.*.*;</attribute>
</node>


<node>
	<production>Subject(msee:religion,msee:human) -- Det(msee:human,msee:det) Nsubj(msee:religion,msee:human)</production>
	<attribute>*.*= ARG2.*.*;</attribute>
</node>
<node>
	<production>Subject(msee:religion,msee:human) -- Nsubj(msee:religion,msee:human)</production>
	<attribute>*.*= ARG1.*.*;</attribute>
</node>


<node>
	<production>Subject(msee:yearold,msee:human) -- Det(msee:human,msee:det) Nsubj(msee:yearold,msee:human)</production>
	<attribute>*.*= ARG2.*.*;</attribute>
</node>


<node>
	<production>SubjectPassive(msee:event,msee:what) -- NsubjPass(msee:event,msee:what)</production>
	<attribute>*.*= ARG1.*.*;</attribute>
</node>


<node>
	<production>SubjectPassive(msee:event,msee:object) -- Det(msee:object,msee:det) NsubjPass(msee:event,msee:object)</production>
	<attribute>
		msee:event.*= ARG2.msee:event.*;
		msee:object.*= ARG1.msee:object.*;
		msee:object.*= ARG2.msee:object.*;
	</attribute>
	<veml>	
		N1 = CreateEventNodeId(ROOT, msee:event.id);
		N2 = CreateObjectNodeId(ROOT, msee:object.id);		
		AddAttributeString(N1, "patient", msee:object.id);
	</veml>
</node>

<node>
	<production>Xcomp(msee:event1,msee:event2) -- XcompPos(msee:event1,msee:event2)</production>
	<comment>can be purpose or open clause</comment>
	<attribute>
		msee:event1.*= ARG1.msee:event1.*;
		msee:event2.*= ARG1.msee:event2.*;
	</attribute>	
</node>



<comment>*************************************************************</comment>
<comment>*************************************************************</comment>
<comment>*************************************************************</comment>
<comment>*************************************************************</comment>
<comment>*************************************************************</comment>
<comment>*************************************************************</comment>
<comment>*************************************************************</comment>
<comment>*************************************************************</comment>
<comment>*************************************************************</comment>
<comment>*************************************************************</comment>
<comment>*************************************************************</comment>
<comment>*************************************************************</comment>
<comment>*************************************************************</comment>
<comment>*************************************************************</comment>
<comment>*************************************************************</comment>
<comment>*************************************************************</comment>
<comment>*************************************************************</comment>
<comment>*************************************************************</comment>
<comment>*************************************************************</comment>
<comment>*************************************************************</comment>
<comment>*************************************************************</comment>



	
<comment>*************************************************************</comment>
<comment>*************************************************************</comment>
<comment>*************************************************************</comment>

<node>
	<production>AcompPos(msee:aux,msee:where) -- acomp(msee:aux,msee:where)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>


<node>
	<production>AcompPos(msee:event,msee:direction) -- acomp(msee:event,msee:direction)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>


<node>
	<production>AdvmodPos(msee:aux,msee:when) -- advmod(msee:aux,msee:when)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>


<node>
	<production>AdvmodPos(msee:aux,msee:where) -- advmod(msee:aux,msee:where)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>

<node>
	<production>AdvmodPos(msee:event,msee:direction) -- advmod(msee:event,msee:direction)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>

<node>
	<production>AdvmodPos(msee:event,msee:manner) -- advmod(msee:event,msee:manner)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>


<node>
	<production>AdvmodPos(msee:event,msee:when) -- advmod(msee:event,msee:when)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>

<node>
	<production>AdvmodPos(msee:event,msee:where) -- advmod(msee:event,msee:where)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>

<node>
	<production>AdvmodPos(msee:event,msee:why) -- advmod(msee:event,msee:why)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>

<node>
	<production>AdvmodPos(msee:fluent,msee:manner) -- advmod(msee:fluent,msee:manner)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>

<node>
	<production>AdvmodPos(msee:fluent,msee:why) -- advmod(msee:fluent,msee:why)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>

<node>
	<production>AmodPos(msee:human,msee:direction) -- amod(msee:human,msee:direction)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>

<node>
	<production>AmodPos(msee:human,msee:event) -- amod(msee:human,msee:event)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>

<node>
	<production>AmodPos(msee:object,msee:color) -- amod(msee:object,msee:color)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>

<node>
	<production>AmodPos(msee:object,msee:direction) -- amod(msee:object,msee:direction)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>

<node>
	<production>AmodPos(msee:object,msee:event) -- amod(msee:object,msee:event)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>

<node>
	<production>AmodPos(msee:object,msee:manner) -- amod(msee:object,msee:manner)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>

<node>
	<production>AmodPos(msee:object,msee:position) -- amod(msee:object,msee:position)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>

<node>
	<production>AmodPos(msee:object,msee:size) -- amod(msee:object,msee:size)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>

<node>
	<production>AmodPos(msee:human,msee:yearold) -- amod(msee:human,msee:yearold)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>


<node>
	<production>AuxpassPos(msee:event,msee:aux) -- auxpass(msee:event,msee:aux)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>

<node>
	<production>AuxpassPos(msee:fluent,msee:aux) -- auxpass(msee:fluent,msee:aux)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>


<node>
	<production>AttrPos(msee:aux,msee:what) -- attr(msee:aux,msee:what)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>



<node>
	<production>AttrPos(msee:aux,msee:who) -- attr(msee:aux,msee:who)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>


<node>
	<production>AttrPos(msee:object,msee:who) -- attr(msee:object,msee:who)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>

<node>
	<production>AuxPos(msee:event,msee:aux) -- aux(msee:event,msee:aux)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>

<node>
	<production>AuxPos(msee:event,msee:prep) -- aux(msee:event,msee:prep)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node> 

<node>
	<production>AuxPos(msee:eventdo,msee:aux) -- aux(msee:eventdo,msee:aux)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>

<node>
	<production>Conj_andPos(msee:event,msee:event) -- conj_and(msee:event,msee:event)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>

<node>
	<production>Conj_andPos(msee:object,msee:event) -- conj_and(msee:object,msee:event)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>

<node>
	<production>CopPos(msee:color,msee:aux) -- cop(msee:color,msee:aux)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>


<node>
	<production>CopPos(msee:event,msee:aux) -- cop(msee:event,msee:aux)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>
<node>
	<production>CopPos(msee:fluent,msee:aux) -- cop(msee:fluent,msee:aux)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>

<node>
	<production>CopPos(msee:human,msee:aux) -- cop(msee:human,msee:aux)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>


<node>
	<production>CopPos(msee:object,msee:aux) -- cop(msee:object,msee:aux)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>


<node>
	<production>CopPos(msee:occupation,msee:aux) -- cop(msee:occupation,msee:aux)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>

<node>
	<production>CopPos(msee:race,msee:aux) -- cop(msee:race,msee:aux)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>
<node>
	<production>CopPos(msee:religion,msee:aux) -- cop(msee:religion,msee:aux)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>

<node>
	<production>CopPos(msee:size,msee:aux) -- cop(msee:size,msee:aux)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>


<node>
	<production>CopPos(msee:yearold,msee:aux) -- cop(msee:yearold,msee:aux)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>

<node>
	<production>DepPos(msee:event,msee:how) -- dep(msee:event,msee:how)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>


<node>
	<production>DepPos(msee:event,msee:human) -- dep(msee:event,msee:human)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>

<node>
	<production>DepPos(msee:event,msee:who) -- dep(msee:event,msee:who)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>

<node>
	<production>DetPos(msee:direction,msee:det) -- det(msee:direction,msee:det)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>

<node>
	<production>DetPos(msee:fluent,msee:det) -- det(msee:fluent,msee:det)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>

<node>
	<production>DetPos(msee:human,msee:det) -- det(msee:human,msee:det)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>


<node>
	<production>DetPos(msee:human,msee:what) -- det(msee:human,msee:what)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>




<node>
	<production>DetPos(msee:location,msee:det) -- det(msee:location,msee:det)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>
<node>
	<production>DetPos(msee:object,msee:det) -- det(msee:object,msee:det)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>

<node>
	<production>DetPos(msee:object,msee:what) -- det(msee:object,msee:what)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>


<node>
	<production>DetPos(msee:occupation,msee:det) -- det(msee:occupation,msee:det)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>

<node>
	<production>DetPos(msee:race,msee:det) -- det(msee:race,msee:det)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>

<node>
	<production>DetPos(msee:religion,msee:aux) -- det(msee:religion,msee:aux)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>
<node>
	<production>DetPos(msee:religion,msee:det) -- det(msee:religion,msee:det)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>

<node>
	<production>DobjPos(msee:event,msee:human) -- dobj(msee:event,msee:human)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>
<node>
	<production>DobjPos(msee:event,msee:location) -- dobj(msee:event,msee:location)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>

<node>
	<production>DobjPos(msee:event,msee:object) -- dobj(msee:event,msee:object)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>

<node>
	<production>DobjPos(msee:event,msee:task) -- dobj(msee:event,msee:task)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>

<node>
	<production>DobjPos(msee:event,msee:what) -- dobj(msee:event,msee:what)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>

<node>
	<production>DobjPos(msee:eventdo,msee:object) -- dobj(msee:eventdo,msee:object)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>
<node>
	<production>DobjPos(msee:eventdo,msee:location) -- dobj(msee:eventdo,msee:location)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>
<node>
	<production>DobjPos(msee:eventdo,msee:what) -- dobj(msee:eventdo,msee:what)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>

<node>
	<production>ExplPos(msee:aux,msee:expletive) -- expl(msee:aux,msee:expletive)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>

<node>
	<production>NnPos(msee:event,msee:human) -- nn(msee:event,msee:human)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>

<node>
	<production>NnPos(msee:event,msee:humanname) -- nn(msee:event,msee:humanname)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>

<node>
	<production>NnPos(msee:event,msee:object) -- nn(msee:event,msee:object)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>

<node>
	<production>NnPos(msee:object,msee:event) -- nn(msee:object,msee:event)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>

<node>
	<production>NpadvmodPos(msee:yearold,msee:number) -- npadvmod(msee:yearold,msee:number)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>

<node>
	<production>NsubjPassPos(msee:event,msee:object) -- nsubjpass(msee:event,msee:object)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>
<node>
	<production>NsubjPassPos(msee:event,msee:what) -- nsubjpass(msee:event,msee:what)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>
<node>
	<production>NsubjpassPos(msee:fluent,msee:object) -- nsubjpass(msee:fluent,msee:object)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>

<node>
	<production>NsubjPos(msee:aux,msee:event) -- nsubj(msee:aux,msee:event)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>

<node>
	<production>NsubjPos(msee:aux,msee:human) -- nsubj(msee:aux,msee:human)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>

<node>
	<production>NsubjPos(msee:aux,msee:humanname) -- nsubj(msee:aux,msee:humanname)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>

<node>
	<production>NsubjPos(msee:aux,msee:object) -- nsubj(msee:aux,msee:object)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>

<node>
	<production>NsubjPos(msee:color,msee:object) -- nsubj(msee:color,msee:object)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node> 

<node>
	<production>NsubjPos(msee:event,msee:human) -- nsubj(msee:event,msee:human)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>

<node>
	<production>NsubjPos(msee:event,msee:humanname) -- nsubj(msee:event,msee:humanname)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>

<node>
	<production>NsubjPos(msee:event,msee:object) -- nsubj(msee:event,msee:object)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>
<node>
	<production>NsubjPos(msee:event,msee:occupation) -- nsubj(msee:event,msee:occupation)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>

<node>
	<production>NsubjPos(msee:event,msee:who) -- nsubj(msee:event,msee:who)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>



<node>
	<production>NsubjPos(msee:eventdo,msee:human) -- nsubj(msee:eventdo,msee:human)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>


<node>
	<production>NsubjPos(msee:eventdo,msee:humanname) -- nsubj(msee:eventdo,msee:humanname)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>


<node>
	<production>NsubjPos(msee:eventdo,msee:object) -- nsubj(msee:eventdo,msee:object)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>

<node>
	<production>NsubjPos(msee:eventdo,msee:who) -- nsubj(msee:eventdo,msee:who)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>



<node>
	<production>NsubjPos(msee:fluent,msee:object) -- nsubj(msee:fluent,msee:object)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>
<node>
	<production>NsubjPos(msee:fluent,msee:human) -- nsubj(msee:fluent,msee:human)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>

<node>
	<production>NsubjPos(msee:fluent,msee:humanname) -- nsubj(msee:fluent,msee:humanname)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>

<node>
	<production>NsubjPos(msee:human1,msee:human2) -- nsubj(msee:human,msee:human)</production>
	<attribute>
		msee:human1.*= ARG1.FIELD1.msee:human.*;
		msee:human2.*= ARG1.FIELD2.msee:human.*;		
	</attribute>	
</node>


<node>
	<production>NsubjPos(msee:object,msee:who) -- nsubj(msee:object,msee:who)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node> 

<node>
	<production>NsubjPos(msee:occupation,msee:human) -- nsubj(msee:occupation,msee:human)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node> 
<node>
	<production>NsubjPos(msee:race,msee:human) -- nsubj(msee:race,msee:human)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node> 
<node>
	<production>NsubjPos(msee:religion,msee:human) -- nsubj(msee:religion,msee:human)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node> 

<node>
	<production>NsubjPos(msee:size,msee:object) -- nsubj(msee:size,msee:object)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node> 

<node>
	<production>NsubjPos(msee:yearold,msee:human) -- nsubj(msee:yearold,msee:human)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node> 
<node>
	<production>NsubjPos(msee:yearold,msee:humanname) -- nsubj(msee:yearold,msee:humanname)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>
<node>
	<production>NsubjPos(msee:yearold,msee:occupation) -- nsubj(msee:yearold,msee:occupation)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>

<node>
	<production>NumPos(msee:object,msee:number) -- num(msee:object,msee:number)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>
<node>
	<production>NumPos(msee:human,msee:number) -- num(msee:human,msee:number)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>
<node>
	<production>NumPos(msee:human,msee:yearold) -- num(msee:human,msee:yearold)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>

<node>
	<production>NumberPos(msee:human,msee:yearold) -- number(msee:human,msee:yearold)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>


<node>
	<production>NumberPos(msee:yearold,msee:number) -- number(msee:yearold,msee:number)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>


<node>
	<production>PartmodPos(msee:human,msee:event) -- partmod(msee:human,msee:event)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>

<node>
	<production>PartmodPos(msee:object,msee:event) -- partmod(msee:object,msee:event)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>


<node>
	<production>PossPos(msee:human,msee:poss) -- poss(msee:human,msee:poss)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>


<node>
	<production>PossPos(msee:object,msee:poss) -- poss(msee:object,msee:poss)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>

<node>
	<production>PrepPos(msee:event,msee:from) -- prep(msee:event,msee:from)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>


<node>
	<production>PrepPos(msee:event,msee:into) -- prep(msee:event,msee:into)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>

<node>
	<production>PrepPos(msee:event,msee:to) -- prep(msee:event,msee:to)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>

<node>
	<production>Prep_Pos(msee:event,msee:location) -- prep(msee:event,msee:location)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>

<node>
	<production>Prep_abovePos(msee:event,msee:object) -- prep_above(msee:event,msee:object)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>


<node>
	<production>Prep_acrossPos(msee:event,msee:location) -- prep_across(msee:event,msee:location)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>
<node>
	<production>Prep_acrossPos(msee:event,msee:object) -- prep_across(msee:event,msee:object)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>

<node>
	<production>Prep_amongPos(msee:event,msee:object) -- prep_among(msee:event,msee:object)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>

<node>
	<production>Prep_aroundPos(msee:event,msee:location) -- prep_around(msee:event,msee:location)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>
<node>
	<production>Prep_aroundPos(msee:event,msee:object) -- prep_around(msee:event,msee:object)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>

<node>
	<production>Prep_atPos(msee:aux,msee:location) -- prep_at(msee:aux,msee:location)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>

<node>
	<production>Prep_atPos(msee:aux,msee:object) -- prep_at(msee:aux,msee:object)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>

<node>
	<production>Prep_atPos(msee:event,msee:location) -- prep_at(msee:event,msee:location)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>
<node>
	<production>Prep_atPos(msee:event,msee:object) -- prep_at(msee:event,msee:object)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>


<node>
	<production>Prep_atPos(msee:eventdo,msee:location) -- prep_at(msee:eventdo,msee:location)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>
<node>
	<production>Prep_atPos(msee:eventdo,msee:object) -- prep_at(msee:eventdo,msee:object)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>


<node>
	<production>Prep_atPos(msee:object,msee:location) -- prep_at(msee:object,msee:location)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>

<node>
	<production>Prep_atPos(msee:object1,msee:object2) -- prep_at(msee:object,msee:object)</production>
	<attribute>
		msee:object1.*= ARG1.FIELD1.msee:object.*;
		msee:object2.*= ARG1.FIELD2.msee:object.*;
	</attribute>	
</node>

<node>
	<production>Prep_away_fromPos(msee:event,msee:human) -- prep_away_from(msee:event,msee:human)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>

<node>
	<production>Prep_away_fromPos(msee:event,msee:object) -- prep_away_from(msee:event,msee:object)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>

<node>
	<production>Prep_byPos(msee:event,msee:object) -- prep_by(msee:event,msee:object)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>

<node>
	<production>Prep_forPos(msee:event,msee:object) -- prep_for(msee:event,msee:object)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>

<node>
	<production>Prep_forPos(msee:human,msee:object) -- prep_for(msee:human,msee:object)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>

<node>
	<production>Prep_fromPos(msee:event,msee:direction) -- prep_from(msee:event,msee:direction)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>

<node>
	<production>Prep_fromPos(msee:event,msee:object) -- prep_from(msee:event,msee:object)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>

<node>
	<production>Prep_fromPos(msee:object1,msee:object2) -- prep_from(msee:object,msee:object)</production>
	<attribute>		
		msee:object1.*= ARG1.FIELD1.msee:object.*;
		msee:object2.*= ARG1.FIELD2.msee:object.*;
	</attribute>
</node>

<node>
	<production>Prep_inPos(msee:aux,msee:fluent) -- prep_in(msee:aux,msee:fluent)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>
<node>
	<production>Prep_inPos(msee:aux,msee:location) -- prep_in(msee:aux,msee:location)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>
<node>
	<production>Prep_inPos(msee:aux,msee:object) -- prep_in(msee:aux,msee:object)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>

<node>
	<production>Prep_inPos(msee:event,msee:location) -- prep_in(msee:event,msee:location)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>

<node>
	<production>Prep_inPos(msee:event,msee:object) -- prep_in(msee:event,msee:object)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>
<node>
	<production>Prep_inPos(msee:human,msee:location) -- prep_in(msee:human,msee:location)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>

<node>
	<production>Prep_inPos(msee:human,msee:object) -- prep_in(msee:human,msee:object)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>

<node>
	<production>Prep_inPos(msee:object,msee:location) -- prep_in(msee:object,msee:location)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>

<node>
	<production>Prep_inPos(msee:object1,msee:object2) -- prep_in(msee:object,msee:object)</production>
	<attribute>		
		msee:object1.*= ARG1.FIELD1.msee:object.*;
		msee:object2.*= ARG1.FIELD2.msee:object.*;
	</attribute>
</node>

<node>
	<production>Prep_in_front_ofPos(msee:object1,msee:object2) -- prep_in_front_of(msee:object,msee:object)</production>
	<attribute>		
		msee:object1.*= ARG1.FIELD1.msee:object.*;
		msee:object2.*= ARG1.FIELD2.msee:object.*;
	</attribute>
</node>



<node>
	<production>Prep_insidePos(msee:object1,msee:object2) -- prep_inside(msee:object,msee:object)</production>
	<attribute>		
		msee:object1.*= ARG1.FIELD1.msee:object.*;
		msee:object2.*= ARG1.FIELD2.msee:object.*;
	</attribute>
</node>


<node>
	<production>Prep_intoPos(msee:event,msee:location) -- prep_into(msee:event,msee:location)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>

<node>
	<production>Prep_intoPos(msee:event,msee:object) -- prep_into(msee:event,msee:object)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>

<node>
	<production>Prep_intoPos(msee:eventdo,msee:location) -- prep_into(msee:eventdo,msee:location)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>

<node>
	<production>Prep_intoPos(msee:eventdo,msee:object) -- prep_into(msee:eventdo,msee:object)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>



<node>
	<production>Prep_ofPos(msee:event,msee:object) -- prep_of(msee:event,msee:object)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>

<node>
	<production>Prep_ofPos(msee:object,msee:human) -- prep_of(msee:object,msee:human)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>

<node>
	<production>Prep_ofPos(msee:object1,msee:object2) -- prep_of(msee:object,msee:object)</production>
	<attribute>		
		msee:object1.*= ARG1.FIELD1.msee:object.*;
		msee:object2.*= ARG1.FIELD2.msee:object.*;
	</attribute>
</node>

<node>
	<production>Prep_onPos(msee:aux,msee:location) -- prep_on(msee:aux,msee:location)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>

<node>
	<production>Prep_onPos(msee:aux,msee:object) -- prep_on(msee:aux,msee:object)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>

<node>
	<production>Prep_onPos(msee:event,msee:location) -- prep_on(msee:event,msee:location)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>
<node>
	<production>Prep_onPos(msee:event,msee:object) -- prep_on(msee:event,msee:object)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>

<node>
	<production>Prep_onPos(msee:eventdo,msee:location) -- prep_on(msee:eventdo,msee:location)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>
<node>
	<production>Prep_onPos(msee:eventdo,msee:object) -- prep_on(msee:eventdo,msee:object)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>

<node>
	<production>Prep_on_top_ofPos(msee:object1,msee:object2) -- prep_on_top_of(msee:object,msee:object)</production>
	<attribute>		
		msee:object1.*= ARG1.FIELD1.msee:object.*;
		msee:object2.*= ARG1.FIELD2.msee:object.*;
	</attribute>
</node>

<node>
	<production>Prep_out_ofPos(msee:event,msee:object) -- prep_out_of(msee:event,msee:object)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>

<node>
	<production>Prep_outsidePos(msee:object1,msee:object2) -- prep_outside(msee:object,msee:object)</production>
	<attribute>		
		msee:object1.*= ARG1.FIELD1.msee:object.*;
		msee:object2.*= ARG1.FIELD2.msee:object.*;
	</attribute>
</node>

<node>
	<production>Prep_overPos(msee:event,msee:location) -- prep_over(msee:event,msee:location)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>
<node>
	<production>Prep_overPos(msee:event,msee:object) -- prep_over(msee:event,msee:object)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>


<node>
	<production>Prep_throughPos(msee:event,msee:location) -- prep_through(msee:event,msee:location)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>
<node>
	<production>Prep_throughPos(msee:event,msee:object) -- prep_through(msee:event,msee:object)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>

<node>
	<production>Prep_toPos(msee:event,msee:direction) -- prep_to(msee:event,msee:direction)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>

<node>
	<production>Prep_toPos(msee:event,msee:human) -- prep_to(msee:event,msee:human)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>

<node>
	<production>Prep_toPos(msee:event,msee:location) -- prep_to(msee:event,msee:location)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>
<node>
	<production>Prep_toPos(msee:event,msee:object) -- prep_to(msee:event,msee:object)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>

<node>
	<production>Prep_toPos(msee:event,msee:task) -- prep_to(msee:event,msee:task)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>

<node>
	<production>Prep_toPos(msee:eventdo,msee:location) -- prep_to(msee:eventdo,msee:location)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>
<node>
	<production>Prep_toPos(msee:eventdo,msee:object) -- prep_to(msee:eventdo,msee:object)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>


<node>
	<production>Prep_toPos(msee:object1,msee:object2) -- prep_to(msee:object,msee:object)</production>
	<attribute>		
		msee:object1.*= ARG1.FIELD1.msee:object.*;
		msee:object2.*= ARG1.FIELD2.msee:object.*;
	</attribute>
</node>

<node>
	<production>Prep_towardsPos(msee:event,msee:human) -- prep_towards(msee:event,msee:human)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>

<node>
	<production>Prep_towardsPos(msee:event,msee:object) -- prep_towards(msee:event,msee:object)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>


<node>
	<production>Prep_withPos(msee:aux,msee:human) -- prep_with(msee:aux,msee:human)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>


<node>
	<production>Prep_withPos(msee:aux,msee:object) -- prep_with(msee:aux,msee:object)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>

<node>
	<production>Prep_withPos(msee:event,msee:human) -- prep_with(msee:event,msee:human)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>

<node>
	<production>Prep_withPos(msee:event,msee:object) -- prep_with(msee:event,msee:object)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>

<node>
	<production>Prep_withPos(msee:human,msee:object) -- prep_with(msee:human,msee:object)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>

 <node>
	<production>PrtPos(msee:event,msee:fluent) -- prt(msee:event,msee:fluent)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>

 
 <node>
	<production>PrtPos(msee:event,msee:prep) -- prt(msee:event,msee:prep)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>
 
 <node>
	<production>RcmodPos(msee:human,msee:event) -- rcmod(msee:human,msee:event)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>

<node>
	<production>RootSPos(ROOT-0,msee:aux) -- root(ROOT-0,msee:aux)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>

<node>
	<production>RootSPos(ROOT-0,msee:color) -- root(ROOT-0,msee:color)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>

<node>
	<production>RootSPos(ROOT-0,msee:event) -- root(ROOT-0,msee:event)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>
<node>
	<production>RootSPos(ROOT-0,msee:eventdo) -- root(ROOT-0,msee:eventdo)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>
<node>
	<production>RootSPos(ROOT-0,msee:fluent) -- root(ROOT-0,msee:fluent)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>


<node>
	<production>RootSPos(ROOT-0,msee:human) -- root(ROOT-0,msee:human)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>

<node>
	<production>RootSPos(ROOT-0,msee:object) -- root(ROOT-0,msee:object)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>


<node>
	<production>RootSPos(ROOT-0,msee:occupation) -- root(ROOT-0,msee:occupation)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>
<node>
	<production>RootSPos(ROOT-0,msee:race) -- root(ROOT-0,msee:race)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>
<node>
	<production>RootSPos(ROOT-0,msee:religion) -- root(ROOT-0,msee:religion)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>
<node>
	<production>RootSPos(ROOT-0,msee:size) -- root(ROOT-0,msee:size)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>

<node>
	<production>RootSPos(ROOT-0,msee:yearold) -- root(ROOT-0,msee:yearold)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
</node>


<node>
	<production>XcompPos(msee:event1,msee:event2) -- xcomp(msee:event,msee:event)</production>
	<attribute>
		msee:event1.*= ARG1.FIELD1.msee:event.*;
		msee:event2.*= ARG1.FIELD2.msee:event.*;
	</attribute>	
</node>

<node>
	<production>XsubjPos(msee:event,msee:human) -- xsubj(msee:event,msee:human)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>

<node>
	<production>XsubjPos(msee:event,msee:humanname) -- xsubj(msee:event,msee:humanname)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>

<node>
	<production>XsubjPos(msee:event,msee:object) -- xsubj(msee:event,msee:object)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>
<node>
	<production>XsubjPos(msee:event,msee:occupation) -- xsubj(msee:event,msee:occupation)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>

<comment>*************************************************************</comment>
<comment>*************************************************************</comment>
<comment>*************************************************************</comment>
<comment>*************************************************************</comment>

<node><production>RootRobustQuery -- Robust_S Robust_S</production></node>
<node><production>RootRobustQuery -- Robust_S Robust_S Robust_S</production></node>
<node><production>RootRobustQuery -- Robust_S Robust_S Robust_S Robust_S</production></node>
<node><production>RootRobustQuery -- Robust_S Robust_S Robust_S Robust_S Robust_S</production></node>
<node><production>RootRobustQuery -- Robust_S Robust_S Robust_S Robust_S Robust_S Robust_S</production></node>
<node><production>RootRobustQuery -- Robust_S Robust_S Robust_S Robust_S Robust_S Robust_S Robust_S</production></node>
<node><production>RootRobustQuery -- Robust_S Robust_S Robust_S Robust_S Robust_S Robust_S Robust_S Robust_S</production></node>
<node><production>RootRobustQuery -- Robust_S Robust_S Robust_S Robust_S Robust_S Robust_S Robust_S Robust_S Robust_S</production></node>
<node><production>RootRobustQuery -- Robust_S Robust_S Robust_S Robust_S Robust_S Robust_S Robust_S Robust_S Robust_S Robust_S</production></node>
<node><production>RootRobustQuery -- Robust_S Robust_S Robust_S Robust_S Robust_S Robust_S Robust_S Robust_S Robust_S Robust_S Robust_S</production></node>
<node><production>RootRobustQuery -- Robust_S Robust_S Robust_S Robust_S Robust_S Robust_S Robust_S Robust_S Robust_S Robust_S Robust_S Robust_S</production></node>
<node><production>RootRobustQuery -- Robust_S Robust_S Robust_S Robust_S Robust_S Robust_S Robust_S Robust_S Robust_S Robust_S Robust_S Robust_S Robust_S</production></node>
<node><production>RootRobustQuery -- Robust_S Robust_S Robust_S Robust_S Robust_S Robust_S Robust_S Robust_S Robust_S Robust_S Robust_S Robust_S Robust_S Robust_S</production></node>

<comment>*************************************************************</comment>
<comment>following maps single term to specific terms. NO EXPANSION, NO PROCESSING, ALLOWED HERE. </comment>
<comment>*************************************************************</comment>

<node><production>Robust_S -- RS_Amod(msee:human,msee:event)</production></node>		
<node><production>Robust_S -- RS_Amod(msee:object,msee:event)</production></node>		
<node><production>Robust_S -- RS_Attr(msee:aux,msee:what)</production></node>
<node><production>Robust_S -- RS_Attr(msee:aux,msee:who)</production></node>
<node><production>Robust_S -- RS_Attr(msee:object,msee:who)</production></node>
<node><production>Robust_S -- RS_Aux(msee:event,msee:aux)</production></node>
<node><production>Robust_S -- RS_Conj_and(msee:object,msee:event)</production></node>
<node><production>Robust_S -- RS_Cop(msee:object,msee:aux)</production></node>
<node><production>Robust_S -- RS_Dep(msee:event,msee:who)</production></node>		
<node><production>Robust_S -- RS_Det(msee:human,msee:det)</production></node>		
<node><production>Robust_S -- RS_Det(msee:human,msee:what)</production></node>		
<node><production>Robust_S -- RS_Det(msee:object,msee:det)</production></node>		
<node><production>Robust_S -- RS_Det(msee:object,msee:what)</production></node>		
<node><production>Robust_S -- RS_Dobj(msee:event,msee:object)</production></node>		



<node><production>Robust_S -- RS_Nn(msee:event,msee:human)</production></node>		

<node><production>Robust_S -- RS_Nsubj(msee:aux,msee:human)</production></node>		
<node><production>Robust_S -- RS_Nsubj(msee:aux,msee:event)</production></node>		
<node><production>Robust_S -- RS_Nsubj(msee:aux,msee:object)</production></node>		
<node><production>Robust_S -- RS_Nsubj(msee:event,msee:human)</production></node>	
<node><production>Robust_S -- RS_Nsubj(msee:event,msee:who)</production></node>	
<node><production>Robust_S -- RS_Nsubj(msee:object,msee:who)</production></node>	
<node><production>Robust_S -- RS_Prep_with(msee:human,msee:object)</production></node>	
<node><production>Robust_S -- RS_Rcmod(msee:human,msee:event)</production></node>			
<node><production>Robust_S -- RS_RootS(ROOT-0,msee:aux)</production></node>	
<node><production>Robust_S -- RS_RootS(ROOT-0,msee:event)</production></node>	
<node><production>Robust_S -- RS_RootS(ROOT-0,msee:object)</production></node>	


<comment>*************************************************************</comment>
<comment>Now processing single term</comment>
<comment>*************************************************************</comment>
	
	
<node>
	<production>RS_Amod(msee:human,msee:event) -- AmodPos(msee:human,msee:event)</production>
	<attribute>*.*= ARG1.*.*;</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:human.id);
		N2 = CreateEventNodeId(ROOT, msee:event.id);		
		AddAttributeString(N1, "name", msee:human.name);
		AddAttributeString(N1, "type", msee:human.type);
		AddAttributeString(N2, "type", msee:event.type);		
		AddAttributeString(N2, "agent", msee:human.id);
	</veml>
</node>

<node>
	<production>RS_Amod(msee:object,msee:event) -- AmodPos(msee:object,msee:event)</production>
	<attribute>*.*= ARG1.*.*;</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:object.id);
		N2 = CreateEventNodeId(ROOT, msee:event.id);		
		AddAttributeString(N1, "name", msee:object.name);
		AddAttributeString(N1, "type", msee:object.type);
		AddAttributeString(N2, "type", msee:event.type);		
		AddAttributeString(N2, "patient", msee:object.id);
	</veml>
</node>


<node>
	<production>RS_Attr(msee:aux,msee:what) -- AttrPos(msee:aux,msee:what)</production>	
	<attribute>*.*= ARG1.*.*;</attribute>
	<veml>		
		Q1 = CreateSelectNodeId(ROOT, msee:what.id);
		V1 = CreateVariableNodeId(ROOT, msee:what.id);	
	</veml>	
</node>	

<node>
	<production>RS_Attr(msee:aux,msee:who) -- AttrPos(msee:aux,msee:who)</production>	
	<comment>Who is the running man?	
				attr(msee:aux,msee:who) 
				root(ROOT-0,msee:aux) 
				det(msee:human,msee:det) 
				amod(msee:human,msee:event) 
				nsubj(msee:aux,msee:human) 
	</comment>
	<attribute>
		msee:what.* = ARG1.msee:who.*;							
	</attribute>
	<veml>		
		Q1 = CreateSelectNodeId(ROOT, msee:what.id);
		V1 = CreateVariableNodeId(ROOT, msee:what.id);	
	</veml>	
</node>	
		
<node>
	<production>RS_Aux(msee:event,msee:aux) -- AuxPos(msee:event,msee:aux)</production>	
	<attribute>*.* = ARG1.*.*;</attribute>
	<veml>		
		N2 = CreateEventNodeId(ROOT, msee:event.id);		
		AddAttributeString(N2, "type", msee:event.type);
	</veml>	
</node>	f		
		
<node>
	<production>RS_Attr(msee:object,msee:who) -- AttrPos(msee:object,msee:who)</production>	
	<comment>Who is male and has a hat? 
			nsubj(msee:object,msee:who) nsubj(msee:event,msee:who) cop(msee:object,msee:aux) root(ROOT-0,msee:object) conj_and(msee:object,msee:event) det(msee:object,msee:det) dobj(msee:event,msee:object)
	</comment>
	<attribute>*.*= ARG1.*.*;</attribute>
	<veml>		
		Q1 = CreateSelectNodeId(ROOT, msee:object.id);		
		V2 = CreateVariableNodeId(ROOT, msee:object.id);
		N2 = CreateObjectNodeId(ROOT, msee:object.id);				
	</veml>	
</node>	
		
<node>
	<production>RS_Conj_and(msee:object,msee:event) -- Conj_andPos(msee:object,msee:event)</production>
	<attribute>*.*= ARG1.*.*;</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:object.id);
		N2 = CreateEventNodeId(ROOT, msee:event.id);				
		AddAttributeString(N1, "type", msee:object.type);
		AddAttributeString(N2, "type", msee:event.type);	
		AddAttributeString(N2, "agent", msee:object.id);		
	</veml>
</node>

<node>
	<production>RS_Cop(msee:object,msee:aux) -- CopPos(msee:object,msee:aux)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:object.id);
		AddAttributeString(N1, "type", msee:object.type);
	</veml>
</node>

<node>
	<production>RS_Dep(msee:event,msee:who) -- DepPos(msee:event,msee:who)</production>	
	<comment>Who is the man wearing a hat??	
			dep(msee:event,msee:who) aux(msee:event,msee:aux) det(msee:human,msee:det) nsubj(msee:event,msee:human) root(ROOT-0,msee:event) det(msee:object,msee:det) dobj(msee:event,msee:object)
	</comment>
	<attribute>*.*= ARG1.*.*;</attribute>
	<veml>		
		Q1 = CreateSelectNodeId(ROOT, msee:who.id);
		V1 = CreateVariableNodeId(ROOT, msee:who.id);	
		V2 = CreateVariableNodeId(ROOT, msee:event.id);
		N2 = CreateEventNodeId(ROOT, msee:event.id);		
		AddAttributeString(N2, "agent", msee:who.id);
	</veml>	
</node>	
				
<node>
	<production>RS_Det(msee:human,msee:det) -- DetPos(msee:human,msee:det)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:human.id);
		AddAttributeString(N1, "type", msee:human.type);
	</veml>
</node>

<node>
	<production>RS_Det(msee:human,msee:what) -- DetPos(msee:human,msee:what)</production>	
	<comment>Which woman has a hat?  
			det(msee:human,msee:what) nsubj(msee:event,msee:human) root(ROOT-0,msee:event) det(msee:object,msee:det) dobj(msee:event,msee:object) 
	</comment>
	<attribute>*.*= ARG1.*.*;</attribute>
	<veml>		
		Q1 = CreateSelectNodeId(ROOT, msee:what.id);
		V1 = CreateVariableNodeId(ROOT, msee:what.id);	
		V2 = CreateVariableNodeId(ROOT, msee:human.id);
		N1 = CreateObjectNodeId(ROOT, msee:human.id);	
		AddAttributeString(N1, "type", msee:human.type);		
	</veml>	
</node>	

<node>
	<production>RS_Det(msee:object,msee:det) -- DetPos(msee:object,msee:det)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:object.id);
		AddAttributeString(N1, "type", msee:object.type);
	</veml>
</node>

<node>
	<production>RS_Det(msee:object,msee:what) -- DetPos(msee:object,msee:what)</production>	
	<comment>Which woman has a hat?  			
	</comment>
	<attribute>*.*= ARG1.*.*;</attribute>
	<veml>		
		Q1 = CreateSelectNodeId(ROOT, msee:what.id);
		V1 = CreateVariableNodeId(ROOT, msee:what.id);	
		V2 = CreateVariableNodeId(ROOT, msee:object.id);
		N1 = CreateObjectNodeId(ROOT, msee:object.id);	
		AddAttributeString(N1, "type", msee:object.type);		
	</veml>	
</node>	

<node>
	<production>RS_Dobj(msee:event,msee:object) -- DobjPos(msee:event,msee:object)</production>
	<attribute>*.*= ARG1.*.*;</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:object.id);
		N2 = CreateEventNodeId(ROOT, msee:event.id);				
		AddAttributeString(N1, "type", msee:object.type);
		AddAttributeString(N2, "type", msee:event.type);		
		AddAttributeString(N2, "patient", msee:object.id);		
	</veml>
</node>

<node>
	<production>RS_Nn(msee:event,msee:human) -- NnPos(msee:event,msee:human)</production>
	<attribute>*.*= ARG1.*.*;</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:human.id);
		N2 = CreateEventNodeId(ROOT, msee:event.id);		
		AddAttributeString(N1, "name", msee:human.name);
		AddAttributeString(N1, "type", msee:human.type);
		AddAttributeString(N2, "type", msee:event.type);		
		AddAttributeString(N2, "agent", msee:human.id);
	</veml>
</node>

<node>
	<production>RS_Nsubj(msee:aux,msee:event) -- NsubjPos(msee:aux,msee:event)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
	<veml>		
		N2 = CreateEventNodeId(ROOT, msee:event.id);		
		AddAttributeString(N2, "type", msee:event.type);		
	</veml>
</node>

<node>
	<production>RS_Nsubj(msee:aux,msee:human) -- NsubjPos(msee:aux,msee:human)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>

<node>
	<production>RS_Nsubj(msee:aux,msee:object) -- NsubjPos(msee:aux,msee:object)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>

<node>
	<production>RS_Nsubj(msee:event,msee:human) -- NsubjPos(msee:event,msee:human)</production>
	<attribute>*.*= ARG1.*.*;</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:human.id);
		N2 = CreateEventNodeId(ROOT, msee:event.id);		
		AddAttributeString(N1, "name", msee:human.name);
		AddAttributeString(N1, "type", msee:human.type);
		AddAttributeString(N2, "type", msee:event.type);		
		AddAttributeString(N2, "agent", msee:human.id);
	</veml>
</node>


<node>
	<production>RS_Nsubj(msee:event,msee:who) -- NsubjPos(msee:event,msee:who)</production>	
	<comment>Who is male and has a hat? 
				nsubj(msee:object,msee:who) nsubj(msee:event,msee:who) cop(msee:object,msee:aux) root(ROOT-0,msee:object) conj_and(msee:object,msee:event) det(msee:object,msee:det) dobj(msee:event,msee:object)
	</comment>
	<attribute>*.*= ARG1.*.*;</attribute>
	<veml>		
		Q1 = CreateSelectNodeId(ROOT, msee:who.id);
		V1 = CreateVariableNodeId(ROOT, msee:who.id);	
		V2 = CreateVariableNodeId(ROOT, msee:event.id);
		N2 = CreateEventNodeId(ROOT, msee:event.id);		
		AddAttributeString(N2, "agent", msee:who.id);
	</veml>	
</node>	

<node>
	<production>RS_Nsubj(msee:object,msee:who) -- NsubjPos(msee:object,msee:who)</production>	
	<comment>Who is male and has a hat? 
			nsubj(msee:object,msee:who) nsubj(msee:event,msee:who) cop(msee:object,msee:aux) root(ROOT-0,msee:object) conj_and(msee:object,msee:event) det(msee:object,msee:det) dobj(msee:event,msee:object)
	</comment>
	<attribute>*.*= ARG1.*.*;</attribute>
	<veml>		
		Q1 = CreateSelectNodeId(ROOT, msee:who.id);
		V1 = CreateVariableNodeId(ROOT, msee:who.id);	
		V2 = CreateVariableNodeId(ROOT, msee:object.id);
		N2 = CreateObjectNodeId(ROOT, msee:object.id);				
	</veml>	
</node>	


<node>
	<production>RS_Prep_with(msee:human,msee:object) -- Prep_withPos(msee:human,msee:object)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:human.id);
		AddAttributeString(N1, "type", msee:human.type);
		N2 = CreateObjectNodeId(ROOT, msee:object.id);
		AddAttributeString(N2, "type", msee:object.type);
	</veml>
</node>

<node>
	<production>RS_Rcmod(msee:human,msee:event) -- RcmodPos(msee:human,msee:event)</production>
	<attribute>*.*= ARG1.*.*;</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:human.id);
		N2 = CreateEventNodeId(ROOT, msee:event.id);		
		AddAttributeString(N1, "name", msee:human.name);
		AddAttributeString(N1, "type", msee:human.type);
		AddAttributeString(N2, "type", msee:event.type);		
		AddAttributeString(N2, "agent", msee:human.id);
	</veml>
</node>


<node>
	<production>RS_RootS(ROOT-0,msee:aux) -- RootSPos(ROOT-0,msee:aux)</production>
	<attribute>*.* = ARG1.*.*;</attribute>	
</node>

<node>
	<production>RS_RootS(ROOT-0,msee:event) -- RootSPos(ROOT-0,msee:event)</production>
	<attribute>*.*= ARG1.*.*;</attribute>
	<veml>
		N2 = CreateEventNodeId(ROOT, msee:event.id);		
		AddAttributeString(N2, "type", msee:event.type);				
	</veml>
</node>	


<node>
	<production>RS_RootS(ROOT-0,msee:object) -- RootSPos(ROOT-0,msee:object)</production>
	<attribute>*.* = ARG1.*.*;</attribute>
	<veml>
		N1 = CreateObjectNodeId(ROOT, msee:object.id);
		AddAttributeString(N1, "type", msee:object.type);
	</veml>
</node>


</root>



